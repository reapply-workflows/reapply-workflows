{"version":3,"sources":["components/Workflow/Firebase.ts","Store/CompareStore.ts","Utils/DeepCopy.ts","Utils/IDGens.ts","consts.ts","Store/ExploreStore.ts","Store/ProjectStore.ts","Store/ProvenanceActions.ts","Store/Store.ts","components/Comparison/ComparisonScatterplot.tsx","components/Comparison/ComparisonHome.tsx","trrack-vis/Utils/findBundleParent.ts","trrack-vis/Utils/translate.ts","trrack-vis/Utils/TreeLayout.ts","trrack-vis/components/Styles.ts","trrack-vis/components/BackboneNode.tsx","trrack-vis/components/BookmarkNode.tsx","trrack-vis/components/BookmarkListView.tsx","trrack-vis/components/BookmarkTransitions.ts","trrack-vis/components/LinkTransitions.ts","trrack-vis/components/BundleTransitions.ts","trrack-vis/components/Link.tsx","trrack-vis/components/NodeTransitions.ts","trrack-vis/components/UndoRedoButton.tsx","trrack-vis/components/ProvVis.tsx","Utils/Translate.ts","components/Icons.tsx","trrack-vis/components/ProvVisCreator.tsx","components/Dropdown.tsx","components/AddPlotComponent/AddPlot.tsx","components/Navbar.tsx","components/ColorSpecs.ts","components/Predictions/Bar.tsx","components/Predictions/PredictionTable.tsx","components/Brush/Components/RectBrush.tsx","components/Brush/Components/BrushComponent.tsx","components/Scatterplot/styles.ts","components/Comparison/ComparisonMarks.tsx","components/Freeform/FreeFormBrush.tsx","components/Hooks/useScale.ts","components/Hooks/useScatterplot.ts","components/Scatterplot/Axis.tsx","components/Scatterplot/Legend.tsx","components/Scatterplot/Marks.tsx","components/Scatterplot/Overlay/DBScan.tsx","components/Scatterplot/Overlay/KMeans.tsx","components/Scatterplot/Overlay/LR.tsx","components/Scatterplot/Overlay/HatchPattern.tsx","components/Scatterplot/Overlay/Skyline.tsx","components/Scatterplot/Overlay/Overlay.tsx","components/Scatterplot/Overlay/SkylineLegend.tsx","components/Scatterplot/Scatterplot.tsx","components/Comparison/ComparisonLegend.tsx","components/Visualization.tsx","components/Editable.tsx","components/Workflow/Action.tsx","components/Workflow/Workflow.tsx","components/Workflow/Workflows.tsx","components/Explore/ExploreHome.tsx","components/Explore/Explore.tsx","components/Project/HeaderDistribution.tsx","components/Project/DatasetTable.tsx","components/Project/StatusBars.tsx","components/Project/UploadDatasetDialog.tsx","components/Project/ProjectView.tsx","components/Project/AddProjectDialog.tsx","components/Project/Sidebar.tsx","components/Project/ProjectHome.tsx","components/Landing/Landing.tsx","index.tsx"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getGraph","graph","ids","root","current","length","nodes","forEach","id","idx","arr","node","isChildNode","parent","children","push","CompareStore","rootStore","updatedActions","this","makeAutoObservable","projectStore","currentComparisonDatasets","currArr","exploreStore","selectedPoints","Array","from","Set","filteredPoints","provenance","includes","flag","i","isBelowCurrent","deepCopy","obj","JSON","parse","stringify","getPlotId","Date","getTime","toString","SERVER","ExploreStore","isLoadingData","isLoadingPredictions","hoveredPrediction","multiBrushBehaviour","showCategories","brushType","stateRecord","isComparison","predictions","currBrushed","workflows","currentWorkflow","workflowSyncStatus","isImporting","updateBrushed","newSelected","addWorkflow","workflowName","counterInit","Object","values","filter","d","name","startsWith","counter","c","split","parseInt","workflow","project","currentProject","key","renameWorkflow","removeWorkflow","ws","setCurrentWorkflow","addToWorkflow","label","sort","a","b","metadata","createdOn","removeFromWorkflow","setSyncStatus","val","addPlot","plot","currentDatasetKey","addPlotAction","actions","setLabel","state","apply","plots","currentNode","currentNodes","removePlot","removePlotAction","x","y","brushes","pointSelection","filterType","filterAction","type","points","brushSelections","prediction","switchBrush","setFreeformSelection","addPointSelection","isPaintBrush","pointSelectionAction","addPredictions","setBrushSelection","affectedId","addBrushAction","updateBrushAction","removeBrushAction","setPredictionSelection","predictionSelectionAction","original_id","intent","setHoveredPrediction","setComparison","comp","dimensions","plt","Axios","post","selections","then","action","response","data","goToNode","reaction","curr","prev","rec","datasets","dataset","addArtifact","original_dataset","status_record","loadedDataset","Error","sel","memberIds","p","art","getLatestArtifact","artifact","dt_str","window","localStorage","getItem","setItem","ProjectStore","projects","workingDataset","comparisonKeys","isReapplying","versionFromDatasetKey","datasetVersion","ds","find","version","projectByKey","fetchCurrentDataset","get","approveNode","rejectNode","loadDatasetWithReapply","loadProjects","newProjectId","debug","loadProjectByKey","defaultProject","proj","loadDefaultDataset","datasetKey","defaultDatasetKey","map","loadDataset","loadedWorkflowId","loadFromWorkflow","loadSavedProject","loadComparisonDataset","console","log","pop","toJS","loadComparisonFilter","selectedIds","removeIds","idList","j","loadOnlyFilter","entries","ent","getState","base","target","res","setTimeout","workflowId","db","ref","once","loadFromFirebase","snap","wf","n","importProvenanceGraph","projectName","loadDemo","provDb","originMap","source","createdIn","approvedIn","v","rejectedIn","compareStore","updatedFilterPoints","createAction","interaction","saveStateMode","setEventType","selected","brush","provenanceActions","Store","createContext","search","redirectPath","dims","bundledNodes","setQueryParams","searchParams","URLSearchParams","demo","initProvenance","loadFromUrl","done","app","firebase","apps","initializeApp","database","initializeFirebase","useStyles","makeStyles","theme","createStyles","flexGrow","padding","spacing","overflow","grid","height","closeIcon","position","observer","useContext","n_plots","classes","desc","xs","useTheme","loader","CircularProgress","scatterPlots","Grid","item","Paper","elevation","IconButton","className","onClick","alignItems","justify","container","backgroundColor","display","width","gridTemplateRows","layout","gridTemplateColumns","location","useEffect","numericColumns","CssBaseline","ComparisonScatterplot","findBundleParent","nodeId","bundleMap","parentList","bundle","bunchedNodes","translate","treeLayout","currentPath","to","path","reverse","getPathTo","depthMap","explored","toExplore","currDepth","temp","has","add","DFS","final","child","treeColor","style","fill","stroke","BackboneNode","prov","first","iconOnly","duration","radius","strokeWidth","textSize","nodeMap","annotationOpen","bookmark","setAnnotationOpen","exemptList","setExemptList","setAnnotationHeight","eventConfig","popupContent","editAnnotations","annotationContent","approvedFunction","rejectedFunction","currentDataset","nodeCreationMap","expandedClusterList","cursorStyle","cursor","useState","artifacts","annotations","getLatestAnnotation","annotation","annotateText","setAnnotateText","handleCheck","lastAnnotation","trim","addAnnotation","handleClose","handleInputChange","value","glyph","r","dropDownAdded","eventType","bundleGlyph","currentGlyph","backboneGlyph","keys","fontWeight","annotate","actionType","depth","substr","labelG","opacity","transform","alignmentBaseline","fontSize","textAnchor","fontFamily","maxWidth","Button","margin","maxHeight","event","stopPropagation","Icon","color","size","e","nodeClicked","dominantBaseline","labelClicked","getBookmark","setBookmark","enter","timing","delay","start","undefined","Popup","content","trigger","Form","onResize","TextArea","defaultValue","placeholder","rows","marginRight","onInput","innerNode","exemptCopy","splice","findIndex","BookmarkNode","BookmarkListView","bookmarks","bookmarked","keyAccessor","xOffset","yOffset","nodeList","opactiy","leave","update","BookmarkTransitions","innerBookmarks","linkTransitions","clusterOffset","backboneOffset","annotationHeight","x1","x2","y1","y2","clusteredNodesInFront","getX","bundleTransitions","stratifiedMap","highestDepth","lowestDepth","validity","Link","props","nodeTransitions","undoButtonStyle","marginTop","borderRadius","$nest","redoButtonStyle","UndoRedoButton","undoCallback","redoCallback","isAtRoot","isAtLatest","disabled","variant","justifyContent","changeCurrent","gutter","backboneGutter","verticalSpace","clusterVerticalSpace","regularCircleRadius","backboneCircleRadius","regularCircleStroke","backboneCircleStroke","sideOffset","topOffset","linkWidth","clusterLabels","brushCallback","ephemeralUndo","setFirst","list","eventTypes","group","bundleLabel","concat","setExpandedClusterList","types","symbols","d3","conf","regularGlyph","setDefaultConfig","copyList","strat","parentId","localCurr","collapsedParent","bundleParents","allExpanded","stratifiedTree","stratifiedList","descendants","links","shiftLeft","svgWidth","bookmarkTabView","graphTabView","goForwardToNonEphemeral","goForwardOneStep","goBackToNonEphemeral","goBackOneStep","link","linkArr","onMouseOut","onMouseOver","rx","ry","panes","menuItem","icon","render","Tab","Pane","attached","overflowX","overflowY","menu","secondary","pointing","ChangeBrushType","viewBox","strokeLinecap","strokeLinejoin","Filter","RemoveBrush","ChangeBrush","Invert","TurnPrediction","LockPrediction","AddBrush","PointDeselection","PointSelection","AddPlot","LoadDataset","MultiBrush","SwitchCategoryVisibility","ChangeBrushSize","ChangeCategory","configure","isolateGlobalState","formControl","useDropdown","defaultState","opts","setVal","setSelected","handleChange","Dropdown","FormControl","InputLabel","Select","labelId","onChange","opt","MenuItem","divSpacing","center","anchor","setAnchor","columns","col","columnInfo","fullname","unit","xCol","XDropdown","setX","yCol","YDropdown","setY","useCallback","handleSubmit","startIcon","currentTarget","Menu","anchorEl","open","Boolean","onClose","button","divider","ButtonGroup","fullWidth","minWidth","formControlwoWidth","Navbar","AppBar","Toolbar","Divider","orientation","flexItem","ToggleButtonGroup","exclusive","_","bt","ToggleButton","whyDidYouRender","logOnDifferentValues","MATCHES","IPNS","ISNP","UNION","common","foreground","background","rank","toFixed","useRef","setWidth","bounds","getBoundingClientRect","scale","useMemo","scaleLinear","domain","range","clsx","Typography","component","centerContainer","flexDirection","table","tableLayout","debouncedSetHoveredPrediction","debounce","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","pred","hover","Tooltip","title","description","hash","closeIconText","closeIconBackground","resizeBase","pointerEvents","ns","ew","nwse","nesw","RectBrush","onMouseDown","onResizeStart","closeHandler","resizeHandlerSize","showIcon","setShowIcon","timeoutId","setTimeoutId","clearInterval","baseRectangle","onMouseEnter","onMouseLeave","tout","northRect","southRect","westRect","eastRect","nwRect","neRect","swRect","seRect","dy","BrushComponent","left","right","top","bottom","xScale","yScale","onBrushHandler","disableBrush","overlayRef","mouseDownCreation","setMouseDownCreation","mouseDownMove","setMouseDownMove","mouseDownResize","setMouseDownResize","resizeDirection","setResizeDirection","activeBrush","setActiveBrush","diff","setDiff","Math","abs","yScaleUpdated","copy","pixelX","pixelY","dataX","invert","dataY","extentToPixel","extentToData","searchArea","quadTree","quadtree","extent","addAll","selectedNodes","visit","rect1","rect2","rect","point","newNode","next","useQuadSearch","onBrush","br","extents","closeBrushHandler","creationMouseDownHandler","clientX","clientY","creationMouseMoveHandler","targetNode","creationMouseUpHandler","correctBrushExtents","moveMouseDownHandler","currX","currY","moveMouseMoveHandler","brushHeight","brushWidth","diffX","diffY","newX","newY","moveMouseUpHandler","resizeMouseDownHandler","brushId","direction","resizeMouseMoveHandler","resizeMouseUpHandler","addEventListener","removeEventListener","renderActiveBrush","overlay","brushList","renderedBrushes","bottomLayer","topLayer","input","useScatterplotStyle","newColor","removedColor","newMark","removedMark","movedLine","movedPoint","regularMark","nonUnionMark","unionMark","regularForceMark","intermittentHighlight","matches","isnp","ipns","createComet","theta","atan","xLength","cos","yLength","sin","compPoints","dataDisplay","editGroup","cx","cy","brushStyle","transition","brushDown","brushHide","isInCircle","x_sq","pow","y_sq","sqrt","extentPadding","brushSize","brushRef","layerRef","selectedPointsRef","mouseIn","setMouseIn","mouseDown","setMouseDown","x0","x3","y0","y3","handleMouseUp","handleMove","nodeSelection","select","edgeY","attr","removeEvent","useScale","nice","d0","d1","r0","r1","clamp","useScatterplotData","comparisonData","compDataFull","compDataset","origCompFull","origCompDataset","fullData","workingValues","compData","compDatasetValues","origCompData","originaCompValues","allPoints","x_extents","y_extents","columnName","gRef","axis","axisLeft","axisRight","axisBottom","axisTop","tickFormat","call","labelTransform","max","column","short","offset","dx","membership","matchIds","isnpIds","ipnsIds","info","lineGen","line","hull","selected_center","sym","symbol","symbolWye","coeff","intercept","threshold","oy1","oy2","ooy1","ooy2","clipPath","HatchPattern","patternTransform","patternUnits","lineBase","strokeOpacity","hatch","frontier","sense","x_sense","y_sense","scaled_frontier","x_lines","y_lines","algorithm","lineHeight","dimension","originalMarks","labelColumn","showMatchesLegend","showSkylineLegend","selectedPointsComparison","sp_dimension","freeFormBrushHandler","selectorString","join","selectAll","classed","rectBrushHandler","selection","brs","entry","ComparisonMarks","setDataDisplay","chips","flexWrap","spContainerDimension","ComparisonLegend","Chip","FormControlLabel","control","Switch","checked","labelPlacement","text","handleType","isEditing","setIsEditing","Input","onBlur","noWrap","card","marginBottom","close","marginLeft","isRejected","Card","CardContent","CardActions","disableSpacing","badge_sync","green","badge_unsync","red","openCopyMessage","setOpenCopyMessage","isSync","isCurrent","copyId","el","document","createElement","setAttribute","body","appendChild","execCommand","removeChild","Badge","badge","sync","set","storeToFirebase","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","border","boxShadow","x_index","y_index","nodeID","undoRedoButtons","pathname","CategoricalHeader","dataType","useDataGridFormat","comparisonDataset","headerHeight","firstTable","st","field","headerName","flex","renderHeader","params","colDef","renderCell","row","Label","getValue","cellClassName","centerText","DatasetTable","gridColumnStart","gridColumnEnd","columnNum","autoPageSize","pagination","ComparisonTable","trackers","updateWhenDone","statuses","setStatuses","complete","setComplete","intervalId","setInterval","stats","s","status","List","processed","to_process","ListItem","ListItemText","LinearProgress","queryClient","QueryClient","showStatus","setShowStatus","processingComplete","setProcessingComplete","setTrackers","fields","formData","FormData","append","headers","initialValues","useDatasetFormManagement","formik","useFormik","onSubmit","Dialog","DialogTitle","DialogContent","TextField","required","multiline","hidden","files","setFieldValue","QueryClientProvider","client","DialogActions","isSubmitting","form","colorClass","loadedDatasetKey","openUploadDatasetDialog","setOpenUploadDatasetDialog","comparisonView","setComparisonView","datasetOptions","DatasetDropdown","inputProps","setId","setName","message","setMessage","openSnackbar","setOpenSnackbar","createProject","catch","finally","DialogContentText","drawerWidth","appBar","drawer","flexShrink","drawerPaper","toolbar","mixins","selectProject","setOpen","Drawer","paper","ListItemIcon","primary","media","gridGap","gridContainer","buttonContainer","demoList","imageList","process","linkList","colabLinkList","CardMedia","image","indexOf","gutterBottom","href","React","trackAllPureComponents","exclude","Explore","exact","ProjectHome","Landing","ComparisonHome","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.de2ed764.chunk.js","sourcesContent":["import { isChildNode, NodeID } from '@visdesignlab/trrack';\nimport firebase from 'firebase/app';\n\nimport 'firebase/database';\nimport { WorkflowType } from '../../Store/ExploreStore';\n\nimport { IntentGraph, IntentNode } from './../../Store/Types/ProvenanceType';\n\nconst config = {\n  apiKey: 'AIzaSyB8jzc6Gck2Rt-rrw-ZbACudr5VqESRNRY',\n  authDomain: 'reusing-intent.firebaseapp.com',\n  projectId: 'reusing-intent',\n  storageBucket: 'reusing-intent.appspot.com',\n  messagingSenderId: '290275127628',\n  appId: '1:290275127628:web:e332ddfe7bada09cff5fe9',\n  measurementId: 'G-K9KB7W1VM3',\n};\n\nexport function initializeFirebase() {\n  const app: firebase.app.App =\n    firebase.apps.length === 0 ? firebase.initializeApp(config) : firebase.app();\n\n  const db = firebase.database(app);\n  const provDb = app.database('https://reusing-demos.firebaseio.com/');\n\n  return {\n    config,\n    app,\n    db,\n    provDb,\n  };\n}\n\nexport function storeToFirebase(\n  id: string,\n  graph: IntentGraph,\n  workflow: WorkflowType,\n  db: firebase.database.Database,\n  sync: (key: string, val: string) => void,\n) {\n  const wf = {\n    id: workflow.id,\n    name: workflow.name,\n    project: workflow.project,\n    graph: getGraph(graph, workflow.graph),\n  };\n\n  db.ref(`${id}`)\n    .set(wf)\n    .then(() => {\n      sync(id, JSON.stringify(workflow));\n    });\n}\n\nexport function storeProvenance(\n  graph: IntentGraph,\n  workflows: { [key: string]: WorkflowType },\n  db: firebase.database.Database,\n  projName: string,\n) {\n  const s = {\n    wf: workflows,\n    graph,\n  };\n\n  return db.ref(projName).set(s);\n}\n\nexport function loadFromFirebase(db: firebase.database.Database, workflowId: string) {\n  return db.ref(workflowId).once('value');\n}\n\nexport function loadDemo(db: firebase.database.Database, projectName: string) {\n  return db.ref(projectName).once('value');\n}\n\nfunction getGraph(graph: IntentGraph, ids: NodeID[]) {\n  const root = graph.root;\n\n  const current = ids[ids.length - 1];\n\n  const nodes: IntentNode = {};\n  nodes[graph.root] = graph.nodes[graph.root];\n\n  ids.forEach((id, idx, arr) => {\n    const node = graph.nodes[id];\n\n    if (isChildNode(node)) {\n      if (idx === 0) {\n        node.parent = root;\n        nodes[root].children = [];\n        nodes[root].children.push(id);\n      } else {\n        const parent = arr[idx - 1];\n        node.parent = parent;\n        nodes[parent].children = [];\n        nodes[parent].children.push(id);\n      }\n    }\n\n    nodes[id] = node;\n  });\n\n  return {\n    current,\n    root,\n    nodes,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { makeAutoObservable } from 'mobx';\n\nimport { RootStore } from './Store';\n\nexport class CompareStore {\n  rootStore: RootStore;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updatedActions: any;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n  }\n\n  // ##################################################################### //\n  // ############################## Getters ############################## //\n  // ##################################################################### //\n\n  get compDataset() {\n    const dataset = this.rootStore.projectStore.currentComparisonDatasets[1];\n\n    return dataset;\n  }\n\n  get selectedPointsComparison() {\n\n    const currArr = this.rootStore.exploreStore.selectedPoints;\n\n    return Array.from(new Set(currArr));\n  }\n\n  get updatedFilterPoints() {\n    return this.rootStore.exploreStore.filteredPoints;\n    // let arr = this.rootStore.state.filterList;\n\n    // const graph = this.rootStore.exploreStore.provenance.graph;\n\n    // const filterNodes = Object.values(graph.nodes).filter((d) => d.label === 'Filter');\n\n    // if (filterNodes.length > 0 && this.updatedActions) {\n    //   filterNodes\n    //     .filter((d) => !this.isBelowCurrent(d.id, graph.current))\n    //     .forEach((d) => {\n    //       const act = this.updatedActions[d.id];\n    //       arr.push(...act.added);\n\n    //       arr = arr.filter((d) => !act.removed.includes(d));\n    //     });\n    // }\n\n    // this.rootStore.state.filterList = arr;\n\n    // return arr;\n  }\n\n  // ##################################################################### //\n  // ############################## Helpers ############################## //\n  // ##################################################################### //\n\n  isBelowCurrent(id: string, current: string): boolean {\n    const graph = this.rootStore.exploreStore.provenance.graph;\n\n    if (graph.nodes[current].children.length === 0 || id === current) {\n      return false;\n    } else if (graph.nodes[current].children.includes(id)) {\n      return true;\n    }\n\n    let flag = false;\n\n    for (const i of graph.nodes[current].children) {\n      if (!flag) flag = this.isBelowCurrent(id, i);\n    }\n\n    return flag;\n  }\n}\n","function deepCopy<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport default deepCopy;\n","export function getPlotId(): string {\n  return `plot${new Date().getTime().toString()}`;\n}\n\nexport function getBrushId(): string {\n  return `brush${new Date().getTime().toString()}`;\n}\n\nexport function getWorkflowID(): string {\n  return `workflow${new Date().getTime().toString()}`;\n}\n","export const SERVER =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1' : 'https://reusing.sci.utah.edu';\n","import { isChildNode, NodeID } from '@visdesignlab/trrack';\nimport Axios, { AxiosResponse } from 'axios';\nimport { action, makeAutoObservable, reaction } from 'mobx';\n\nimport deepCopy from '../Utils/DeepCopy';\nimport { getWorkflowID } from '../Utils/IDGens';\n\nimport { BrushAffectType, BrushCollection } from './../components/Brush/Types/Brush';\nimport { SERVER } from './../consts';\nimport { BrushType, ExtendedBrushCollection, MultiBrushBehaviour } from './IntentState';\nimport { RootStore } from './Store';\nimport { Status } from './Types/Artifacts';\nimport { Dataset } from './Types/Dataset';\nimport { Plot, Plots } from './Types/Plot';\nimport { Prediction, Predictions } from './Types/Prediction';\n\nfunction getDefaultRecord(): Record {\n  return {\n    plots: {},\n    brushes: {},\n    brushSelections: {},\n    pointSelection: {},\n    prediction: null,\n    filter: null,\n  };\n}\n\ntype Filter = {\n  type: 'In' | 'Out';\n  points: string[];\n};\n\ntype Record = {\n  plots: Plots;\n  brushes: { [key: string]: BrushCollection };\n  brushSelections: { [key: string]: string[] };\n  pointSelection: { [key: string]: string[] };\n  prediction: Prediction | null;\n  filter: Filter | null;\n};\n\nexport type WorkflowType = {\n  id: string;\n  project: string;\n  name: string;\n  graph: NodeID[];\n};\n\ntype Workflows = { [key: string]: WorkflowType };\n\nexport class ExploreStore {\n  rootStore: RootStore;\n  isLoadingData = false;\n  isLoadingPredictions = false;\n  hoveredPrediction: Prediction | null = null;\n  multiBrushBehaviour: MultiBrushBehaviour = 'Union';\n  showCategories = false;\n  brushType: BrushType = 'Rectangular';\n  stateRecord: { [key: string]: Record } = {};\n  isComparison = false;\n  predictions: Predictions = [];\n  currBrushed: string[] = [];\n  workflows: Workflows = {};\n  currentWorkflow: string | null = null;\n  workflowSyncStatus: { [key: string]: string } = {};\n  isImporting = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.state,\n      () => {\n        this.addPredictions();\n      },\n    );\n\n    reaction(\n      () => Object.values(this.provenance.graph.nodes).length,\n      (curr, prev) => {\n        if (this.isImporting) return;\n\n        if (prev === 1 && curr !== 2) return;\n\n        const rec: { [key: string]: Status } = {};\n\n        this.currentProject.datasets.forEach((dataset) => {\n          rec[dataset.key] = this.currentDatasetKey === dataset.key ? 'Accepted' : 'Unknown';\n        });\n\n        this.provenance.addArtifact({\n          original_dataset: this.currentDatasetKey,\n          status_record: rec,\n        });\n      },\n    );\n  }\n\n  // ##################################################################### //\n  // ############################## Getters ############################## //\n  // ##################################################################### //\n\n  get state() {\n    if (!this.currentNode || !(this.currentNode in this.stateRecord)) return getDefaultRecord();\n\n    return deepCopy(this.stateRecord[this.currentNode]);\n  }\n\n  get currentNode() {\n    return this.provenance.current.id;\n  }\n\n  get currentDatasetKey() {\n    return this.rootStore.projectStore.currentDatasetKey;\n  }\n\n  get currentDataset() {\n    const dataset = this.rootStore.projectStore.loadedDataset;\n\n    if (!dataset) throw new Error('Dataset not loaded');\n\n    return dataset;\n  }\n\n  get showSkylineLegend() {\n    return this.hoveredPrediction && this.hoveredPrediction.intent === 'Skyline';\n  }\n\n  get showMatchesLegend() {\n    return this.hoveredPrediction ? true : false;\n  }\n\n  get provenance() {\n    return this.rootStore.provenance;\n  }\n\n  get currentProject() {\n    const curr = this.rootStore.projectStore.currentProject;\n\n    if (!curr) throw new Error();\n\n    return curr;\n  }\n\n  get n_plots() {\n    return this.plots.length;\n  }\n\n  get plots() {\n    return Object.values(this.state.plots);\n  }\n\n  get selectedPoints() {\n    const selections: string[] = [];\n\n    const { brushSelections } = this.state;\n\n    Object.values(brushSelections).forEach((sel) => {\n      selections.push(...sel);\n    });\n\n    Object.values(this.state.pointSelection).forEach((sel) => selections.push(...sel));\n\n    if (this.state.prediction) selections.push(...this.state.prediction.memberIds);\n\n    return deepCopy(Array.from(new Set(selections)));\n  }\n\n  get filteredPoints() {\n    const selections: string[] = [];\n\n    const { filter } = this.state;\n\n    if (!filter) return [];\n\n    Object.values(filter.points).forEach((p) => {\n      selections.push(p);\n    });\n\n    return deepCopy(Array.from(new Set(selections)));\n  }\n\n  get workingValues() {\n    const { filter } = this.state;\n\n    if (!filter) return this.loadedDataset.values;\n\n    const { type, points } = filter;\n\n    if (type === 'In') {\n      return this.loadedDataset.values.filter((d) => points.includes(d.id));\n    }\n\n    return this.loadedDataset.values.filter((d) => !points.includes(d.id));\n  }\n\n  get artifact() {\n    const art = this.provenance.getLatestArtifact();\n\n    if (!art)\n      return {\n        original_dataset: null,\n        status_record: {},\n      };\n\n    return art.artifact;\n  }\n\n  // get predictions() {\n  //   return this.artifact.predictions || [];\n  // }\n\n  get loadedDataset() {\n    let dataset = this.rootStore.projectStore.loadedDataset;\n\n    if (!dataset) {\n      const dt_str = window.localStorage.getItem('dataset');\n\n      if (!dt_str) throw new Error('Dataset not loaded');\n\n      dataset = JSON.parse(dt_str) as Dataset;\n\n      return dataset;\n    }\n\n    window.localStorage.setItem('dataset', JSON.stringify(dataset));\n\n    return dataset;\n  }\n\n  get compDataset() {\n    let dataset = this.rootStore.projectStore.currentComparisonDatasets[1];\n\n    if (!dataset) {\n      const dt_str = window.localStorage.getItem('dataset');\n\n      if (!dt_str) throw new Error('Dataset not loaded');\n\n      dataset = JSON.parse(dt_str) as Dataset;\n\n      return dataset;\n    }\n\n    window.localStorage.setItem('dataset', JSON.stringify(dataset));\n\n    return dataset;\n  }\n\n  get origCompDataset() {\n    let dataset = this.rootStore.projectStore.currentComparisonDatasets[0];\n\n    if (!dataset) {\n      const dt_str = window.localStorage.getItem('dataset');\n\n      if (!dt_str) throw new Error('Dataset not loaded');\n\n      dataset = JSON.parse(dt_str) as Dataset;\n\n      return dataset;\n    }\n\n    window.localStorage.setItem('dataset', JSON.stringify(dataset));\n\n    return dataset;\n  }\n\n  // ##################################################################### //\n  // ########################### Store Helpers ########################### //\n  // ##################################################################### //\n\n  updateBrushed = (newSelected: string[]) => {\n    this.currBrushed = newSelected;\n  };\n\n  addWorkflow = (workflowName?: string) => {\n    const counterInit = Object.values(this.workflows).filter((d) =>\n      d.name.startsWith('Workflow #'),\n    );\n\n    let counter = 1;\n\n    if (counterInit.length > 0) {\n      const c = counterInit[counterInit.length - 1].name.split('#');\n      counter = parseInt(c[c.length - 1]) + 1;\n    }\n\n    const workflow: WorkflowType = {\n      id: getWorkflowID(),\n      project: this.currentProject.key,\n      name: workflowName ? workflowName : `Workflow #${counter}`,\n      graph: [],\n    };\n\n    this.workflows[workflow.id] = workflow;\n    this.currentWorkflow = workflow.id;\n  };\n\n  renameWorkflow = (id: string, name: string) => {\n    this.workflows[id].name = name;\n  };\n\n  removeWorkflow = (id: string) => {\n    delete this.workflows[id];\n\n    if (this.currentWorkflow === id && Object.values(this.workflows).length > 0) {\n      const ws = Object.values(this.workflows);\n      this.currentWorkflow = ws[ws.length - 1].id;\n    } else if (!this.workflows[id]) {\n      this.currentWorkflow = null;\n    }\n  };\n\n  setCurrentWorkflow = (id: string) => {\n    this.currentWorkflow = id;\n  };\n\n  addToWorkflow = (id: string) => {\n    if (!this.currentWorkflow) return;\n\n    if (!this.workflows[this.currentWorkflow]) return;\n\n    const { graph } = this.workflows[this.currentWorkflow];\n\n    if (graph.includes(id)) return;\n\n    let current = this.provenance.graph.nodes[id];\n\n    while (current.label !== 'Root') {\n      if (!isChildNode(current)) break;\n\n      if (!graph.includes(current.id)) graph.push(current.id);\n\n      current = this.provenance.graph.nodes[current.parent];\n    }\n\n    graph.sort(\n      (a, b) =>\n        (this.provenance.graph.nodes[a].metadata.createdOn || -1) -\n        (this.provenance.graph.nodes[b].metadata.createdOn || -1),\n    );\n\n    this.workflows[this.currentWorkflow].graph = [...graph];\n  };\n\n  removeFromWorkflow = (id: string) => {\n    if (!this.currentWorkflow) return;\n    this.workflows[this.currentWorkflow].graph = this.workflows[this.currentWorkflow].graph.filter(\n      (d) => d !== id,\n    );\n  };\n\n  setSyncStatus = (key: string, val: string) => {\n    this.workflowSyncStatus[key] = val;\n  };\n\n  // ##################################################################### //\n  // ######################### Provenance Actions ######################## //\n  // ##################################################################### //\n\n  addPlot = (plot: Plot): void => {\n    if (!this.currentDatasetKey) return;\n    const { addPlotAction } = this.rootStore.actions;\n    addPlotAction.setLabel('Add Plot');\n    const { state } = this;\n\n    this.provenance.apply(addPlotAction(plot));\n\n    state.plots[plot.id] = plot;\n\n    this.stateRecord[this.currentNode] = state;\n\n    this.rootStore.currentNodes.push(this.provenance.graph.current);\n  };\n\n  removePlot = (plot: Plot) => {\n    const { removePlotAction } = this.rootStore.actions;\n\n    removePlotAction.setLabel(`Remove plot: ${plot.x} - ${plot.y}`);\n\n    const { state } = this;\n    this.provenance.apply(removePlotAction(plot));\n    delete state.plots[plot.id];\n\n    if (plot.id in state.brushes) delete state.brushes[plot.id];\n\n    if (plot.id in state.pointSelection) delete state.pointSelection[plot.id];\n\n    this.stateRecord[this.currentNode] = state;\n\n    this.rootStore.currentNodes.push(this.provenance.graph.current);\n  };\n\n  filter = (filterType: 'In' | 'Out') => {\n    const { filterAction } = this.rootStore.actions;\n\n    filterAction.setLabel(`Filter: ${filterType}`);\n    const { state } = this;\n    const filter: Filter = { type: filterType, points: this.selectedPoints };\n\n    this.provenance.apply(filterAction(filterType));\n\n    state.brushes = {};\n    state.brushSelections = {};\n    state.pointSelection = {};\n    state.prediction = null;\n    state.filter = filter;\n\n    this.stateRecord[this.currentNode] = state;\n\n    this.rootStore.currentNodes.push(this.provenance.graph.current);\n  };\n\n  switchBrush = (brushType: BrushType) => {\n    this.brushType = brushType;\n  };\n\n  setFreeformSelection = (plot: Plot, points: string[]) => {\n    this.addPointSelection(plot, points, true);\n  };\n\n  addPointSelection = (plot: Plot, points: string[], isPaintBrush = false) => {\n    if (points.length === 0) return;\n\n    const { state } = this;\n\n    const { pointSelectionAction } = this.rootStore.actions;\n\n    pointSelectionAction.setLabel(\n      isPaintBrush ? `P. Brush: ${points.length}` : `Add Point Selection`,\n    );\n    this.provenance.apply(pointSelectionAction(plot, points));\n\n    if (!(plot.id in state.pointSelection)) {\n      state.pointSelection[plot.id] = [];\n    }\n    state.pointSelection[plot.id].push(...points);\n\n    this.stateRecord[this.currentNode] = state;\n\n    this.rootStore.currentNodes.push(this.provenance.graph.current);\n\n    this.addPredictions();\n  };\n\n  setBrushSelection = (\n    plot: Plot,\n    brushes: ExtendedBrushCollection,\n    type: BrushAffectType,\n    affectedId: string,\n  ) => {\n    const { addBrushAction, updateBrushAction, removeBrushAction } = this.rootStore.actions;\n    const { state } = this;\n\n    switch (type) {\n      case 'Add':\n        addBrushAction.setLabel(`Added brush to: ${plot.x}-${plot.y}`);\n        this.provenance.apply(addBrushAction(plot, brushes[affectedId]));\n        state.brushSelections[affectedId] = brushes[affectedId].points;\n        state.brushes[plot.id] = brushes;\n        break;\n      case 'Update':\n        updateBrushAction.setLabel(`Updated brush in: ${plot.x}-${plot.y}`);\n        this.provenance.apply(updateBrushAction(plot, brushes[affectedId]));\n        state.brushSelections[affectedId] = brushes[affectedId].points;\n        state.brushes[plot.id] = brushes;\n        break;\n      case 'Remove':\n        removeBrushAction.setLabel(`Removed brush in: ${plot.x}-${plot.y}`);\n        this.provenance.apply(removeBrushAction(plot, affectedId));\n        delete state.brushSelections[affectedId];\n        delete brushes[affectedId];\n        state.brushes[plot.id] = brushes;\n        break;\n      default:\n        break;\n    }\n\n    this.stateRecord[this.currentNode] = state;\n    this.addPredictions();\n    //\n  };\n\n  setPredictionSelection = (prediction: Prediction) => {\n    const { predictionSelectionAction } = this.rootStore.actions;\n    const { state } = this;\n    prediction.original_id = this.currentDatasetKey || '';\n    predictionSelectionAction.setLabel(`${prediction.intent} Selection`);\n    this.provenance.apply(predictionSelectionAction(prediction));\n    state.brushes = {};\n    state.brushSelections = {};\n    state.pointSelection = {};\n    state.prediction = prediction;\n\n    this.stateRecord[this.currentNode] = state;\n    this.addPredictions();\n  };\n\n  // ##################################################################### //\n  // ########################### Store Actions ########################### //\n  // ##################################################################### //\n\n  setHoveredPrediction = (prediction: Prediction | null) => {\n    this.hoveredPrediction = prediction;\n  };\n\n  setComparison = (comp: boolean) => {\n    this.isComparison = comp;\n  };\n\n  // ##################################################################### //\n  // ######################### Provenance Helpers ######################## //\n  // ##################################################################### //\n\n  addPredictions = () => {\n    this.hoveredPrediction = null;\n    const dimensions: string[] = [];\n\n    if (this.selectedPoints.length === 0) return;\n\n    this.isLoadingPredictions = true;\n\n    Object.values(this.state.plots).forEach((plt) => {\n      dimensions.push(...[plt.x, plt.y]);\n    });\n\n    Axios.post(`${SERVER}/${this.currentProject.key}/dataset/predict/${this.currentDatasetKey}`, {\n      selections: this.selectedPoints,\n      dimensions,\n    }).then(\n      action((response: AxiosResponse<Predictions>) => {\n        const { data = [] } = response;\n        // this.provenance.addArtifact({ ...this.artifact, predictions: data });\n        this.predictions = data;\n        this.isLoadingPredictions = false;\n      }),\n    );\n  };\n\n  goToNode = (id: NodeID): void => {\n    this.provenance.goToNode(id);\n  };\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { isChildNode } from '@visdesignlab/trrack';\nimport Axios, { AxiosResponse } from 'axios';\nimport { action, makeAutoObservable, reaction, toJS } from 'mobx';\n\nimport { loadDemo, loadFromFirebase } from '../components/Workflow/Firebase';\nimport { SERVER } from '../consts';\nimport { OriginMap } from '../trrack-vis/Utils/BundleMap';\nimport deepCopy from '../Utils/DeepCopy';\n\nimport { Source } from './../trrack-vis/Utils/BundleMap';\nimport { ExploreStore } from './ExploreStore';\nimport { RootStore } from './Store';\nimport { Dataset } from './Types/Dataset';\nimport { Project, ProjectList, UploadedDatasetList } from './Types/Project';\n\nexport class ProjectStore {\n  rootStore: RootStore;\n  currentProject: Project | null = null;\n  projects: ProjectList = [];\n  loadedDataset: Dataset | null = null;\n  workingDataset: Dataset | null = null;\n  currentDatasetKey: string | null = null;\n  currentComparisonDatasets: Dataset[] = [];\n  comparisonKeys: string[] = [];\n\n  isReapplying = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    makeAutoObservable(this);\n    this.loadProjects();\n\n    reaction(\n      () => this.currentDatasetKey,\n      () => this.fetchCurrentDataset(),\n    );\n  }\n\n  loadFromWorkflow() {\n    const workflowId = this.rootStore.loadedWorkflowId;\n\n    if (!workflowId) return;\n\n    loadFromFirebase(this.rootStore.db, workflowId).then(\n      action((snap) => {\n        const workflow = snap.val();\n        this.rootStore.exploreStore.isImporting = true;\n\n        if (this.currentProject && this.currentDatasetKey) {\n          const graph = workflow.graph;\n\n          const wf = { ...workflow, graph: [] };\n          this.rootStore.exploreStore.workflows[wf.id] = wf;\n          this.rootStore.exploreStore.setCurrentWorkflow(wf.id);\n\n          for (const n in graph.nodes) {\n            if (!graph.nodes[n].children) graph.nodes[n].children = [];\n          }\n\n          this.provenance.importProvenanceGraph(graph);\n\n          this.loadDatasetWithReapply(this.currentDatasetKey);\n\n          for (const n in graph.nodes) {\n            if (isChildNode(graph.nodes[n])) {\n              this.rootStore.exploreStore.addToWorkflow(n);\n            }\n          }\n        }\n        this.rootStore.exploreStore.isImporting = false;\n      }),\n    );\n  }\n\n  loadSavedProject() {\n    const projectName = this.rootStore.loadSavedProject;\n\n    const datasetKey = this.currentDatasetKey;\n\n    if (!projectName) return;\n\n    if (!datasetKey) return;\n\n    loadDemo(this.rootStore.provDb, projectName).then(\n      action((snap) => {\n        const { graph, wf } = snap.val();\n\n        for (const n in graph.nodes) {\n          if (!graph.nodes[n].children) graph.nodes[n].children = [];\n        }\n\n        this.provenance.importProvenanceGraph(graph);\n        this.loadDatasetWithReapply(datasetKey);\n        this.rootStore.exploreStore.workflows = wf;\n\n        if (Object.values(wf).length > 0) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          this.rootStore.exploreStore.currentWorkflow = (Object.values(wf)[0] as any).id;\n        }\n      }),\n    );\n  }\n\n  // ##################################################################### //\n  // ############################## Getters ############################## //\n  // ##################################################################### //\n\n  get provenance() {\n    return this.rootStore.provenance;\n  }\n\n  get loadedDatasetKey() {\n    return this.currentDatasetKey || '';\n  }\n\n  get nodeCreationMap(): OriginMap {\n    const originMap: OriginMap = {};\n\n    Object.values(this.provenance.graph.nodes).forEach((node) => {\n      const art = this.provenance.getLatestArtifact(node.id);\n\n      if (!art) return;\n\n      const { artifact } = art;\n\n      const { original_dataset } = artifact;\n\n      const datasetKey = this.versionFromDatasetKey(original_dataset);\n\n      const source: Source = {\n        createdIn: datasetKey,\n        approvedIn: Object.entries(artifact.status_record)\n          .filter((v) => v[1] === 'Accepted')\n          .map((v) => this.versionFromDatasetKey(v[0])),\n        rejectedIn: Object.entries(artifact.status_record)\n          .filter((v) => v[1] === 'Rejected')\n          .map((v) => this.versionFromDatasetKey(v[0])),\n      };\n\n      // source.approvedIn.push(source.createdIn);\n\n      originMap[node.id] = source;\n    });\n\n    return originMap;\n  }\n\n  get compDatasetValues() {\n    if (this.currentComparisonDatasets.length < 2) {\n      return [];\n    }\n\n    return this.currentComparisonDatasets[1].values.filter(\n      (d) => !this.rootStore.compareStore.updatedFilterPoints.includes(d.id),\n    );\n  }\n\n  get originaCompValues() {\n    if (this.currentComparisonDatasets.length < 2) {\n      return [];\n    }\n\n    return this.currentComparisonDatasets[0].values.filter(\n      (d) => !this.rootStore.compareStore.updatedFilterPoints.includes(d.id),\n    );\n  }\n\n  // ##################################################################### //\n  // ########################### Store Helpers ########################### //\n  // ##################################################################### //\n\n  versionFromDatasetKey = (key: string | null) => {\n    let datasetVersion = '';\n\n    if (this.currentProject && key) {\n      const ds = this.currentProject.datasets.find((d) => d.key === key);\n\n      if (ds) {\n        datasetVersion = ds.version;\n      }\n    }\n\n    return datasetVersion;\n  };\n\n  projectByKey = (key: string) => {\n    const proj = this.projects.find((p) => p.key === key);\n\n    return proj;\n  };\n\n  fetchCurrentDataset = () => {\n    if (!this.currentProject || !this.currentDatasetKey) return;\n\n    Axios.get(`${SERVER}/${this.currentProject.key}/dataset/${this.currentDatasetKey}`).then(\n      action((response: AxiosResponse<Dataset>) => {\n        this.loadedDataset = response.data;\n        this.workingDataset = response.data;\n      }),\n    );\n  };\n\n  approveNode = (id: string) => {\n    let { artifact = null } = this.provenance.getLatestArtifact(id) || {};\n\n    if (artifact) {\n      artifact = deepCopy(artifact);\n      artifact.status_record[this.currentDatasetKey || ''] = 'Accepted';\n      this.provenance.addArtifact(artifact, id);\n    }\n  };\n\n  rejectNode = (id: string) => {\n    if (!this.currentDatasetKey) return;\n\n    let { artifact = null } = this.provenance.getLatestArtifact(id) || {};\n\n    if (artifact) {\n      artifact = deepCopy(artifact);\n      artifact.status_record[this.currentDatasetKey || ''] = 'Rejected';\n      this.provenance.addArtifact(artifact, id);\n      this.loadDatasetWithReapply(this.currentDatasetKey);\n    }\n  };\n\n  // ##################################################################### //\n  // ########################### Store Actions ########################### //\n  // ##################################################################### //\n\n  loadProjects = (newProjectId: string | null = null) => {\n    Axios.get(`${SERVER}/project`).then(\n      action((response: AxiosResponse<ProjectList>) => {\n        this.projects = response.data;\n\n        if (!newProjectId && this.rootStore.debug) {\n          this.loadProjectByKey(this.rootStore.defaultProject);\n        } else if (newProjectId) {\n          const proj = this.projects.find((p) => p.key === newProjectId);\n\n          if (proj) {\n            this.loadProjectByKey(proj.key);\n          }\n        }\n      }),\n    );\n  };\n\n  loadProjectByKey = (projectId: string) => {\n    const proj = this.projectByKey(projectId);\n\n    if (!proj) return;\n\n    this.loadedDataset = null;\n    this.rootStore.exploreStore = new ExploreStore(this.rootStore);\n\n    Axios.get(`${SERVER}/${projectId}/dataset`)\n      .then(\n        action((response: AxiosResponse<UploadedDatasetList>) => {\n          this.currentProject = { ...proj, datasets: response.data };\n\n          if (this.rootStore.debug && this.rootStore.loadDefaultDataset) {\n            const datasetKey = this.rootStore.defaultDatasetKey;\n\n            if (datasetKey && this.currentProject.datasets.map((d) => d.key).includes(datasetKey))\n              this.loadDataset(datasetKey);\n            else this.loadDataset(this.currentProject.datasets[0].key);\n          }\n        }),\n      )\n      .then(() => {\n        if (this.rootStore.loadedWorkflowId) this.loadFromWorkflow();\n        else if (this.rootStore.loadSavedProject) {\n          this.loadSavedProject();\n        }\n      });\n  };\n\n  loadComparisonDataset = (datasetKey: string) => {\n    if (!this.currentProject) return;\n\n    if (this.currentComparisonDatasets.length < 1 && this.loadedDataset) {\n      this.comparisonKeys = [this.currentDatasetKey || ''];\n      this.currentComparisonDatasets = [this.loadedDataset];\n    }\n\n    console.log(datasetKey);\n\n    Axios.get(`${SERVER}/${this.currentProject.key}/dataset/${datasetKey}`).then(\n      action((response: AxiosResponse<Dataset>) => {\n        if (this.currentComparisonDatasets.length > 1) {\n          this.currentComparisonDatasets[0] = this.currentComparisonDatasets[1];\n          this.comparisonKeys[0] = this.comparisonKeys[1];\n          this.currentComparisonDatasets.pop();\n          this.comparisonKeys.pop();\n        }\n\n        this.currentComparisonDatasets.push(response.data);\n        this.comparisonKeys.push(datasetKey);\n\n        console.log(toJS(this.currentComparisonDatasets));\n        console.log(toJS(this.comparisonKeys));\n      }),\n    );\n\n    this.loadDatasetWithReapply(datasetKey);\n  };\n\n  //load the dataset into comparison\n  loadComparisonFilter = (selectedIds: string[]): string[] => {\n    const removeIds = this.workingDataset?.values.filter((d) => {\n      return selectedIds.includes(d.id);\n    });\n\n    const idList = [];\n\n    if (this.workingDataset && removeIds) {\n      this.workingDataset.values = removeIds;\n\n      for (const j of removeIds) {\n        idList.push(j.id);\n      }\n    }\n\n    return idList;\n  };\n\n  loadOnlyFilter = (selectedIds: string[]): string[] => {\n    const removeIds =\n      this.workingDataset?.values.filter((d) => {\n        return !selectedIds.includes(d.id);\n      }) || [];\n\n    const idList = [];\n\n    if (this.workingDataset && removeIds) {\n      this.workingDataset.values = removeIds;\n\n      for (const j of removeIds) {\n        idList.push(j.id);\n      }\n    }\n\n    return idList;\n  };\n\n  // ##################################################################### //\n  // ######################### Provenance Actions ######################## //\n  // ##################################################################### //\n\n  loadDataset = (datasetKey: string) => {\n    this.currentDatasetKey = datasetKey;\n  };\n\n  loadDatasetWithReapply = (datasetKey: string) => {\n    if (!this.currentProject || !this.currentDatasetKey) return;\n    this.isReapplying = true;\n\n    const graph = this.provenance.graph;\n\n    Object.entries(graph.nodes).forEach((ent) => {\n      const [key, val] = ent;\n\n      if (isChildNode(val)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (val as any).state = this.provenance.getState(val);\n      }\n\n      graph.nodes[key] = val;\n    });\n\n    Axios.post(`${SERVER}/project/${this.currentProject.key}/reapply`, {\n      base: this.currentDatasetKey,\n      target: datasetKey,\n      provenance: graph,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    }).then(\n      action((res) => {\n        // this.provenance.importProvenanceGraph(res.data.graph);\n        this.currentDatasetKey = datasetKey;\n\n        this.rootStore.exploreStore.stateRecord = res.data;\n        setTimeout(\n          action(() => (this.isReapplying = false)),\n          200,\n        );\n      }),\n    );\n  };\n}\n","import { createAction } from '@visdesignlab/trrack';\n\nimport { Brush } from '../components/Brush/Types/Brush';\n\nimport { IntentEvents } from './Types/IntentEvents';\nimport { State } from './Types/Interactions';\nimport { Plot } from './Types/Plot';\nimport { Prediction } from './Types/Prediction';\n\nconst addPlotAction = createAction<State, [Plot], IntentEvents>((state: State, plot: Plot) => {\n  state.interaction = {\n    type: 'AddPlot',\n    plot,\n  };\n})\n  .saveStateMode('Complete')\n  .setEventType('Add Plot');\n\nconst removePlotAction = createAction<State, [Plot], IntentEvents>((state: State, plot: Plot) => {\n  state.interaction = {\n    type: 'RemovePlot',\n    plot: plot.id,\n  };\n})\n  .saveStateMode('Complete')\n  .setEventType('Add Plot');\n\nconst pointSelectionAction = createAction<State, [Plot, string[]], IntentEvents>(\n  (state: State, plot: Plot, points: string[]) => {\n    state.interaction = {\n      type: 'PointSelection',\n      action: 'Add',\n      plot: plot.id,\n      selected: points,\n    };\n  },\n)\n  .saveStateMode('Complete')\n  .setEventType('Point Selection');\n\nconst addBrushAction = createAction<State, [Plot, Brush], IntentEvents>(\n  (state: State, plot: Plot, brush: Brush) => {\n    state.interaction = {\n      type: 'Brush',\n      action: 'Add',\n      plot: plot.id,\n      brush,\n    };\n  },\n)\n  .saveStateMode('Complete')\n  .setEventType('Add Brush');\n\nconst updateBrushAction = createAction<State, [Plot, Brush], IntentEvents>(\n  (state: State, plot: Plot, brush: Brush) => {\n    state.interaction = {\n      type: 'Brush',\n      action: 'Update',\n      plot: plot.id,\n      brush,\n    };\n  },\n)\n  .saveStateMode('Complete')\n  .setEventType('Update Brush');\n\nconst removeBrushAction = createAction<State, [Plot, string], IntentEvents>(\n  (state: State, plot: Plot, brush: string) => {\n    state.interaction = {\n      type: 'Brush',\n      action: 'Remove',\n      plot: plot.id,\n      brush,\n    };\n  },\n)\n  .saveStateMode('Complete')\n  .setEventType('Remove Brush');\n\nconst predictionSelectionAction = createAction<State, [Prediction], IntentEvents>(\n  (state: State, prediction: Prediction) => {\n    state.interaction = {\n      type: 'SelectPrediction',\n      prediction,\n    };\n  },\n)\n  .saveStateMode('Complete')\n  .setEventType('Prediction Selection');\n\nconst filterAction = createAction<State, ['In' | 'Out'], IntentEvents>(\n  (state: State, filterType: 'In' | 'Out') => {\n    state.interaction = {\n      type: 'Filter',\n      filterType,\n    };\n  },\n)\n  .saveStateMode('Complete')\n  .setEventType('Filter');\n\nexport const provenanceActions = {\n  addPlotAction,\n  removePlotAction,\n  filterAction,\n  pointSelectionAction,\n  predictionSelectionAction,\n  addBrushAction,\n  updateBrushAction,\n  removeBrushAction,\n};\n","import { initProvenance } from '@visdesignlab/trrack';\nimport firebase from 'firebase';\nimport 'firebase/database';\nimport { makeAutoObservable } from 'mobx';\nimport { createContext } from 'react';\n\nimport { initializeFirebase } from '../components/Workflow/Firebase';\n\nimport { CompareStore } from './CompareStore';\nimport { ExploreStore } from './ExploreStore';\nimport { ProjectStore } from './ProjectStore';\nimport { provenanceActions } from './ProvenanceActions';\nimport { StatusRecord } from './Types/Artifacts';\nimport { IntentEvents } from './Types/IntentEvents';\nimport { State } from './Types/Interactions';\nimport { IntentProvenance } from './Types/ProvenanceType';\n\nexport class RootStore {\n  // Search Params\n  debug = true;\n  search = '';\n  defaultProject = 'cluster';\n  loadDefaultDataset = false;\n  loadSavedProject: string | null = null;\n  defaultDatasetKey: string | null = null;\n  redirectPath: string | null = null;\n  loadedWorkflowId: string | null = null;\n  db: firebase.database.Database;\n  provDb: firebase.database.Database;\n  dims: string[] = [];\n  //\n  projectStore: ProjectStore;\n  exploreStore: ExploreStore;\n  compareStore: CompareStore;\n  provenance: IntentProvenance;\n  actions = provenanceActions;\n  currentNodes: string[];\n  bundledNodes: string[][];\n\n  constructor() {\n    this.provenance = initProvenance<State, IntentEvents, StatusRecord>(\n      { interaction: { type: 'Root' } },\n      {\n        loadFromUrl: false,\n      },\n    );\n\n    this.provenance.done();\n\n    this.projectStore = new ProjectStore(this);\n    this.exploreStore = new ExploreStore(this);\n    this.compareStore = new CompareStore(this);\n\n    this.currentNodes = [];\n    this.bundledNodes = [];\n\n    const { db, provDb } = initializeFirebase();\n\n    this.db = db;\n    this.provDb = provDb;\n\n    makeAutoObservable(this, {\n      actions: false,\n      provenance: false,\n    });\n  }\n\n  setQueryParams = (search: string) => {\n    if (this.search === search) return;\n    this.search = search;\n    const searchParams = new URLSearchParams(search);\n    const debug = searchParams.get('debug');\n    const defaultProject = searchParams.get('project');\n    const data = searchParams.get('data');\n    const demo = searchParams.get('demo');\n    const redirectPath = searchParams.get('redirect');\n    const workflowId = searchParams.get('workflow');\n    const dims = searchParams.get('dims');\n\n    this.debug = debug ? true : workflowId ? true : demo ? true : false;\n    this.defaultProject = defaultProject ? defaultProject : demo ? demo : 'cluster';\n    this.loadDefaultDataset = data || demo ? true : false;\n    this.defaultDatasetKey = data !== 'true' ? data : null;\n    this.loadSavedProject = demo ? demo : null;\n    this.loadedWorkflowId = workflowId;\n    this.redirectPath = workflowId || demo ? 'explore' : redirectPath;\n    this.dims = dims ? dims.split(',') : [];\n  };\n}\n\nconst Store = createContext(new RootStore());\nexport default Store;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  CircularProgress,\n  createStyles,\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  Theme,\n  useTheme,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext, useState } from 'react';\n\nimport Store from '../../Store/Store';\nimport Scatterplot from '../Scatterplot/Scatterplot';\n\nimport ComparisonLegend from './ComparisonLegend';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n      overflow: 'auto',\n    },\n    grid: {\n      height: '100%',\n    },\n    closeIcon: {\n      position: 'absolute',\n    },\n  }),\n);\n\nexport type DataDisplay =\n  | 'Original'\n  | 'Diff'\n  | 'Comparison'\n  | 'All'\n  | 'AddedOnly'\n  | 'RemovedOnly'\n  | 'ChangedOnly';\n\nconst CompVis: FC = () => {\n  const { plots, removePlot, isLoadingData, n_plots } = useContext(Store).exploreStore;\n  const { currentProject } = useContext(Store).projectStore;\n\n  const opts =\n    currentProject?.datasets.map((dataset) => ({\n      key: dataset.key,\n      desc: dataset.version,\n    })) || [];\n\n  const { selectedPoints } = useContext(Store).exploreStore;\n\n  // const spContainerDimension = height > width ? width : height;\n  const spContainerDimension = n_plots === 1 ? 800 : 500;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const xs = n_plots === 1 ? 'auto' : 6;\n\n  const loader = <CircularProgress />;\n\n  const scatterPlots = plots.map((plot) => (\n    <Grid key={plot.id} xs={xs} item>\n\n      <Paper elevation={3}>\n        {n_plots > 1 && (\n          <IconButton className={classes.closeIcon} onClick={() => removePlot(plot)}>\n            <CloseIcon />\n          </IconButton>\n        )}\n        <div>\n          {/* <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onMouseOut={() => {\n              setDataDisplay('All');\n            }}\n            onMouseOver={() => {\n              setDataDisplay('Original');\n            }}\n          >\n            {opts[0].desc}\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onMouseOut={() => {\n              setDataDisplay('All');\n            }}\n            onMouseOver={() => {\n              setDataDisplay('Comparison');\n            }}\n          >\n            {opts[1].desc}\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onMouseOut={() => {\n              setDataDisplay('All');\n            }}\n            onMouseOver={() => {\n              setDataDisplay('Diff');\n            }}\n          >\n            Changed Data\n          </Button> */}\n        </div>\n        {/* <Scatterplot\n          dataDisplay={dataDisplay}\n          originalMarks={false}\n          plot={plot}\n          size={spContainerDimension - 2 * theme.spacing(1)}\n        /> */}\n      </Paper>\n    </Grid>\n  ));\n\n  // console.log(prov);\n\n  return (\n    <div className={classes.root}>\n      <Grid alignItems=\"center\" className={classes.grid} justify=\"center\" spacing={2} container>\n        {isLoadingData ? loader : scatterPlots}\n      </Grid>\n    </div>\n  );\n};\n\nexport default observer(CompVis);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { CssBaseline, makeStyles } from '@material-ui/core';\nimport { isChildNode } from '@visdesignlab/trrack';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext, useEffect } from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport { ProvVis } from '../../trrack-vis/index';\nimport Store from '../../Store/Store';\nimport { Plot } from '../../Store/Types/Plot';\nimport { getPlotId } from '../../Utils/IDGens';\nimport { eventConfig } from '../Explore/ExploreHome';\n\nimport ComparisonScatterplot from './ComparisonScatterplot';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '.red': {\n      backgroundColor: '#ff8080',\n    },\n    '.green': {\n      backgroundColor: '#90EE90',\n    },\n    '.yellow': {\n      backgroundColor: '#ffff8b',\n    },\n    display: 'grid',\n    height: '100vh',\n    width: '100vw',\n    gridTemplateRows: 'min-content 1fr',\n    overflow: 'hidden',\n  },\n  layout: {\n    display: 'grid',\n    gridTemplateColumns: '5fr 2fr',\n    overflow: 'hidden',\n  },\n}));\n\nconst ComparisonHome: FC<RouteComponentProps> = ({ location }: RouteComponentProps) => {\n  const {\n    exploreStore: { n_plots, addPlot },\n    projectStore: { loadedDataset },\n    provenance,\n    setQueryParams,\n    loadedWorkflowId,\n    loadSavedProject\n  } = useContext(Store);\n\n  useEffect(() => {\n    setQueryParams(location.search);\n  }, [location.search, setQueryParams]);\n\n  useEffect(() => {\n    const current = provenance.current;\n\n    if (isChildNode(current)) {\n      if (current.children.length > 0) return;\n    }\n\n    if (n_plots > 0 || !loadedDataset || loadedWorkflowId || loadSavedProject) return;\n    const { numericColumns } = loadedDataset;\n    const plot: Plot = {\n      id: getPlotId(),\n      x: numericColumns[0],\n      y: numericColumns[1],\n    };\n    addPlot(plot);\n  });\n\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <div className={classes.layout}>\n        <ComparisonScatterplot />\n      </div>\n    </div>\n  );\n};\n\nexport default observer(ComparisonHome);\n","import { BundleMap } from './BundleMap';\n\nexport default function findBundleParent(nodeId: string, bundleMap?: BundleMap): string[] {\n  const parentList = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const bundle in bundleMap) {\n    if (bundleMap[bundle].bunchedNodes.includes(nodeId)) {\n      parentList.push(bundle);\n    }\n  }\n\n  return parentList;\n}\n","export default function translate(x: number, y: number) {\n  return `translate(${x}, ${y})`;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ProvenanceNode } from '@visdesignlab/trrack';\nimport { HierarchyNode } from 'd3';\n\nimport { StratifiedMap } from '../components/ProvVis';\n\nexport type TreeNode = HierarchyNode<unknown>;\n\nexport type ExtendedHierarchyNode<T, S, A> = {\n  column: number;\n} & HierarchyNode<ProvenanceNode<T, S, A>>;\n\nexport type ExtendedStratifiedMap<T, S, A> = {\n  [key: string]: ExtendedHierarchyNode<T, S, A>;\n};\n\nexport function treeLayout<T, S, A>(nodes: StratifiedMap<T, S, A>, current: string, root: string) {\n  const depthMap: { [key: string]: any } = {};\n\n  const currentPath = getPathTo(nodes, root, current);\n\n  DFS(nodes, root, depthMap, currentPath);\n\n  return currentPath;\n}\n\nfunction DFS<T, S, A>(\n  nodes: StratifiedMap<T, S, A>,\n  node: string,\n  depthMap: any,\n  currentPath: string[],\n) {\n  const explored = new Set();\n\n  const toExplore = [];\n\n  let currDepth = 0;\n\n  toExplore.push(nodes[node]);\n\n  while (toExplore.length > 0) {\n    const temp: any = toExplore.pop();\n\n    if (!explored.has(temp.id)) {\n      temp.width = currDepth;\n      depthMap[temp.id] = temp.width;\n      explored.add(temp.id);\n    } else {\n      temp.width = depthMap[temp.id];\n    }\n\n    if (temp.children) {\n      toExplore.push(\n        ...temp.children.sort((a: any, b: any) => {\n          const aIncludes = currentPath.includes(a.id) ? 1 : 0;\n          const bIncludes = currentPath.includes(b.id) ? 1 : 0;\n\n          return aIncludes - bIncludes;\n        }),\n      );\n    } else {\n      currDepth += 1;\n    }\n  }\n}\n\nexport function getPathTo<T, S, A>(\n  nodes: StratifiedMap<T, S, A>,\n  from: string,\n  to: string,\n): string[] {\n  const path: string[] = [];\n\n  search(nodes, from, to, path);\n\n  return [from, ...path.reverse()];\n}\n\nfunction search<T, S, A>(\n  nodes: StratifiedMap<T, S, A>,\n  node: string,\n  final: string,\n  path: string[],\n) {\n  if (!nodes[node]) return false;\n\n  if (node === final) {\n    path.push(node);\n\n    return true;\n  }\n\n  const children = nodes[node].children || [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const child of children) {\n    if (search(nodes, child.id!, final, path)) {\n      path.push(child.id!);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { style } from 'typestyle';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const treeColor = (current?: boolean) => style({\n  fill: current ? 'rgb(33, 133, 208)' : 'white',\n  stroke: 'rgb(33, 133, 208)',\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-non-null-asserted-optional-chain */\n/* eslint-disable no-unused-vars */\nimport { NodeID, Provenance, ProvenanceNode, StateNode } from '@visdesignlab/trrack';\nimport React, { ReactChild, useState } from 'react';\nimport { Animate } from 'react-move';\nimport { Button, Icon, Popup, TextArea, Form } from 'semantic-ui-react';\nimport ReactResizeDetector from 'react-resize-detector';\n\nimport { BundleMap, OriginMap } from '../Utils/BundleMap';\nimport { EventConfig } from '../Utils/EventConfig';\nimport translate from '../Utils/translate';\n\n\nimport { treeColor } from './Styles';\n\ntype BackboneNodeProps<T, S extends string, A> = {\n  prov: Provenance<T, S, A>;\n  first: boolean;\n  iconOnly: boolean;\n  current: boolean;\n  duration: number;\n  node: StateNode<T, S, A>;\n  radius: number;\n  strokeWidth: number;\n  textSize: number;\n  setBookmark: any;\n  bookmark: any;\n  nodeMap: any;\n  currentDataset: string;\n  setAnnotationHeight: any;\n  annotationOpen: number;\n  setAnnotationOpen: any;\n  exemptList: string[];\n  setExemptList: any;\n  bundleMap?: BundleMap;\n  clusterLabels: boolean;\n  editAnnotations: boolean;\n  eventConfig?: EventConfig<S>;\n  popupContent?: (nodeId: StateNode<T, S, A>) => ReactChild;\n  annotationContent?: (nodeId: StateNode<T, S, A>) => ReactChild;\n  approvedFunction: (id: NodeID) => void;\n  nodeCreationMap: OriginMap;\n  addToWorkflow: (id: string) => void;\n  rejectedFunction: (id: NodeID) => void;\n  expandedClusterList?: string[];\n};\n\nfunction BackboneNode<T, S extends string, A>({\n  prov,\n  first,\n  iconOnly,\n  current,\n  node,\n  duration,\n  radius,\n  strokeWidth,\n  addToWorkflow,\n  textSize,\n  nodeMap,\n  annotationOpen,\n  bookmark,\n  setAnnotationOpen,\n  exemptList,\n  setExemptList,\n  setAnnotationHeight,\n  bundleMap,\n  eventConfig,\n  popupContent,\n  editAnnotations,\n  annotationContent,\n  approvedFunction,\n  rejectedFunction,\n  currentDataset,\n  nodeCreationMap,\n  expandedClusterList,\n}: BackboneNodeProps<T, S, A>) {\n  const padding = 25;\n\n  const cursorStyle = {\n    cursor: 'pointer',\n  } as React.CSSProperties;\n\n  const [annotateText, setAnnotateText] = useState(\n    node.artifacts && node.artifacts.annotations && prov.getLatestAnnotation(node.id)?.annotation\n      ? prov.getLatestAnnotation(node.id)?.annotation!\n      : '',\n  );\n\n  const handleCheck = () => {\n    const lastAnnotation = prov.getLatestAnnotation(node.id);\n\n    if (lastAnnotation?.annotation !== annotateText.trim()) {\n      prov.addAnnotation(annotateText, node.id);\n      setAnnotateText(annotateText);\n      setAnnotationOpen(-1);\n    }\n  };\n\n  const handleClose = () => {\n    setAnnotateText(prov.getLatestAnnotation(node.id)?.annotation!);\n    setAnnotationOpen(-1);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const handleInputChange = (c: any) => {\n    setAnnotateText(c.target.value);\n  };\n\n  // console.log(JSON.parse(JSON.stringify(node)));\n  let glyph = (\n    <circle\n      className={treeColor(current)}\n      r={radius}\n      strokeWidth={strokeWidth}\n      style={cursorStyle}\n    />\n  );\n\n  // let backboneBundleNodes = findBackboneBundleNodes(nodeMap, bundleMap)\n\n  let dropDownAdded = false;\n\n  if (eventConfig) {\n    const { eventType } = node.metadata;\n\n    if (eventType && eventType in eventConfig && eventType !== 'Root') {\n      const { bundleGlyph, currentGlyph, backboneGlyph } = eventConfig[eventType];\n\n      if (bundleMap && Object.keys(bundleMap).includes(node.id)) {\n        dropDownAdded = true;\n        glyph = (\n          <g fontWeight=\"none\" style={cursorStyle}>\n            {bundleGlyph}\n          </g>\n        );\n      }\n\n      if (current) {\n        glyph = (\n          <g fontWeight=\"none\" style={cursorStyle}>\n            {currentGlyph}\n          </g>\n        );\n      } else if (!dropDownAdded) {\n        glyph = (\n          <g fontWeight=\"none\" style={cursorStyle}>\n            {backboneGlyph}\n          </g>\n        );\n      }\n    }\n  }\n\n  let label = '';\n  let annotate = '';\n\n  // console.log(bundleMap)\n  // console.log(nodeMap[node.id]);\n\n  if (\n    bundleMap &&\n    Object.keys(bundleMap).includes(node.id) &&\n    node.actionType === 'Ephemeral' &&\n    expandedClusterList &&\n    !expandedClusterList.includes(node.id)\n  ) {\n    if (node.metadata && node.metadata.eventType) {\n      label = `[${bundleMap[node.id].bunchedNodes.length}] ${node.metadata.eventType}`;\n    } else {\n      label = `[${bundleMap[node.id].bunchedNodes.length}]`;\n    }\n  } else {\n    label = node.label;\n  }\n\n  if (\n    node.artifacts &&\n    node.artifacts.annotations &&\n    node.artifacts.annotations.length > 0 &&\n    annotationOpen !== nodeMap[node.id].depth\n  ) {\n    annotate = node.artifacts.annotations[0].annotation;\n  }\n\n  if (!nodeMap[node.id]) {\n    return null;\n  }\n\n  if (annotate.length > 20) annotate = `${annotate.substr(0, 20)}..`;\n\n  if (label.length > 20) label = `${label.substr(0, 20)}..`;\n\n  const labelG = (\n    <g style={{ opacity: 1 }} transform={translate(padding, 0)}>\n      {nodeCreationMap[node.id] ? (\n        <g>\n          <g transform={translate(0, -20)}>\n            <circle fill=\"white\" opacity=\"1\" r=\"7\" />\n\n            <text\n              alignmentBaseline=\"middle\"\n              fill={\n                nodeCreationMap[node.id] && nodeCreationMap[node.id].createdIn === currentDataset\n                  ? 'green'\n                  : 'grey'\n              }\n              fontSize={10}\n              fontWeight=\"bold\"\n              style={cursorStyle}\n              textAnchor=\"start\"\n              x={dropDownAdded ? 10 : 0}\n              y={0}\n            >\n              {nodeCreationMap[node.id] ? nodeCreationMap[node.id].createdIn : ''}\n            </text>\n          </g>\n\n          <g transform={translate(-10, 10)}>\n            <circle fill=\"white\" opacity=\"1\" r=\"7\" />\n\n            <text\n              alignmentBaseline=\"middle\"\n              fill={\n                nodeCreationMap[node.id] &&\n                nodeCreationMap[node.id].approvedIn.includes(currentDataset)\n                  ? 'green'\n                  : nodeCreationMap[node.id].rejectedIn.includes(currentDataset)\n                  ? 'red'\n                  : 'black'\n              }\n              fontFamily=\"Icons\"\n              fontSize={10}\n              style={cursorStyle}\n              textAnchor=\"middle\"\n              x={0}\n              y={0}\n            >\n              {nodeCreationMap[node.id] &&\n              nodeCreationMap[node.id].approvedIn.includes(currentDataset)\n                ? '\\uf00c'\n                : nodeCreationMap[node.id].rejectedIn.includes(currentDataset)\n                ? '\\uf00d'\n                : '\\uf128'}\n            </text>\n          </g>\n        </g>\n      ) : null}\n      {nodeCreationMap[node.id] &&\n      !nodeCreationMap[node.id].rejectedIn.includes(currentDataset) &&\n      !nodeCreationMap[node.id].approvedIn.includes(currentDataset) ? (\n        <g transform={translate(-10, 10)}>\n          <foreignObject height=\"100\" width=\"50\" x=\"-45\" y=\"-30\">\n            <div style={{ maxWidth: '20' }}>\n              <Button\n                style={{\n                  margin: '1px',\n                  padding: '1px',\n                  maxHeight: '15px',\n                  maxWidth: '15px',\n                }}\n                onClick={(event) => {\n                  event.stopPropagation();\n                  approvedFunction(node.id);\n                }}\n              >\n                <Icon color=\"green\" name=\"check\" size=\"small\" style={{ margin: '0px' }} />\n              </Button>\n            </div>\n            <div style={{ maxWidth: '20' }}>\n              <Button\n                style={{\n                  margin: '1px',\n                  padding: '1px',\n                  maxHeight: '15px',\n                  maxWidth: '15px',\n                }}\n                onClick={(event) => {\n                  event.stopPropagation();\n                  rejectedFunction(node.id);\n                }}\n              >\n                <Icon color=\"red\" name=\"close\" size=\"small\" style={{ margin: '0px' }} />\n              </Button>\n            </div>\n          </foreignObject>\n        </g>\n      ) : (\n        node.label !== 'Root' &&\n        !nodeCreationMap[node.id].rejectedIn.includes(currentDataset) && (\n          <g transform={translate(-10, 10)}>\n            <foreignObject height=\"100\" width=\"50\" x=\"-45\" y=\"-20\">\n              <div style={{ maxWidth: '20' }}>\n                <Button\n                  style={{\n                    margin: '1px',\n                    padding: '1px',\n                    maxHeight: '20px',\n                    maxWidth: '20px',\n                  }}\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    addToWorkflow(node.id);\n                  }}\n                >\n                  <Icon color=\"green\" name=\"add\" size=\"small\" style={{ margin: '0px' }} />\n                </Button>\n              </div>\n            </foreignObject>\n          </g>\n        )\n      )}\n\n      {!iconOnly ? (\n        <g>\n          {dropDownAdded ? (\n            <text\n              alignmentBaseline=\"middle\"\n              fill=\"rgb(248, 191, 132)\"\n              fontFamily=\"Icons\"\n              fontSize={17}\n              style={cursorStyle}\n              textAnchor=\"middle\"\n              x={1}\n              y={0}\n              onClick={(e) => nodeClicked(node, e)}\n            >\n              {expandedClusterList && expandedClusterList.includes(node.id) ? '\\uf0d8' : '\\uf0d7'}\n            </text>\n          ) : (\n            <g />\n          )}\n          {editAnnotations ? (\n            <button>\n              <i className=\"fas fa-undo marginRight\" />\n              Undo\n            </button>\n          ) : (\n            <g />\n          )}\n          <text\n            dominantBaseline=\"middle\"\n            fill=\"black\"\n            fontSize={textSize}\n            fontWeight=\"bold\"\n            textAnchor=\"start\"\n            x={dropDownAdded ? 10 : 0}\n            y={annotate.length === 0 ? 0 : -7}\n            onClick={() => labelClicked(node)}\n          >\n            {label}\n          </text>\n          ,\n          <text\n            dominantBaseline=\"middle\"\n            fill=\"black\"\n            fontSize={textSize}\n            fontWeight=\"regular\"\n            textAnchor=\"start\"\n            x={dropDownAdded ? 10 : 0}\n            y={7}\n            onClick={() => labelClicked(node)}\n          >\n            {annotate}\n          </text>\n          ,\n          <text\n            alignmentBaseline=\"middle\"\n            className=\"fas fa\"\n            fill={prov.getBookmark(node.id) ? '#2185d0' : '#cccccc'}\n            fontFamily=\"Icons\"\n            fontSize={17}\n            opacity={bookmark === node.id || prov.getBookmark(node.id) ? 1 : 0}\n            style={cursorStyle}\n            textAnchor=\"middle\"\n            x={175}\n            y={0}\n            onClick={(e) => {\n              prov.setBookmark(node.id, !prov.getBookmark(node.id));\n\n              e.stopPropagation();\n            }}\n          >\n            {'\\uf02e'}\n          </text>\n          ,\n          <text\n            alignmentBaseline=\"middle\"\n            fill={annotationOpen === nodeMap[node.id].depth ? '#2185d0' : '#cccccc'}\n            fontFamily=\"Icons\"\n            fontSize={17}\n            opacity={bookmark === node.id || annotationOpen === nodeMap[node.id].depth ? 1 : 0}\n            style={cursorStyle}\n            textAnchor=\"middle\"\n            x={210}\n            y={0}\n            onClick={() => {\n              if (annotationOpen === -1 || nodeMap[node.id].depth !== annotationOpen) {\n                setAnnotationOpen(nodeMap[node.id].depth);\n              } else {\n                setAnnotationOpen(-1);\n              }\n            }}\n          >\n            {'\\uf044'}\n          </text>\n        </g>\n      ) : (\n        <g>\n          {dropDownAdded ? (\n            <text\n              alignmentBaseline=\"middle\"\n              fill=\"rgb(248, 191, 132)\"\n              fontFamily=\"Icons\"\n              fontSize={17}\n              style={cursorStyle}\n              textAnchor=\"middle\"\n              x={1}\n              y={0}\n              onClick={(e) => nodeClicked(node, e)}\n            >\n              {expandedClusterList && expandedClusterList.includes(node.id) ? '\\uf0d8' : '\\uf0d7'}\n            </text>\n          ) : (\n            <g />\n          )}\n        </g>\n      )}\n    </g>\n  );\n\n  return (\n    <Animate\n      enter={{\n        opacity: [1],\n        timing: { duration: 100, delay: first ? 0 : duration },\n      }}\n      start={{ opacity: 0 }}\n    >\n      {() => (\n        <>\n          {popupContent !== undefined && nodeMap[node.id].depth > 0 ? (\n            <Popup content={popupContent(node)} trigger={glyph} />\n          ) : (\n            glyph\n          )}\n          {/* {glyph} */}\n\n          {popupContent !== undefined && nodeMap[node.id].depth > 0 ? (\n            <Popup content={popupContent(node)} trigger={labelG} />\n          ) : (\n            labelG\n          )}\n\n          {annotationOpen !== -1 && nodeMap[node.id].depth === annotationOpen ? (\n            <g transform=\"translate(15, 25)\">\n              <foreignObject height=\"400\" width=\"250\" x=\"0\" y=\"0\">\n                <div>\n                  <Form>\n                    <ReactResizeDetector\n                      onResize={(width: number | undefined, height: number | undefined) =>\n                        setAnnotationHeight(height ? height + 15 : 50)\n                      }\n                    >\n                      <TextArea\n                        defaultValue={annotateText}\n                        placeholder=\"Tell us more\"\n                        rows={2}\n                        style={{\n                          width: '170px',\n                          marginRight: '1px',\n                        }}\n                        onInput={handleInputChange}\n                      />\n                      <Button\n                        style={{\n                          margin: '1px',\n                          padding: '5px',\n                          maxWidth: '30px',\n                        }}\n                        onClick={handleCheck}\n                      >\n                        <Icon color=\"green\" name=\"check\" style={{ margin: '0px' }} />\n                      </Button>\n                      <Button\n                        style={{\n                          margin: '1px',\n                          padding: '5px',\n                          maxWidth: '30px',\n                        }}\n                        onClick={handleClose}\n                      >\n                        <Icon color=\"red\" name=\"close\" style={{ margin: '0px' }} />\n                      </Button>\n                    </ReactResizeDetector>\n                  </Form>\n                </div>\n              </foreignObject>\n            </g>\n          ) : (\n            <g />\n          )}\n        </>\n      )}\n    </Animate>\n  );\n\n  function labelClicked(innerNode: ProvenanceNode<T, S, A>) {\n    if (annotationOpen === nodeMap[innerNode.id].depth && annotationContent) {\n      setAnnotationOpen(-1);\n    } else if (annotationContent) {\n      setAnnotationOpen(nodeMap[innerNode.id].depth);\n    }\n  }\n\n  function nodeClicked(innerNode: ProvenanceNode<T, S, A>, event: any) {\n    if (bundleMap && Object.keys(bundleMap).includes(innerNode.id)) {\n      const exemptCopy: string[] = Array.from(exemptList);\n\n      if (exemptCopy.includes(innerNode.id)) {\n        exemptCopy.splice(\n          exemptCopy.findIndex((d) => d === innerNode.id),\n          1,\n        );\n      } else {\n        exemptCopy.push(innerNode.id);\n      }\n\n      setExemptList(exemptCopy);\n    }\n\n    event.stopPropagation();\n  }\n}\n\nexport default BackboneNode;\n\n// const Label: FC<{ label: string } & React.SVGProps<SVGTextElement>> = (props: {\n//   label: string;\n// }) => {\n//   return <text {...props}>{props.label}</text>;\n// };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { StateNode } from '@visdesignlab/trrack';\nimport React from 'react';\nimport { Animate } from 'react-move';\n\nimport { EventConfig } from '../Utils/EventConfig';\n\nimport { treeColor } from './Styles';\n\ntype BookmarkNodeProps<T, S extends string, A> = {\n  current: boolean;\n  node: StateNode<T, S, A>;\n  nodeMap: any;\n  editAnnotations: boolean;\n  eventConfig?: EventConfig<S>;\n};\n\nfunction BookmarkNode<T, S extends string, A>({\n  current,\n  node,\n  eventConfig,\n}: BookmarkNodeProps<T, S, A>) {\n  const radius = 5;\n  const strokeWidth = 2;\n  const textSize = 15;\n\n  const cursorStyle = {\n    cursor: 'pointer',\n  } as React.CSSProperties;\n\n  let glyph = (\n    <circle\n      className={treeColor(current)}\n      r={radius}\n      strokeWidth={strokeWidth}\n      style={cursorStyle}\n    />\n  );\n\n  const dropDownAdded = false;\n  const { eventType } = node.metadata;\n\n  if (eventConfig) {\n    const { currentGlyph, backboneGlyph } = eventConfig[eventType];\n\n    if (current) {\n      glyph = (\n        <g fontWeight=\"none\" style={cursorStyle}>\n          {currentGlyph}\n        </g>\n      );\n    } else {\n      glyph = (\n        <g fontWeight=\"none\" style={cursorStyle}>\n          {backboneGlyph}\n        </g>\n      );\n    }\n  }\n\n  let label: string = '';\n  let annotate: string = '';\n\n  if (\n    node.artifacts &&\n    node.artifacts.annotations.length > 0 &&\n    node.artifacts.annotations[0].annotation.length > 0\n  ) {\n    annotate = node.artifacts.annotations[0].annotation;\n  }\n\n  label = node.label;\n\n  if (annotate.length > 20) annotate = `${annotate.substr(0, 20)}..`;\n\n  if (label.length > 20) label = `${label.substr(0, 20)}..`;\n\n  return (\n    <Animate\n      enter={{\n        opacity: [1],\n      }}\n      start={{ opacity: 0 }}\n    >\n      {() => (\n        <>\n          <g style={{ opacity: 1 }}>\n            {glyph}\n\n            <text\n              dominantBaseline=\"middle\"\n              fontSize={textSize}\n              fontWeight=\"bold\"\n              textAnchor=\"start\"\n              x={20}\n              y={0}\n            >\n              {label}\n            </text>\n\n            <text\n              dominantBaseline=\"middle\"\n              fontSize={textSize}\n              fontWeight=\"regular\"\n              textAnchor=\"start\"\n              x={dropDownAdded ? 10 : 0}\n              y={20}\n            >\n              {annotate}\n            </text>\n          </g>\n        </>\n      )}\n    </Animate>\n  );\n}\n\nexport default BookmarkNode;\n","import { NodeID, ProvenanceGraph } from '@visdesignlab/trrack';\nimport React from 'react';\nimport { NodeGroup } from 'react-move';\n\nimport { EventConfig } from '../Utils/EventConfig';\nimport translate from '../Utils/translate';\n\nimport BookmarkNode from './BookmarkNode';\nimport BookmarkTransitions from './BookmarkTransitions';\n\nexport type BookmarkListViewConfig<T, S extends string, A> = {\n  graph?: ProvenanceGraph<T, S, A>;\n  eventConfig?: EventConfig<S>;\n  currentNode: NodeID;\n};\n\nfunction BookmarkListView<T, S extends string, A>({\n  graph,\n  eventConfig,\n  currentNode,\n}: BookmarkListViewConfig<T, S, A>) {\n  if (graph === undefined) {\n    return null;\n  }\n\n  const gutter = 15;\n  const verticalSpace = 50;\n\n  const bookmarks = [];\n\n  const xOffset = gutter;\n  const yOffset = verticalSpace;\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const j in graph.nodes) {\n    if (graph.nodes[j].bookmarked) {\n      bookmarks.push(graph.nodes[j]);\n    }\n  }\n\n  return (\n    <NodeGroup\n      data={bookmarks}\n      keyAccessor={(d) => d.label}\n      {...BookmarkTransitions(xOffset, yOffset, bookmarks)}\n    >\n      {(innerBookmarks) => (\n        <>\n          {innerBookmarks.map((bookmark) => {\n            const { data: d, key, state } = bookmark;\n\n            return (\n              <g key={key} transform={translate(state.x, state.y)}>\n                <BookmarkNode\n                  current={currentNode === d.id}\n                  editAnnotations={false}\n                  eventConfig={eventConfig}\n                  node={d}\n                  nodeMap={innerBookmarks}\n                />\n              </g>\n            );\n          })}\n        </>\n      )}\n    </NodeGroup>\n  );\n}\n\nexport default BookmarkListView;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-plusplus */\nexport default function BookmarkTransitions(xOffset: number, yOffset: number, nodeList: any[]) {\n  xOffset = -xOffset;\n\n  const start = (data: any) => {\n    const index = nodeList.findIndex((d) => d.id === data.id);\n\n    const x = 0;\n    const y = 40 * index;\n\n    return { x, y: y - yOffset, opacity: 0 };\n  };\n\n  const enter = (data: any) => {\n    const index = nodeList.findIndex((d) => d.id === data.id);\n\n    const x = 0;\n    const y = 40 * index;\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n    };\n  };\n\n  const update = (data: any) => {\n    const index = nodeList.findIndex((d) => d.id === data.id);\n\n    const x = 0;\n    const y = 40 * index;\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nexport default function linkTransitions(\n  xOffset: number,\n  yOffset: number,\n  clusterOffset: number,\n  backboneOffset: number,\n  duration: number = 500,\n  annotationOpen: number,\n  annotationHeight: number,\n) {\n  xOffset = -xOffset;\n  backboneOffset = -backboneOffset;\n  const start = () => ({\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n    opacity: 0,\n  });\n\n  const enter = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    const { source, target } = data;\n    const x1 = getX(source.width, xOffset, backboneOffset);\n    const x2 = getX(target.width, xOffset, backboneOffset);\n\n    let y1 = yOffset * source.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n    let y2 = yOffset * target.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && source.depth > annotationOpen && source.width === 0) {\n      y1 += annotationHeight;\n    }\n\n    if (annotationOpen !== -1 && target.depth > annotationOpen && target.width === 0) {\n      y2 += annotationHeight;\n    }\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n      opacity: 1,\n      timing: { duration },\n    };\n  };\n\n  const update = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    const { source, target } = data;\n    const x1 = getX(source.width, xOffset, backboneOffset);\n    const x2 = getX(target.width, xOffset, backboneOffset);\n\n    let y1 = yOffset * source.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n    let y2 = yOffset * target.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && source.depth > annotationOpen && source.width === 0) {\n      y1 += annotationHeight;\n    }\n\n    if (annotationOpen !== -1 && target.depth > annotationOpen && target.width === 0) {\n      y2 += annotationHeight;\n    }\n\n    return {\n      x1: [x1],\n      y1: [y1],\n      x2: [x2],\n      y2: [y2],\n      opacity: 1,\n      timing: { duration },\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n\nexport function getX(width: number, xOffset: number, backboneOffset: number) {\n  return width > 1\n    ? (xOffset + backboneOffset) * width - backboneOffset\n    : (xOffset + backboneOffset) * width;\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable no-plusplus */\nimport { BundleMap } from '../Utils/BundleMap';\n\nimport { getX } from './LinkTransitions';\n\nexport default function bundleTransitions(\n  xOffset: number,\n  yOffset: number,\n  clusterOffset: number,\n  backboneOffset: number,\n  duration: number = 500,\n  expandedClusterList: string[],\n  stratifiedMap: any,\n  nodeList: any[],\n  annotationOpen: number,\n  annotationHeight: number,\n  bundleMap?: BundleMap,\n) {\n  xOffset = -xOffset;\n  backboneOffset = -backboneOffset;\n  const start = () => ({ x: 0, y: 0, opacity: 0 });\n\n  const enter = (data: any) => {\n    const validity = true;\n\n    const x = getX(stratifiedMap[data].width, xOffset, backboneOffset);\n\n    // let backboneBundleNodes = findBackboneBundleNodes(stratifiedMap, bundleMap)\n\n    let highestDepth = stratifiedMap[data].depth;\n    let lowestDepth = stratifiedMap[data].depth;\n\n    if (bundleMap && expandedClusterList.includes(data)) {\n      for (let i = 0; i < bundleMap[data].bunchedNodes.length; i++) {\n        // if(stratifiedMap[bundleMap[data].bunchedNodes[i]].width != 0)\n        // {\n        //   validity = false;\n        // }\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth < highestDepth\n        ) {\n          highestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth > lowestDepth\n        ) {\n          lowestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n      }\n    }\n\n    let y = yOffset * highestDepth;\n\n    if (annotationOpen !== -1 && highestDepth > annotationOpen) {\n      y += annotationHeight;\n    }\n\n    let height = 0;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const j in bundleMap![data].bunchedNodes) {\n      if (stratifiedMap[bundleMap![data].bunchedNodes[j]]) {\n        height++;\n      }\n    }\n\n    height *= clusterOffset;\n\n    if (!expandedClusterList.includes(data)) {\n      height = 10;\n    }\n\n    if (annotationOpen !== -1 && annotationOpen >= highestDepth && annotationOpen <= lowestDepth) {\n      height += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opacity: [!expandedClusterList.includes(data) ? 0 : 1],\n      timing: { duration },\n      validity,\n      height,\n    };\n  };\n\n  const update = (data: any) => {\n    const validity = true;\n\n    const x = getX(stratifiedMap[data].width, xOffset, backboneOffset);\n\n    // let backboneBundleNodes = findBackboneBundleNodes(stratifiedMap, bundleMap)\n\n    let highestDepth = stratifiedMap[data].depth;\n    let lowestDepth = stratifiedMap[data].depth;\n\n    if (bundleMap && expandedClusterList.includes(data)) {\n      for (let i = 0; i < bundleMap[data].bunchedNodes.length; i++) {\n        // if(stratifiedMap[bundleMap[data].bunchedNodes[i]].width != 0)\n        // {\n        //   validity = false;\n        // }\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth < highestDepth\n        ) {\n          highestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n\n        if (\n          stratifiedMap[bundleMap[data].bunchedNodes[i]] &&\n          stratifiedMap[bundleMap[data].bunchedNodes[i]].depth > lowestDepth\n        ) {\n          lowestDepth = stratifiedMap[bundleMap[data].bunchedNodes[i]].depth;\n        }\n      }\n    }\n\n    let y = yOffset * highestDepth;\n\n    if (annotationOpen !== -1 && highestDepth > annotationOpen) {\n      y += annotationHeight;\n    }\n\n    let height = 0;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const j in bundleMap![data].bunchedNodes) {\n      if (stratifiedMap[bundleMap![data].bunchedNodes[j]]) {\n        height++;\n      }\n    }\n\n    height *= clusterOffset;\n\n    if (!expandedClusterList.includes(data)) {\n      height = 10;\n    }\n\n    if (annotationOpen !== -1 && annotationOpen >= highestDepth && annotationOpen <= lowestDepth) {\n      height += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opacity: [!expandedClusterList.includes(data) ? 0 : 1],\n      timing: { duration },\n      validity,\n      height: [height],\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n","/* eslint-disable @typescript-eslint/ban-types */\nimport React, { FC } from 'react';\n\ntype LinkProps = {} & React.SVGProps<SVGLineElement>;\n\nconst Link: FC<LinkProps> = (props: LinkProps) => <line {...props} />;\n\nexport default Link;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nimport { getX } from './LinkTransitions';\n\nexport default function nodeTransitions(\n  xOffset: number,\n  yOffset: number,\n  clusterOffset: number,\n  backboneOffset: number,\n  // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n  duration: number = 500,\n  annotationOpen: number,\n  annotationHeight: number,\n) {\n  xOffset = -xOffset;\n  backboneOffset = -backboneOffset;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const start = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    const x = getX(data.width, xOffset, backboneOffset);\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    let y = yOffset * data.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && data.depth > annotationOpen && data.width === 0) {\n      y += annotationHeight;\n    }\n\n    return { x, y: y - yOffset, opacity: 0 };\n  };\n\n  const enter = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    const x = getX(data.width, xOffset, backboneOffset);\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    let y = yOffset * data.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && data.depth > annotationOpen && data.width === 0) {\n      y += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n      timing: { duration },\n    };\n  };\n\n  const update = (data: any) => {\n    let clusteredNodesInFront = 0;\n\n    const x = getX(data.width, xOffset, backboneOffset);\n\n    // eslint-disable-next-line max-len\n    clusteredNodesInFront =\n      clusteredNodesInFront === 0 ? clusteredNodesInFront : clusteredNodesInFront - 1;\n\n    let y = yOffset * data.depth - (yOffset - clusterOffset) * clusteredNodesInFront;\n\n    if (annotationOpen !== -1 && data.depth > annotationOpen && data.width === 0) {\n      y += annotationHeight;\n    }\n\n    return {\n      x: [x],\n      y: [y],\n      opactiy: 1,\n      timing: { duration },\n    };\n  };\n\n  return {\n    enter,\n    leave: start,\n    update,\n    start,\n  };\n}\n","import { ProvenanceGraph } from '@visdesignlab/trrack';\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { style } from 'typestyle';\n\nexport type UndoRedoConfig<T, S extends string, A> = {\n  undoCallback: () => void;\n  redoCallback: () => void;\n  graph?: ProvenanceGraph<T, S, A>;\n};\n\nconst undoButtonStyle = style({\n  marginTop: '2px',\n  borderRadius: '2px',\n  display: 'inline-block',\n  cursor: 'pointer',\n  fontFamily: 'Lato,Helvetica Neue,Arial,Helvetica,sans-serif',\n  fontSize: '14px',\n  marginRight: '1px',\n  $nest: {\n    '&:hover': {\n      backgroundColor: '#6c7c7c',\n    },\n    '&:active': {\n      backgroundColor: '#6c7c7c',\n    },\n  },\n});\n\nconst redoButtonStyle = style({\n  marginTop: '2px',\n  borderRadius: '2px',\n  display: 'inline-block',\n  cursor: 'pointer',\n  fontFamily: 'Lato,Helvetica Neue,Arial,Helvetica,sans-serif',\n  fontSize: '14px',\n\n  $nest: {\n    '&:hover': {\n      backgroundColor: '#6c7c7c',\n    },\n\n    '&:active': {\n      backgroundColor: '#6c7c7c',\n    },\n  },\n});\n\nfunction UndoRedoButton<T, S extends string, A>({\n  graph,\n  undoCallback,\n  redoCallback,\n}: UndoRedoConfig<T, S, A>) {\n  if (graph === undefined) {\n    return null;\n  }\n\n  const isAtRoot = graph.root === graph.current;\n  const isAtLatest = graph.nodes[graph.current].children.length === 0;\n\n  const margin = {\n    marginRight: '3px',\n  } as React.CSSProperties;\n\n  return (\n    <div>\n      <Button\n        className={undoButtonStyle}\n        disabled={isAtRoot}\n        variant=\"outlined\"\n        onClick={undoCallback}\n      >\n        <i className=\"fas fa-undo marginRight\" style={margin} />\n        Undo\n      </Button>\n\n      <Button\n        className={redoButtonStyle}\n        disabled={isAtLatest}\n        variant=\"outlined\"\n        onClick={redoCallback}\n      >\n        <i className=\"fas fa-redo marginRight\" style={margin} />\n        Redo\n      </Button>\n    </div>\n  );\n}\n\nexport default UndoRedoButton;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-unused-vars */\nimport {\n  DiffNode,\n  isChildNode,\n  NodeID,\n  Nodes,\n  Provenance,\n  ProvenanceNode,\n  StateNode,\n} from '@visdesignlab/trrack';\nimport * as d3 from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { ReactChild, useEffect, useState } from 'react';\nimport { NodeGroup } from 'react-move';\nimport { Popup, Tab } from 'semantic-ui-react';\nimport { style } from 'typestyle';\n\nimport { BundleMap, OriginMap } from '../Utils/BundleMap';\nimport { EventConfig } from '../Utils/EventConfig';\nimport findBundleParent from '../Utils/findBundleParent';\nimport translate from '../Utils/translate';\nimport { treeLayout } from '../Utils/TreeLayout';\n\nimport BackboneNode from './BackboneNode';\nimport BookmarkListView from './BookmarkListView';\nimport bundleTransitions from './BundleTransitions';\nimport Link from './Link';\nimport linkTransitions from './LinkTransitions';\nimport nodeTransitions from './NodeTransitions';\nimport { treeColor } from './Styles';\nimport UndoRedoButton from './UndoRedoButton';\n\nconst container = style({\n  alignItems: 'center',\n  justifyContent: 'center',\n  overflow: 'auto',\n});\n\ntype ProvVisProps<T, S extends string, A> = {\n  root: NodeID;\n  sideOffset?: number;\n  iconOnly?: boolean;\n  current: NodeID;\n  nodeMap: Nodes<T, S, A>;\n  approvedFunction: (id: NodeID) => void;\n  rejectedFunction: (id: NodeID) => void;\n  addToWorkflow: (id: NodeID) => void;\n  nodeCreationMap: OriginMap;\n  currentDataset: string;\n  backboneGutter?: number;\n  gutter?: number;\n  verticalSpace?: number;\n  annotationHeight?: number;\n  clusterVerticalSpace?: number;\n  regularCircleRadius?: number;\n  backboneCircleRadius?: number;\n  regularCircleStroke?: number;\n  backboneCircleStroke?: number;\n  topOffset?: number;\n  textSize?: number;\n  height?: number;\n  width?: number;\n  linkWidth?: number;\n  duration?: number;\n  clusterLabels?: boolean;\n  bundleMap?: BundleMap;\n  eventConfig?: EventConfig<S>;\n  changeCurrent?: (id: NodeID) => void;\n  brushCallback?: (selected: string[]) => void;\n  popupContent?: (nodeId: StateNode<T, S, A>) => ReactChild;\n  annotationContent?: (nodeId: StateNode<T, S, A>) => ReactChild;\n\n  undoRedoButtons?: boolean;\n  bookmarkToggle?: boolean;\n  bookmarkListView?: boolean;\n  editAnnotations?: boolean;\n  prov?: Provenance<T, S, A>;\n  ephemeralUndo?: boolean;\n};\n\nexport type StratifiedMap<T, S, A> = {\n  [key: string]: d3.HierarchyNode<ProvenanceNode<T, S, A>>;\n};\n\nexport type StratifiedList<T, S, A> = d3.HierarchyNode<ProvenanceNode<T, S, A>>[];\n\nfunction ProvVis<T, S extends string, A>({\n  nodeMap,\n  root,\n  current,\n  changeCurrent,\n  width = 400,\n  height = 800,\n  iconOnly = false,\n  gutter = 15,\n  backboneGutter = 20,\n  verticalSpace = 50,\n  clusterVerticalSpace = 50,\n  regularCircleRadius = 4,\n  backboneCircleRadius = 5,\n  regularCircleStroke = 3,\n  backboneCircleStroke = 3,\n  sideOffset = 200,\n  topOffset = 30,\n  textSize = 15,\n  linkWidth = 4,\n  duration = 600,\n  clusterLabels = true,\n  bundleMap = {},\n  eventConfig,\n  brushCallback,\n  popupContent,\n  annotationContent,\n  approvedFunction,\n  rejectedFunction,\n  addToWorkflow,\n  currentDataset,\n  nodeCreationMap,\n  editAnnotations = false,\n  prov,\n  ephemeralUndo = false,\n}: ProvVisProps<T, S, A>) {\n  const [first, setFirst] = useState(true);\n  const [bookmark, setBookmark] = useState<any>(null);\n  const [annotationOpen, setAnnotationOpen] = useState(-1);\n  const [annotationHeight, setAnnotationHeight] = useState(35);\n\n\n  let list: string[] = [];\n  const eventTypes = new Set<string>();\n\n  for (const j in nodeMap) {\n    const child = nodeMap[j];\n\n    if (isChildNode(child)) {\n      if (child.metadata.eventType) {\n        eventTypes.add(child.metadata.eventType);\n      }\n\n      if (\n        child.actionType === 'Ephemeral' &&\n        child.children.length === 1 &&\n        (nodeMap[child.parent].actionType !== 'Ephemeral' ||\n          nodeMap[child.parent].children.length > 1)\n      ) {\n        const group: string[] = [];\n        let curr = child;\n\n        while (curr.actionType === 'Ephemeral') {\n          group.push(curr.id);\n\n          if (curr.children.length === 1 && nodeMap[curr.children[0]].actionType === 'Ephemeral') {\n            curr = nodeMap[curr.children[0]] as DiffNode<T, S, A>;\n          } else {\n            break;\n          }\n        }\n\n        bundleMap[child.id] = {\n          metadata: '',\n          bundleLabel: '',\n          bunchedNodes: group,\n        };\n      }\n    }\n  }\n\n  if (bundleMap) {\n    list = list.concat(Object.keys(bundleMap));\n  }\n\n  function setDefaultConfig<E extends string>(types: Set<string>): EventConfig<E> {\n    const symbols = [\n      d3.symbol().type(d3.symbolStar).size(50),\n      d3.symbol().type(d3.symbolDiamond),\n      d3.symbol().type(d3.symbolTriangle),\n      d3.symbol().type(d3.symbolCircle),\n      d3.symbol().type(d3.symbolCross),\n      d3.symbol().type(d3.symbolSquare),\n      d3.symbol().type(d3.symbolWye),\n    ];\n\n    // Find nodes in the clusters whose entire cluster is on the backbone.\n    const conf: EventConfig<E> = {};\n    let counter = 0;\n\n    for (const j of types) {\n      conf[j] = {};\n      conf[j].backboneGlyph = (\n        <path className={treeColor(false)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      conf[j].bundleGlyph = (\n        <path className={treeColor(false)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      conf[j].currentGlyph = (\n        <path className={treeColor(true)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      conf[j].regularGlyph = (\n        <path className={treeColor(false)} d={symbols[counter]()!} strokeWidth={2} />\n      );\n\n      counter += 1;\n    }\n\n    return conf;\n  }\n\n  const [expandedClusterList, setExpandedClusterList] = useState<string[]>(Object.keys(bundleMap));\n\n  if (!eventConfig && eventTypes.size > 0 && eventTypes.size < 8) {\n    eventConfig = setDefaultConfig<S>(eventTypes);\n  }\n\n  useEffect(() => {\n    setFirst(false);\n  }, []);\n\n  const nodeList = Object.values(nodeMap).filter(() => true);\n\n  const copyList = Array.from(nodeList);\n\n  const keys = bundleMap ? Object.keys(bundleMap) : [];\n\n  // Find a list of all nodes included in a bundle.\n  let bundledNodes: string[] = [];\n\n  if (bundleMap) {\n    for (const key of keys) {\n      bundledNodes = bundledNodes.concat(bundleMap[key].bunchedNodes);\n      bundledNodes.push(key);\n    }\n  }\n\n  const strat = d3\n    .stratify<ProvenanceNode<T, S, A>>()\n    .id((d) => d.id)\n    .parentId((d) => {\n      if (d.id === root) return null;\n\n      if (isChildNode(d)) {\n        // If you are a unexpanded bundle, find your parent by going straight up.\n        if (\n          bundleMap &&\n          Object.keys(bundleMap).includes(d.id) &&\n          !expandedClusterList.includes(d.id)\n        ) {\n          let curr = d;\n\n          // eslint-disable-next-line no-constant-condition\n          while (true) {\n            const localCurr = curr;\n\n            if (\n              !bundledNodes.includes(localCurr.parent) ||\n              Object.keys(bundleMap).includes(localCurr.parent)\n            ) {\n              return localCurr.parent;\n            }\n\n            const temp = copyList.filter((c) => c.id === localCurr.parent)[0];\n\n            if (isChildNode(temp)) {\n              curr = temp;\n            }\n          }\n        }\n\n        const bundleParents = findBundleParent(d.parent, bundleMap);\n        let collapsedParent;\n\n        let allExpanded = true;\n\n        for (const j in bundleParents) {\n          if (!expandedClusterList.includes(bundleParents[j])) {\n            allExpanded = false;\n            collapsedParent = bundleParents[j];\n            break;\n          }\n        }\n\n        if (\n          bundledNodes.includes(d.parent) &&\n          bundleMap &&\n          !Object.keys(bundleMap).includes(d.parent) &&\n          !allExpanded\n        ) {\n          return collapsedParent;\n        }\n\n        return d.parent;\n      }\n\n      return null;\n    });\n\n  for (let i = 0; i < nodeList.length; i++) {\n    const bundleParents = findBundleParent(nodeList[i].id, bundleMap);\n\n    let allExpanded = true;\n\n    for (const j in bundleParents) {\n      if (!expandedClusterList.includes(bundleParents[j])) {\n        allExpanded = false;\n        break;\n      }\n    }\n\n    if (\n      bundledNodes.includes(nodeList[i].id) &&\n      !allExpanded &&\n      bundleMap &&\n      !Object.keys(bundleMap).includes(nodeList[i].id)\n    ) {\n      nodeList.splice(i, 1);\n      i--;\n    }\n  }\n\n  const stratifiedTree = strat(nodeList);\n\n  // //console.log(JSON.parse(JSON.stringify(stratifiedTree)));\n\n  const stratifiedList: StratifiedList<T, S, A> = stratifiedTree.descendants();\n  const stratifiedMap: StratifiedMap<T, S, A> = {};\n\n  stratifiedList.forEach((c) => {\n    stratifiedMap[c.id!] = c;\n  });\n  treeLayout(stratifiedMap, current, root);\n\n  let maxHeight = 0;\n  let maxWidth = 0;\n\n  for (const j in stratifiedList) {\n    if (stratifiedList[j].depth > maxHeight) {\n      maxHeight = stratifiedList[j].depth;\n    }\n\n    if ((stratifiedList[j] as any).width > maxWidth) {\n      maxWidth = (stratifiedList[j] as any).width;\n    }\n  }\n\n  const links = stratifiedTree.links();\n\n  const xOffset = gutter;\n  const yOffset = verticalSpace;\n\n  function regularGlyph(node: ProvenanceNode<T, S, A>) {\n    if (eventConfig) {\n      const { eventType } = node.metadata;\n\n      if (\n        eventType &&\n        eventType in eventConfig &&\n        eventType !== 'Root' &&\n        eventConfig[eventType].regularGlyph\n      ) {\n        return eventConfig[eventType].regularGlyph;\n      }\n    }\n\n    return (\n      <circle\n        className={treeColor(false)}\n        r={regularCircleRadius}\n        strokeWidth={regularCircleStroke}\n      />\n    );\n  }\n\n  function getY(height: number) {\n    const y = yOffset * height + 25;\n\n    return y;\n  }\n\n  function bundleGlyph(node: ProvenanceNode<T, S, A>) {\n    if (eventConfig) {\n      const { eventType } = node.metadata;\n\n      if (eventType && eventType in eventConfig && eventType !== 'Root') {\n        return eventConfig[eventType].bundleGlyph;\n      }\n    }\n\n    return (\n      <circle\n        className={treeColor(false)}\n        r={regularCircleRadius}\n        strokeWidth={regularCircleStroke}\n      />\n    );\n  }\n\n  let shiftLeft = 0;\n\n  if (maxWidth === 0) {\n    shiftLeft = 30;\n  } else if (maxWidth === 1) {\n    shiftLeft = 52;\n  } else if (maxWidth > 1) {\n    shiftLeft = 74;\n  }\n\n  const svgWidth = width;\n\n  const overflowStyle = {\n    overflowX: 'auto',\n    overflowY: 'auto',\n  } as React.CSSProperties;\n\n  const tabsStyle = {\n    backgroundColor: 'lightgrey',\n    width: '270px',\n  } as React.CSSProperties;\n\n  const bookmarkTabView = (\n    <svg\n      height={maxHeight < height ? height : maxHeight}\n      id=\"bookmarkView\"\n      style={{ overflow: 'visible' }}\n      width={svgWidth}\n    >\n      <g id=\"globalG\" transform={translate(shiftLeft, topOffset)}>\n        <BookmarkListView\n          currentNode={current}\n          eventConfig={eventConfig}\n          graph={prov ? prov.graph : undefined}\n        />\n      </g>\n    </svg>\n  );\n\n  const graphTabView = (\n    <div>\n      <div id=\"undoRedoDiv\">\n        <UndoRedoButton\n          graph={prov ? prov.graph : undefined}\n          redoCallback={() => {\n            if (prov) {\n              if (ephemeralUndo) {\n                prov.goForwardToNonEphemeral();\n              } else {\n                prov.goForwardOneStep();\n              }\n            }\n          }}\n          undoCallback={() => {\n            if (prov) {\n              if (ephemeralUndo) {\n                prov.goBackToNonEphemeral();\n              } else {\n                prov.goBackOneStep();\n              }\n            }\n          }}\n        />\n      </div>\n\n      <svg\n        height={maxHeight < height ? height : maxHeight}\n        id=\"topSvg\"\n        style={{ overflow: 'visible' }}\n        width={svgWidth}\n      >\n        <rect fill=\"none\" height={height} stroke=\"none\" width={width} />\n        <g id=\"globalG\" transform={translate(shiftLeft, topOffset)}>\n          <NodeGroup\n            data={links}\n            keyAccessor={(link) => `${link.source.id}${link.target.id}`}\n            {...linkTransitions(\n              xOffset,\n              yOffset,\n              clusterVerticalSpace,\n              backboneGutter - gutter,\n              duration,\n              annotationOpen,\n              annotationHeight,\n            )}\n          >\n            {(linkArr) => (\n              <>\n                {linkArr.map((link) => {\n                  const { key, state } = link;\n\n                  return (\n                    <g key={key}>\n                      <Link {...state} fill=\"#ccc\" stroke=\"#ccc\" strokeWidth={linkWidth} />\n                    </g>\n                  );\n                })}\n              </>\n            )}\n            \n          </NodeGroup>\n          <NodeGroup\n            data={stratifiedList}\n            keyAccessor={(d) => d.id}\n            {...nodeTransitions(\n              xOffset,\n              yOffset,\n              clusterVerticalSpace,\n              backboneGutter - gutter,\n              duration,\n              annotationOpen,\n              annotationHeight,\n            )}\n          >\n            {(nodes) => (\n              <>\n                {nodes.map((node) => {\n                  const { data: d, key, state } = node;\n                  const popupTrigger = (\n                    <g\n                      key={key}\n                      transform={\n                        d.width === 0 ? translate(state.x, state.y) : translate(state.x, state.y)\n                      }\n                      onClick={() => {\n                        if (changeCurrent) {\n                          changeCurrent(d.id);\n                        }\n                      }}\n                      onMouseOut={() => {\n                        setBookmark(null);\n                      }}\n                      onMouseOver={() => {\n                        setBookmark(d.id);\n                      }}\n                    >\n                      {d.width === 0 && prov ? (\n                        <g>\n                          <rect\n                            height=\"25\"\n                            opacity=\"0\"\n                            transform=\"translate(0, -12.5)\"\n                            width=\"200\"\n                          />\n                          ,\n                          <BackboneNode\n                            addToWorkflow={addToWorkflow}\n                            annotationContent={annotationContent}\n                            annotationOpen={annotationOpen}\n                            approvedFunction={approvedFunction}\n                            bookmark={bookmark}\n                            bundleMap={bundleMap}\n                            clusterLabels={clusterLabels}\n                            current={current === d.id}\n                            currentDataset={currentDataset}\n                            duration={duration}\n                            editAnnotations={editAnnotations}\n                            eventConfig={eventConfig}\n                            exemptList={expandedClusterList}\n                            expandedClusterList={expandedClusterList}\n                            first={first}\n                            iconOnly={iconOnly}\n                            node={d.data}\n                            nodeCreationMap={nodeCreationMap}\n                            nodeMap={stratifiedMap}\n                            popupContent={popupContent}\n                            prov={prov}\n                            radius={backboneCircleRadius}\n                            rejectedFunction={rejectedFunction}\n                            setAnnotationHeight={setAnnotationHeight}\n                            setAnnotationOpen={setAnnotationOpen}\n                            setBookmark={setBookmark}\n                            setExemptList={setExpandedClusterList}\n                            strokeWidth={backboneCircleStroke}\n                            textSize={textSize}\n                          />\n                        </g>\n                      ) : popupContent !== undefined ? (\n                        <Popup\n                          content={popupContent(d.data)}\n                          trigger={\n                            <g\n                              onClick={() => {\n                                setAnnotationOpen(-1);\n                              }}\n                            >\n                              {keys.includes(d.id) ? bundleGlyph(d.data) : regularGlyph(d.data)}\n                            </g>\n                          }\n                        />\n                      ) : (\n                        <g\n                          onClick={() => {\n                            setAnnotationOpen(-1);\n                          }}\n                        >\n                          {regularGlyph(d.data)}\n                        </g>\n                      )}\n                    </g>\n                  );\n\n                  return popupTrigger;\n                })}\n              </>\n            )}\n          </NodeGroup>\n          <NodeGroup\n            data={keys}\n            keyAccessor={(key) => `${key}`}\n            {...bundleTransitions(\n              xOffset,\n              verticalSpace,\n              clusterVerticalSpace,\n              backboneGutter - gutter,\n              duration,\n              expandedClusterList,\n              stratifiedMap,\n              stratifiedList,\n              annotationOpen,\n              annotationHeight,\n              bundleMap,\n            )}\n          >\n            {(bundle) => (\n              <>\n                {bundle.map((b) => {\n                  const { key, state } = b;\n\n                  if (\n                    bundleMap === undefined ||\n                    (stratifiedMap[b.key] as any).width !== 0 ||\n                    state.validity === false\n                  ) {\n                    return null;\n                  }\n\n                  return (\n                    <g\n                      key={key}\n                      transform={translate(\n                        state.x - gutter + 5,\n                        state.y - clusterVerticalSpace / 2,\n                      )}\n                    >\n                      <rect\n                        fill=\"none\"\n                        height={state.height}\n                        rx=\"10\"\n                        ry=\"10\"\n                        stroke=\"rgb(248, 191, 132)\"\n                        strokeWidth=\"2px\"\n                        style={{ opacity: state.opacity }}\n                        width={iconOnly ? 42 : sideOffset - 15}\n                      />\n                    </g>\n                  );\n                })}\n              </>\n            )}\n          </NodeGroup>\n        </g>\n      </svg>\n    </div>\n  );\n\n  const panes = [\n    {\n      menuItem: { key: 'Graph', icon: 'share alternate', content: 'Graph' },\n      render: () => <Tab.Pane attached={false}>{graphTabView}</Tab.Pane>,\n    },\n    {\n      menuItem: {\n        key: 'Bookmarks',\n        icon: 'bookmark',\n        content: 'Bookmarks',\n      },\n      render: () => <Tab.Pane attached={false}>{bookmarkTabView}</Tab.Pane>,\n    },\n  ];\n\n  // const brushedNodes: string[] = [];\n\n  // const brush = d3\n  //   .brushY()\n  //   .extent([\n  //     [15, 0],\n  //     [50, 800],\n  //   ])\n  //   .on('end', (e) => {\n  //     brushedNodes = [];\n\n  //     if (!e.selection) {\n  //       return;\n  //     }\n\n  //     for (const j of stratifiedList) {\n  //       const y = getY(j.depth);\n\n  //       if (j.id && y > e.selection[0] && y < e.selection[1]) {\n  //         brushedNodes.push(j.id);\n  //       }\n  //     }\n\n  //     if (brushCallback) {\n  //       brushCallback(brushedNodes);\n  //     }\n  //   });\n\n  // d3.select<any, any>('#topSvg').call(brush);\n\n  return (\n    <div className={container} id=\"prov-vis\" style={overflowStyle}>\n      <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n    </div>\n  );\n}\n\nexport default observer(ProvVis);\n","export default function translate(x: number, y: number = x): string {\n  return `translate(${x}, ${y})`;\n}\n","import React from 'react';\n\nimport translate from '../Utils/Translate';\n\n// import { symbol, symbols } from 'd3';\n\ntype AddTaskGlyphProps = {\n  size?: number;\n  fill?: string;\n  scale?: number;\n}\n\n//Occurs on selecting rectangular brush\nexport function ChangeBrushType({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M0+141.75L141.069+0.305731\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n            <path\n              d=\"M76.2578+103.486L90.5601+114.114C90.5601+114.114+99.8156+137.498+74.2147+137.498C53.7829+137.498+48.8808+110.711+49.6965+109.863C49.6965+109.863+60.7858+122.325+61.9556+116.24C63.9988+105.611+76.2578+103.486+76.2578+103.486ZM127.585+49.613C127.308+49.6166+127.031+49.6388+126.751+49.6794C124.356+50.0268+121.717+51.7745+118.137+55.3776L84.3591+88.0407C84.3585+88.0411+84.3578+88.0402+84.3573+88.0407C82.4109+89.8348+81.776+93.0922+82.5535+96.6415C83.3425+100.243+85.4619+103.608+88.3851+105.635C91.2896+107.65+95.1882+108.221+99.2129+107.403C103.001+106.633+106.521+104.693+108.654+102.179C108.654+102.179+108.653+102.178+108.654+102.177C108.654+102.177+108.655+102.178+108.655+102.177L134.486+66.7279C134.487+66.7273+134.486+66.7266+134.486+66.726C136.375+63.9384+137.395+61.4407+137.462+59.166C137.537+56.6101+136.4+54.3632+133.911+52.4215C131.424+50.4808+129.522+49.5881+127.585+49.613Z\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n            <path\n              d=\"M17.5647+7.49443L61.7224+7.49443C66.5892+7.49443+70.5345+12.5807+70.5345+18.8549L70.5345+50.7774C70.5345+57.0516+66.5892+62.1379+61.7224+62.1379L17.5647+62.1379C12.6979+62.1379+8.75258+57.0516+8.75258+50.7774L8.75258+18.8549C8.75258+12.5807+12.6979+7.49443+17.5647+7.49443Z\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on clear all click ???\nexport function ClearAll({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf2ed;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on clear all click ???\nexport function Filter({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf0b0;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on removing a brush\nexport function RemoveBrush({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf057;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on shifting a rectangle size, dragging it ???\nexport function ChangeBrush({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf044;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//Occurs on invert\nexport function Invert({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf042;\n        </text>\n      </g>\n    </g>\n  );\n}\n\nexport function TurnPrediction({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path d=\"M11.34-11.34L11.6801+130.41L153.09+130.41\" fill=\"none\" opacity=\"1\" stroke={fill} strokeLinecap=\"round\" strokeLinejoin=\"miter\" strokeWidth=\"25\"/>\n            <path d=\"M41.0944+103.248C41.0944+96.3307+46.8061+90.7234+53.8519+90.7234C60.8977+90.7234+66.6094+96.4351+66.6094+103.481C66.6094+110.527+60.8977+116.238+53.8519+116.238C46.8061+116.238+41.0944+110.165+41.0944+103.248Z\" fill={fill} opacity=\"1\"/>\n            <path d=\"M28.3369+70.6417C28.3369+63.7248+34.0486+58.1175+41.0944+58.1175C48.1402+58.1175+53.8519+63.8292+53.8519+70.875C53.8519+77.9208+48.1402+83.6325+41.0944+83.6325C34.0486+83.6325+28.3369+77.5587+28.3369+70.6417Z\" fill={fill} opacity=\"1\"/>\n            <path d=\"M66.6094+83.3992C66.6094+76.4823+72.3211+70.875+79.3669+70.875C86.4127+70.875+92.1244+76.5867+92.1244+83.6325C92.1244+90.6783+86.4127+96.39+79.3669+96.39C72.3211+96.39+66.6094+90.3162+66.6094+83.3992Z\" fill={fill} opacity=\"1\"/>\n            <path d=\"M53.8519+57.8842C53.8519+50.9673+59.5636+45.36+66.6094+45.36C73.6552+45.36+79.3669+51.0717+79.3669+58.1175C79.3669+65.1633+73.6552+70.875+66.6094+70.875C59.5636+70.875+53.8519+64.8012+53.8519+57.8842Z\" fill={fill} opacity=\"1\"/>\n            <path d=\"M101.341+31.4476C101.341+24.5307+107.053+18.9234+114.098+18.9234C121.144+18.9234+126.856+24.6352+126.856+31.6809C126.856+38.7267+121.144+44.4384+114.098+44.4384C107.053+44.4384+101.341+38.3646+101.341+31.4476Z\" fill={fill} opacity=\"1\"/>\n            <path d=\"M90.001+31.2403C90.001+18.175+100.79+7.58342+114.098+7.58342C127.407+7.58342+138.196+18.3722+138.196+31.6809C138.196+44.9896+127.407+55.7784+114.098+55.7784C100.79+55.7784+90.001+44.3056+90.001+31.2403Z\" fill=\"none\" opacity=\"1\" stroke={fill} strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"8\"/>\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\n//When the check is clicked\nexport function LockPrediction({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf0eb;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When a rectangular brush is added\nexport function AddBrush({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n          textAnchor=\"middle\"\n        >\n          &#xf5cb;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When a point is individually deselected\nexport function PointDeselection({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf12d;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When a brush or individual selection is made\nexport function PointSelection({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf1fc;\n        </text>\n      </g>\n    </g>\n  );\n}\n\n//When add plot is clicked, or initial loading of data.\nexport function AddPlot({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M11.34-11.34L11.6801+130.41L153.09+130.41\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"miter\"\n              strokeWidth=\"25\"\n            />\n            <path\n              d=\"M77.7957+28.35L77.7957+99.225\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"butt\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"25\"\n            />\n            <path\n              d=\"M113.4+63.8289L42.525+63.7875\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"butt\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"25\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\n//Whenever a new dataset is selected\nexport function LoadDataset({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf0ce;\n        </text>\n      </g>\n    </g>\n  );\n}\n\nexport function MultiBrush({ size = 15, fill = \"#ccc\" }: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path d=\"M70.875+133.084C94.2246+133.264+117.574+113.829+117.574+87.3323C117.574+60.8354+117.574+0+117.574+0\" fill=\"none\" opacity=\"1\" stroke={fill} strokeLinecap=\"butt\" strokeLinejoin=\"round\" strokeWidth=\"15\"/>\n            <path d=\"M70.875+133.084C47.5254+133.264+24.1758+113.829+24.1758+87.3323C24.1758+60.8354+24.1758+0+24.1758+0\" fill=\"none\" opacity=\"1\" stroke={fill} strokeLinecap=\"butt\" strokeLinejoin=\"round\" strokeWidth=\"15\"/>\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\nexport function SwitchCategoryVisibility({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf61f;\n        </text>\n      </g>\n    </g>\n  );\n}\n\nexport function ChangeBrushSize({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g transform={translate(-size / 2, -size / 2)}>\n        <svg height={size} viewBox=\"0 0 141.75 141.75\" width={size}>\n          <g id=\"Layer 1\">\n            <path\n              d=\"M76.8252+103.165L90.6711+113.451C90.6711+113.451+99.6313+136.08+74.8472+136.08C55.0673+136.08+50.3216+110.158+51.1113+109.337C51.1113+109.337+61.8468+121.397+62.9792+115.508C64.9572+105.222+76.8252+103.165+76.8252+103.165ZM126.515+51.0305C126.247+51.0339+125.979+51.0555+125.708+51.0948C123.388+51.431+120.834+53.1223+117.368+56.6091L84.6679+88.2186C84.6674+88.219+84.6667+88.2181+84.6662+88.2186C82.7819+89.9548+82.1673+93.1071+82.92+96.5419C83.6838+100.027+85.7355+103.283+88.5655+105.246C91.3773+107.195+95.1515+107.748+99.0478+106.956C102.715+106.212+106.122+104.333+108.187+101.901C108.188+101.9+108.187+101.9+108.187+101.899C108.188+101.899+108.189+101.9+108.189+101.899L133.196+67.5932C133.196+67.5927+133.195+67.592+133.196+67.5915C135.024+64.8937+136.012+62.4766+136.077+60.2753C136.149+57.8019+135.048+55.6274+132.639+53.7484C130.231+51.8702+128.39+51.0064+126.515+51.0305Z\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"8\"\n            />\n            <path\n              d=\"M7.0875+29.2572L49.6125+29.2572\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"12.58\"\n            />\n            <path\n              d=\"M28.4705+8.505L28.35+51.03\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"12.58\"\n            />\n            <path\n              d=\"M28.4705+72.2925L70.9955+29.7675\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"5\"\n            />\n            <path\n              d=\"M58.1175+62.3878L58.1175+62.3878L70.0025+62.3878L93.555+62.3878\"\n              fill=\"none\"\n              opacity=\"1\"\n              stroke={fill}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"12.58\"\n            />\n          </g>\n        </svg>\n      </g>\n    </g>\n  );\n}\n\nexport function ChangeCategory({\n  size = 15,\n  fill = \"#ccc\",\n}: AddTaskGlyphProps) {\n  return (\n    <g>\n      <circle fill=\"white\" r={size - size / 4} />\n      <g>\n        <text\n          dominantBaseline=\"middle\"\n          fill={fill}\n          fontFamily=\"FontAwesome\"\n          fontSize={size}\n\n\n          textAnchor=\"middle\"\n        >\n          &#xf61f;\n        </text>\n      </g>\n    </g>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-vars */\nimport { NodeID, Provenance, ProvenanceGraph } from '@visdesignlab/trrack';\nimport { configure } from 'mobx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BundleMap, OriginMap } from '../Utils/BundleMap';\nimport { EventConfig } from '../Utils/EventConfig';\n\nimport ProvVis from './ProvVis';\nimport UndoRedoButton from './UndoRedoButton';\n\nexport type ProvVisConfig = {\n  eventConfig: EventConfig<any>;\n  editAnnotations: boolean;\n  bundleMap: BundleMap;\n  iconOnly: boolean;\n  iconSize: number;\n  height: number;\n  width: number;\n  sideOffset: number;\n  backboneGutter: number;\n  gutter: number;\n  verticalSpace: number;\n  regularCircleRadius: number;\n  backboneCircleRadius: number;\n  regularCircleStroke: number;\n  backboneCircleStroke: number;\n  topOffset: number;\n  textSize: number;\n  linkWidth: number;\n  duration: number;\n};\nconfigure({ isolateGlobalState: true });\nexport function ProvVisCreator<T, S extends string, A>(\n  node: Element,\n  prov: Provenance<T, S, A>,\n  currentDataset: string,\n  approvedFunction: (id: NodeID) => void,\n  rejectedFunction: (id: NodeID) => void,\n  nodeCreationMap: OriginMap,\n  callback?: (id: NodeID) => void,\n  brushCallback?: (selected: string[]) => void,\n  ephemeralUndo = false,\n  fauxRoot: NodeID = prov.graph.root,\n\n  config: Partial<ProvVisConfig> = {},\n) {\n  prov.addGlobalObserver(() => {\n    ReactDOM.render(\n      <ProvVis\n        {...config}\n        // eslint-disable-next-line no-console\n        addToWorkflow={(id: string) => console.log(id)}\n        approvedFunction={approvedFunction}\n        brushCallback={brushCallback}\n        changeCurrent={callback}\n        current={prov.graph.current}\n        currentDataset={currentDataset}\n        ephemeralUndo={ephemeralUndo}\n        nodeCreationMap={nodeCreationMap}\n        nodeMap={prov.graph.nodes}\n        prov={prov}\n        rejectedFunction={rejectedFunction}\n        root={fauxRoot}\n        undoRedoButtons\n      />,\n      node,\n    );\n  });\n\n  ReactDOM.render(\n    <ProvVis\n      {...config}\n      // eslint-disable-next-line no-console\n      addToWorkflow={(id: string) => console.log(id)}\n      approvedFunction={approvedFunction}\n      brushCallback={brushCallback}\n      changeCurrent={callback}\n      current={prov.graph.current}\n      currentDataset={currentDataset}\n      ephemeralUndo={ephemeralUndo}\n      nodeCreationMap={nodeCreationMap}\n      nodeMap={prov.graph.nodes}\n      prov={prov}\n      rejectedFunction={rejectedFunction}\n      root={fauxRoot}\n      undoRedoButtons\n    />,\n    node,\n  );\n}\n\nexport function UndoRedoButtonCreator<T, S extends string, A>(\n  node: Element,\n  graph: ProvenanceGraph<T, S, A>,\n  undoCallback: () => void,\n  redoCallback: () => void,\n) {\n  ReactDOM.render(\n    <UndoRedoButton graph={graph} redoCallback={redoCallback} undoCallback={undoCallback} />,\n    node,\n  );\n}\n","import {\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Theme,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  }),\n);\n\nfunction useDropdown(\n  id: string,\n  label: string,\n  defaultState: string,\n  opts: { key: string; desc: string }[],\n  val?: string,\n  setVal?: (val: string) => void,\n) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(defaultState);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const val = event.target.value as string;\n\n    if (setVal) {\n      setVal(val);\n    } else {\n      setSelected(val);\n    }\n  };\n\n  const Dropdown = () => (\n    <FormControl className={classes.formControl} variant=\"outlined\">\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select\n        id={`${id}-select`}\n        label={label}\n        labelId={id}\n        value={val ? val : selected}\n        onChange={handleChange}\n      >\n        {opts.map((opt) => (\n          <MenuItem key={opt.key} value={opt.key}>\n            {opt.desc}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n\n  return { selected, Dropdown, setSelected };\n}\n\nexport default useDropdown;\n","import {\n  Button,\n  ButtonGroup,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Theme,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { observer } from 'mobx-react';\nimport React, { FC, useCallback, useContext, useState } from 'react';\n\nimport Store from '../../Store/Store';\nimport { Plot } from '../../Store/Types/Plot';\nimport { getPlotId } from '../../Utils/IDGens';\nimport useDropdown from '../Dropdown';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    divSpacing: {\n      margin: theme.spacing(1),\n    },\n    center: {\n      justifyContent: 'center',\n    },\n  }),\n);\n\nconst AddPlot: FC = () => {\n  const classes = useStyles();\n  const [anchor, setAnchor] = useState<HTMLElement | null>(null);\n\n  const { loadedDataset: dataset, addPlot } = useContext(Store).exploreStore;\n\n  const columns =\n    dataset?.numericColumns.map((col) => ({\n      key: col,\n      desc: `${dataset?.columnInfo[col].fullname || ''} (${dataset?.columnInfo[col].unit || ''})`,\n    })) || [];\n\n  const { selected: xCol, Dropdown: XDropdown, setSelected: setX } = useDropdown(\n    'x-axis-dropdown',\n    'X Axis',\n    '',\n    columns,\n  );\n  const { selected: yCol, Dropdown: YDropdown, setSelected: setY } = useDropdown(\n    'y-axis-dropdown',\n    'Y Axis',\n    '',\n    columns,\n  );\n\n  const handleClose = useCallback(() => {\n    setAnchor(null);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    const plot: Plot = {\n      id: getPlotId(),\n      x: xCol,\n      y: yCol,\n    };\n\n    addPlot(plot);\n    setX('');\n    setY('');\n    handleClose();\n  }, [setX, setY, xCol, yCol, addPlot, handleClose]);\n\n  return (\n    <>\n      <div className={classes.divSpacing}>\n        <Button\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          variant=\"contained\"\n          onClick={(event: React.MouseEvent<HTMLButtonElement>) => {\n            setAnchor(event.currentTarget);\n          }}\n        >\n          Add Plot\n        </Button>\n      </div>\n      <Menu anchorEl={anchor} open={Boolean(anchor)} onClose={handleClose}>\n        <MenuItem button={false}>\n          <XDropdown />\n        </MenuItem>\n        <MenuItem button={false}>\n          <YDropdown />\n        </MenuItem>\n        <MenuItem button={false} selected={false} divider />\n        <MenuItem alignItems=\"center\" button={false}>\n          <ButtonGroup className={classes.center} fullWidth>\n            <IconButton color=\"primary\" disabled={!(xCol && yCol)} onClick={handleSubmit}>\n              <DoneIcon />\n            </IconButton>\n            <IconButton\n              color=\"secondary\"\n              onClick={() => {\n                setX('');\n                setY('');\n                setAnchor(null);\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </ButtonGroup>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default observer(AddPlot);\n","/* eslint-disable no-console */\nimport {\n  AppBar,\n  Button,\n  Divider,\n  FormControl,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from '@material-ui/core';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext } from 'react';\n\nimport Store from '../Store/Store';\n\nimport AddPlot from './AddPlotComponent/AddPlot';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  formControlwoWidth: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst Navbar: FC = () => {\n  const classes = useStyles();\n  // const [open, setOpen] = useState(false);\n\n\n  const {\n    exploreStore: { brushType, switchBrush, filter },\n  } = useContext(Store);\n\n  return (\n    <div>\n      <AppBar color=\"transparent\" position=\"static\">\n        <Toolbar>\n          <AddPlot />\n          <Divider orientation=\"vertical\" flexItem />\n          <FormControl className={classes.formControl}>\n            <ToggleButtonGroup\n              value={brushType}\n              exclusive\n              onChange={(_, bt) => {\n                switchBrush(bt);\n              }}\n            >\n              <ToggleButton value=\"Rectangular\">\n                <CheckBoxOutlineBlankIcon />\n              </ToggleButton>\n              <ToggleButton value=\"Freeform Small\">\n                <RadioButtonUncheckedIcon fontSize=\"small\" />\n              </ToggleButton>\n              <ToggleButton value=\"Freeform Medium\">\n                <RadioButtonUncheckedIcon />\n              </ToggleButton>\n              <ToggleButton value=\"Freeform Large\">\n                <RadioButtonUncheckedIcon fontSize=\"large\" />\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </FormControl>\n          <Divider />\n          {/* <ComparisonDropdown /> */}\n          <Button\n            color=\"primary\"\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            variant=\"outlined\"\n            onClick={() => {\n              filter('Out');\n            }}\n          >\n            Filter Out\n          </Button>\n\n          <Button\n            color=\"primary\"\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            variant=\"outlined\"\n            onClick={() => {\n              // loadComparisonFilter(\"demo\")\n              filter('In');\n            }}\n          >\n            Filter In\n          </Button>\n\n          {/* <Button\n            color=\"primary\"\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            variant=\"outlined\"\n            onClick={() => {\n              // loadComparisonFilter(\"demo\")\n              storeProvenance(provenance.graph, workflows, provDb, currentProject?.key || 'Empty');\n            }}\n          >\n            Store prov\n          </Button> */}\n\n          {/* <Button\n            color=\"primary\"\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            variant=\"outlined\"\n            onClick={() => {\n              setOpen(true);\n            }}\n          >\n            Bundle\n          </Button> */}\n\n          {/* <Dialog aria-labelledby=\"form-dialog-title\" open={open} onClose={handleClose}>\n            <DialogContent>\n              <TextField\n                id=\"name\"\n                label=\"Bundle Name\"\n                margin=\"dense\"\n                type=\"email\"\n                autoFocus\n                fullWidth\n                onChange={(e) => console.log(e.target.value)}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button color=\"primary\" onClick={handleClose}>\n                Create Bundle\n              </Button>\n            </DialogActions>\n          </Dialog> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(Navbar as any).whyDidYouRender = {\n  logOnDifferentValues: true,\n};\nexport default observer(Navbar);\n","export const MATCHES = 'rgb(254, 95, 85)';\nexport const IPNS = 'rgb(89, 205, 144)';\nexport const ISNP = 'rgb(250, 192, 94)';\nexport const UNION = 'rgb(244,106,15)';\nexport const NON_UNION = 'rgb(44, 127, 184)';\n\nexport const RANK_BAR_FOREGROUND = 'rgb(168,211,238)';\n","import { createStyles, makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { scaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, useEffect, useMemo, useRef, useState } from 'react';\n\nimport translate from '../../Utils/Translate';\nimport { RANK_BAR_FOREGROUND } from '../ColorSpecs';\n\ntype Props = {\n  height?: number;\n  rank: number;\n  label?: string;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    common: {\n      fill: RANK_BAR_FOREGROUND,\n    },\n    foreground: {\n      opacity: 0.9,\n    },\n    background: {\n      opacity: 0.3,\n    },\n    label: {\n      fill: 'black',\n    },\n  }),\n);\n\nconst Bar: FC<Props> = ({ rank, height = 45, label = rank.toFixed(2) }: Props) => {\n  const classes = useStyles();\n  const ref = useRef<SVGSVGElement>(null);\n\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    if (ref.current) {\n      const bounds = ref.current.getBoundingClientRect();\n\n      if (width !== bounds.width) setWidth(bounds.width);\n    }\n  }, [width]);\n\n  const scale = useMemo(() => {\n    return scaleLinear().domain([0, 1]).range([0, width]);\n  }, [width]);\n\n  return (\n    <svg ref={ref} height={height} width=\"100%\">\n      <rect className={clsx(classes.common, classes.background)} height={height} width={width} />\n      <rect\n        className={clsx(classes.common, classes.foreground)}\n        height={height}\n        width={scale(rank)}\n      />\n      <Typography\n        className={classes.label}\n        component=\"text\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"start\"\n        transform={translate(width * 0.05, height / 2)}\n        variant=\"button\"\n      >\n        {label}\n      </Typography>\n    </svg>\n  );\n};\n\nexport default observer(Bar);\n","import {\n  CircularProgress,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport debounce from 'debounce';\nimport { observer } from 'mobx-react';\nimport React, { useContext, useMemo } from 'react';\n\nimport Store from '../../Store/Store';\n\nimport Bar from './Bar';\n\nexport const useStyles = makeStyles(() =>\n  createStyles({\n    centerContainer: {\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n    },\n    table: {\n      tableLayout: 'auto',\n    },\n  }),\n);\n\nconst PredictionTable = () => {\n  const classes = useStyles();\n\n  const {\n    exploreStore: {\n      predictions,\n      setPredictionSelection,\n      setHoveredPrediction,\n      isLoadingPredictions,\n    },\n  } = useContext(Store);\n\n  const debouncedSetHoveredPrediction = useMemo(() => {\n    return debounce(setHoveredPrediction, 500);\n  }, [setHoveredPrediction]);\n\n  if (isLoadingPredictions)\n    return (\n      <div className={classes.centerContainer}>\n        <CircularProgress />\n        <Typography variant=\"button\">Computing Predictions</Typography>\n      </div>\n    );\n\n  if (predictions.length === 0)\n    return (\n      <div className={classes.centerContainer}>\n        <Typography variant=\"button\">Please make a selection</Typography>\n      </div>\n    );\n\n  return (\n    <div style={{ overflow: 'scroll', padding: '1em' }}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              {/* <TableCell width=\"20%\">Intent</TableCell> */}\n              <TableCell\n                align=\"center\"\n                style={{\n                  fontWeight: 'bold',\n                  fill: '#F2',\n                  fontSize: '18px',\n                  fontFamily: 'Lato, Helvetica Neue,Arial,Helvetica,sans-serif',\n                }}\n                width=\"90%\"\n              >\n                Selection Predictions\n              </TableCell>\n              <TableCell width=\"10%\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {predictions.map((pred) => {\n              return (\n                <TableRow\n                  key={pred.hash}\n                  hover\n                  onMouseOut={() => {\n                    debouncedSetHoveredPrediction(null);\n                  }}\n                  onMouseOver={() => {\n                    debouncedSetHoveredPrediction(pred);\n                  }}\n                >\n                  <Tooltip title={pred.description}>\n                    <TableCell width=\"90%\">\n                      <Bar label={`${pred.intent} (${pred.rank.toFixed(2)})`} rank={pred.rank} />\n                    </TableCell>\n                  </Tooltip>\n                  <TableCell width=\"10%\">\n                    <IconButton onClick={() => setPredictionSelection(pred)}>\n                      <TouchAppIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default observer(PredictionTable);\n","import { createStyles, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport React, { FC, useEffect, useState } from 'react';\n\nimport translate from '../../../Utils/Translate';\n\nimport { ResizeDirection } from './BrushComponent';\n\ntype Props = {\n  id: string;\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n  onMouseDown: (event: React.MouseEvent<SVGRectElement, MouseEvent>, id: string) => void;\n  onResizeStart: (brushId: string, direction: ResizeDirection) => void;\n  closeHandler: (id: string) => void;\n  resizeHandlerSize?: number;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    base: {\n      fill: 'green',\n      opacity: 0.1,\n      stroke: 'black',\n      strokeWidth: 2,\n      cursor: 'move',\n      '&:hover': {\n        strokeWidth: 5,\n      },\n    },\n    closeIconText: {\n      fontWeight: 'bolder',\n      fontFamily: 'FontAwesome',\n      fontSize: '1.5rem',\n      fill: 'red',\n    },\n    closeIconBackground: {\n      cursor: 'pointer',\n      fill: '#777',\n      opacity: '0.1',\n    },\n    resizeBase: {\n      pointerEvents: 'all',\n      fill: 'none',\n      stroke: 'none',\n    },\n    ns: {\n      cursor: 'ns-resize',\n    },\n    ew: {\n      cursor: 'ew-resize',\n    },\n    nwse: {\n      cursor: 'nwse-resize',\n    },\n    nesw: {\n      cursor: 'nesw-resize',\n    },\n  }),\n);\n\nconst RectBrush: FC<Props> = ({\n  id,\n  x,\n  y,\n  height,\n  width,\n  onMouseDown,\n  onResizeStart,\n  closeHandler,\n  resizeHandlerSize = 10,\n}: Props) => {\n  const [showIcon, setShowIcon] = useState(false);\n  const [timeoutId, setTimeoutId] = useState(-1);\n\n  const { base, resizeBase, ns, ew, nwse, nesw, closeIconText, closeIconBackground } = useStyles();\n\n  useEffect(() => {\n    return () => clearInterval(timeoutId);\n  });\n\n  const baseRectangle = (\n    <rect\n      className={base}\n      height={height}\n      width={width}\n      onMouseDown={(event: React.MouseEvent<SVGRectElement, MouseEvent>) => {\n        onMouseDown(event, id);\n      }}\n      onMouseEnter={() => {\n        clearInterval(timeoutId);\n        setShowIcon(true);\n      }}\n      onMouseLeave={() => {\n        const tout = setTimeout(() => {\n          setShowIcon(false);\n        }, 900);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        setTimeoutId(tout as any);\n      }}\n    />\n  );\n\n  const northRect = (\n    <rect\n      className={clsx(resizeBase, ns)}\n      height={resizeHandlerSize}\n      width={width - resizeHandlerSize}\n      x={resizeHandlerSize / 2}\n      y={-resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'N')}\n    />\n  );\n\n  const southRect = (\n    <rect\n      className={clsx(resizeBase, ns)}\n      height={resizeHandlerSize}\n      width={width - resizeHandlerSize}\n      x={resizeHandlerSize / 2}\n      y={height - resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'S')}\n    />\n  );\n\n  const westRect = (\n    <rect\n      className={clsx(resizeBase, ew)}\n      height={height - resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={-resizeHandlerSize / 2}\n      y={resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'W')}\n    />\n  );\n\n  const eastRect = (\n    <rect\n      className={clsx(resizeBase, ew)}\n      height={height - resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={width - resizeHandlerSize / 2}\n      y={resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'E')}\n    />\n  );\n\n  const nwRect = (\n    <rect\n      className={clsx(resizeBase, nwse)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={-resizeHandlerSize / 2}\n      y={-resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'NW')}\n    />\n  );\n  const neRect = (\n    <rect\n      className={clsx(resizeBase, nesw)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={width - resizeHandlerSize / 2}\n      y={-resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'NE')}\n    />\n  );\n\n  const swRect = (\n    <rect\n      className={clsx(resizeBase, nesw)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={-resizeHandlerSize / 2}\n      y={height - resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'SW')}\n    />\n  );\n  const seRect = (\n    <rect\n      className={clsx(resizeBase, nwse)}\n      height={resizeHandlerSize}\n      width={resizeHandlerSize}\n      x={width - resizeHandlerSize / 2}\n      y={height - resizeHandlerSize / 2}\n      onMouseDown={() => onResizeStart(id, 'SE')}\n    />\n  );\n\n  return (\n    <g transform={translate(x, y)}>\n      {baseRectangle}\n      {northRect}\n      {southRect}\n      {westRect}\n      {eastRect}\n      {nwRect}\n      {neRect}\n      {swRect}\n      {seRect}\n      <g display={showIcon ? 'visible' : 'none'} transform={translate(width, -10)}>\n        <text className={closeIconText} dominantBaseline=\"middle\" dy=\"1\" textAnchor=\"middle\">\n          &#xf05e;\n        </text>\n        <circle\n          className={closeIconBackground}\n          fill=\"none\"\n          r=\"10\"\n          stroke=\"black\"\n          onClick={() => closeHandler(id)}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport default RectBrush;\n","import { quadtree, ScaleLinear } from 'd3';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { getBrushId } from '../../../Utils/IDGens';\nimport { Brush, BrushAffectType, BrushCollection } from '../Types/Brush';\n\nimport RectBrush from './RectBrush';\n\nexport type BrushSelections = { [key: string]: string[] };\n\ntype Extents = {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n};\n\nexport type BrushHandler = (\n  points: BrushSelections,\n  brushes: BrushCollection,\n  type: BrushAffectType,\n  affectedId: string,\n) => void;\n\nexport type ResizeDirection = 'N' | 'S' | 'E' | 'W' | 'NW' | 'NE' | 'SW' | 'SE';\n\ntype BrushData = { x: number; y: number; id: string; [other: string]: unknown };\n\ntype Rectangle = [[number, number], [number, number]];\n\nconst X = 0;\nconst Y = 1;\nconst TOP_LEFT = 0;\nconst BOTTOM_RIGHT = 1;\n\nfunction rectIntersects(rect1: Rectangle, rect2: Rectangle) {\n  return (\n    rect1[TOP_LEFT][X] <= rect2[BOTTOM_RIGHT][X] &&\n    rect2[TOP_LEFT][X] <= rect1[BOTTOM_RIGHT][X] &&\n    rect1[TOP_LEFT][Y] <= rect2[BOTTOM_RIGHT][Y] &&\n    rect2[TOP_LEFT][Y] <= rect1[BOTTOM_RIGHT][Y]\n  );\n}\n\nfunction rectContains(rect: Rectangle, point: [number, number]) {\n  return (\n    rect[TOP_LEFT][X] <= point[X] &&\n    point[X] <= rect[BOTTOM_RIGHT][X] &&\n    rect[TOP_LEFT][Y] <= point[Y] &&\n    point[Y] <= rect[BOTTOM_RIGHT][Y]\n  );\n}\n\nfunction useQuadSearch(\n  searchArea: { left: number; top: number; right: number; bottom: number },\n  data: BrushData[],\n  xScale: ScaleLinear<number, number>,\n  yScale: ScaleLinear<number, number>,\n) {\n  const { left, top, right, bottom } = searchArea;\n  const quadTree = useMemo(() => {\n    const qt = quadtree<BrushData>()\n      .extent([\n        [left - 1, top - 1],\n        [right + 1, bottom + 1],\n      ])\n      .x((d) => xScale(d.x))\n      .y((d) => yScale(d.y))\n      .addAll(data);\n\n    return qt;\n  }, [left, top, right, bottom, data, xScale, yScale]);\n\n  const search = (left: number, top: number, right: number, bottom: number) => {\n    const selectedNodes: string[] = [];\n\n    quadTree.visit((node, x1, y1, x2, y2) => {\n      const overlaps = rectIntersects(\n        [\n          [left, top],\n          [right, bottom],\n        ],\n        [\n          [x1, y1],\n          [x2, y2],\n        ],\n      );\n\n      if (!overlaps) return true;\n\n      if (!node.length) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let newNode: any = node;\n        do {\n          const d = newNode.data;\n          const cx = xScale(d.x);\n          const cy = yScale(d.y);\n\n          if (\n            rectContains(\n              [\n                [left, top],\n                [right, bottom],\n              ],\n              [cx, cy],\n            )\n          ) {\n            selectedNodes.push(d.id);\n          }\n        } while ((newNode = newNode.next));\n      }\n\n      return false;\n    });\n\n    return selectedNodes;\n  };\n\n  return { search };\n}\n\ntype Props = {\n  left: number;\n  bottom: number;\n  top: number;\n  right: number;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  data: BrushData[];\n  brushes: BrushCollection;\n  onBrushHandler: BrushHandler;\n  disableBrush?: boolean;\n};\n\nconst BrushComponent: FC<Props> = ({\n  left,\n  right,\n  top,\n  bottom,\n  brushes,\n  xScale,\n  yScale,\n  data,\n  onBrushHandler,\n  disableBrush = false,\n}: Props) => {\n  const overlayRef = useRef<SVGRectElement>(null);\n  const [mouseDownCreation, setMouseDownCreation] = useState(false);\n  const [mouseDownMove, setMouseDownMove] = useState(false);\n  const [mouseDownResize, setMouseDownResize] = useState(false);\n  const [resizeDirection, setResizeDirection] = useState<ResizeDirection | null>(null);\n  const [activeBrush, setActiveBrush] = useState<Brush | null>(null);\n  const [diff, setDiff] = useState<{ x: number; y: number } | null>(null);\n\n  const [height, width] = [Math.abs(top - bottom), Math.abs(left - right)];\n\n  const { pixelX, pixelY, extentToData, extentToPixel } = useMemo(() => {\n    // const yDomainMax = yScale.domain()[1];\n    const yScaleUpdated = yScale.copy().domain(yScale.domain()).range(yScale.range());\n\n    const pixelX = (x: number) => xScale(x);\n    const pixelY = (y: number) => yScaleUpdated(y);\n\n    const dataX = (x: number) => xScale.invert(x);\n    const dataY = (y: number) => yScaleUpdated.invert(y);\n\n    const extentToData = ({ x1, y1, x2, y2 }: Extents) => ({\n      x1: dataX(x1),\n      x2: dataX(x2),\n      y1: dataY(y1),\n      y2: dataY(y2),\n    });\n\n    const extentToPixel = ({ x1, x2, y1, y2 }: Extents) => ({\n      x1: pixelX(x1),\n      x2: pixelX(x2),\n      y1: pixelY(y1),\n      y2: pixelY(y2),\n    });\n\n    return { dataX, dataY, pixelX, pixelY, extentToPixel, extentToData };\n  }, [xScale, yScale]);\n\n  const { search } = useQuadSearch({ left, top, right, bottom }, data, xScale, yScale);\n\n  const onBrush = useCallback(\n    (brushes: BrushCollection, type: BrushAffectType, affectedId: string) => {\n      if (disableBrush) return;\n      const selections: BrushSelections = {};\n\n      Object.values(brushes).forEach((br) => {\n        const { x1, x2, y1, y2 } = br.extents;\n        const selected = search(pixelX(x1), pixelY(y2), pixelX(x2), pixelY(y1));\n        selections[br.id] = selected;\n      });\n\n      onBrushHandler(selections, brushes, type, affectedId);\n    },\n    [onBrushHandler, search, disableBrush, pixelX, pixelY],\n  );\n\n  // ##################################################################### //\n  // ############################## Removal ############################## //\n  // ##################################################################### //\n\n  const closeBrushHandler = useCallback(\n    (id: string) => {\n      const brush = brushes[id];\n\n      if (!brush) throw new Error('Brush does not exist');\n\n      delete brushes[id];\n\n      onBrush({ ...brushes }, 'Remove', id);\n    },\n    [brushes, onBrush],\n  );\n\n  // ##################################################################### //\n  // ############################## Creation ############################# //\n  // ##################################################################### //\n\n  const creationMouseDownHandler = useCallback(\n    (event: React.MouseEvent<SVGRectElement, MouseEvent>) => {\n      const dimensions = event.currentTarget.getBoundingClientRect();\n\n      const extents: Extents = extentToData({\n        x1: event.clientX - dimensions.left,\n        x2: event.clientX - dimensions.left,\n        y1: event.clientY - dimensions.top,\n        y2: event.clientY - dimensions.top,\n      });\n\n      const brush: Brush = {\n        id: getBrushId(),\n        extents,\n      };\n\n      setMouseDownCreation(true);\n      setActiveBrush(brush);\n      //\n    },\n    [extentToData],\n  );\n\n  const creationMouseMoveHandler = useCallback(\n    (event: MouseEvent) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || !activeBrush) return;\n\n      const { left, top } = targetNode.getBoundingClientRect();\n\n      const { x1, y2 } = extentToPixel(activeBrush.extents);\n\n      const x2 = event.clientX - left;\n      const y1 = event.clientY - top;\n\n      // if (x2 < 0) x2 = 0;\n\n      // if (x2 >= width) x2 = right;\n\n      // if (y2 < 0) y2 = 0;\n\n      // if (y2 >= height) y2 = bottom;\n      // right, bottom, height, width\n\n      activeBrush.extents = extentToData({ x1, x2, y1, y2 });\n\n      setActiveBrush({ ...activeBrush });\n      //\n    },\n    [activeBrush, extentToData, extentToPixel],\n  );\n\n  const creationMouseUpHandler = useCallback(() => {\n    if (!activeBrush) return;\n\n    let { x1, x2, y1, y2 } = activeBrush.extents;\n\n    const isNewBrushRedundant = Math.abs(x1 - x2) < 0.00001 || Math.abs(y1 - y2) < 0.00001;\n\n    if (!isNewBrushRedundant) {\n      if (x1 > x2) [x1, x2] = [x2, x1];\n\n      if (y1 > y2) [y1, y2] = [y2, y1];\n\n      activeBrush.extents = correctBrushExtents({ x1, x2, y1, y2 });\n\n      brushes[activeBrush.id] = activeBrush;\n\n      onBrush({ ...brushes }, 'Add', activeBrush.id);\n    }\n\n    setActiveBrush(null);\n    setMouseDownCreation(false);\n  }, [activeBrush, brushes, onBrush]);\n\n  // ##################################################################### //\n  // ################################ Move ############################### //\n  // ##################################################################### //\n\n  const moveMouseDownHandler = useCallback(\n    (event: React.MouseEvent<SVGRectElement, MouseEvent>, id: string) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || mouseDownCreation) return;\n\n      const brush = brushes[id];\n\n      if (!brush) throw new Error('Something went wrong! Brush does not exist.');\n\n      const { left, top } = targetNode.getBoundingClientRect();\n      const { x1: x, y2: y } = extentToPixel(brush.extents);\n\n      const [currX, currY] = [event.clientX - left, event.clientY - top];\n      const [diffX, diffY] = [Math.abs(currX - x), Math.abs(currY - y)];\n\n      setDiff({ x: diffX, y: diffY });\n      setActiveBrush(brush);\n      setMouseDownMove(true);\n    },\n    [brushes, mouseDownCreation, extentToPixel],\n  );\n\n  const moveMouseMoveHandler = useCallback(\n    (event: MouseEvent) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || !activeBrush || !diff) return;\n\n      let { x1, x2, y1, y2 } = extentToPixel(activeBrush.extents);\n      // [x1, x2, y1, y2] = [x1 * width, x2 * width, y1 * height, y2 * height];\n\n      const [brushHeight, brushWidth] = [Math.abs(y2 - y1), Math.abs(x2 - x1)];\n\n      const { x: diffX, y: diffY } = diff;\n\n      const { left, top } = targetNode.getBoundingClientRect();\n\n      let [newX, newY] = [event.clientX - left - diffX, event.clientY - top - diffY];\n\n      if (newX < 0) newX = 0;\n\n      if (newX + brushWidth > width) newX = width - brushWidth;\n\n      if (newY < 0) newY = 0;\n\n      if (newY + brushHeight > height) newY = height - brushHeight;\n\n      [x1, x2, y2, y1] = [newX, newX + brushWidth, newY, newY + brushHeight];\n\n      setActiveBrush({ ...activeBrush, extents: extentToData({ x1, x2, y1, y2 }) });\n    },\n    [activeBrush, diff, extentToPixel, extentToData, height, width],\n  );\n\n  const moveMouseUpHandler = useCallback(() => {\n    if (!activeBrush) return;\n\n    brushes[activeBrush.id] = activeBrush;\n\n    onBrush({ ...brushes }, 'Update', activeBrush.id);\n\n    setActiveBrush(null);\n    setMouseDownMove(false);\n  }, [activeBrush, brushes, onBrush]);\n\n  // ##################################################################### //\n  // ############################### Resize ############################## //\n  // ##################################################################### //\n\n  const resizeMouseDownHandler = useCallback(\n    (brushId: string, direction: ResizeDirection) => {\n      const brush = brushes[brushId];\n\n      if (!brush) throw new Error('Something went wrong! Brush does not exist.');\n\n      setActiveBrush(brush);\n      setMouseDownResize(true);\n      setResizeDirection(direction);\n    },\n    [brushes],\n  );\n\n  const resizeMouseMoveHandler = useCallback(\n    (event: MouseEvent) => {\n      const targetNode = overlayRef.current;\n\n      if (!targetNode || !activeBrush || !resizeDirection) return;\n\n      const { left, top } = targetNode.getBoundingClientRect();\n\n      let { x1, x2, y1, y2 } = extentToPixel(activeBrush.extents);\n\n      switch (resizeDirection) {\n        case 'N':\n          y2 = event.clientY - top;\n          break;\n        case 'S':\n          y1 = event.clientY - top;\n          break;\n        case 'W':\n          x1 = event.clientX - left;\n          break;\n        case 'E':\n          x2 = event.clientX - left;\n          break;\n        case 'NW':\n          x1 = event.clientX - left;\n          y2 = event.clientY - top;\n          break;\n        case 'NE':\n          y2 = event.clientY - top;\n          x2 = event.clientX - left;\n          break;\n        case 'SW':\n          x1 = event.clientX - left;\n          y1 = event.clientY - top;\n          break;\n        case 'SE':\n          y1 = event.clientY - top;\n          x2 = event.clientX - left;\n          break;\n        default:\n          throw new Error('Wrong Resize Direction');\n      }\n\n      activeBrush.extents = extentToData({ x1, x2, y1, y2 });\n\n      setActiveBrush({ ...activeBrush });\n    },\n    [activeBrush, resizeDirection, extentToPixel, extentToData],\n  );\n\n  const resizeMouseUpHandler = useCallback(() => {\n    if (!activeBrush) return;\n\n    activeBrush.extents = correctBrushExtents(activeBrush.extents);\n\n    brushes[activeBrush.id] = activeBrush;\n\n    onBrush({ ...brushes }, 'Update', activeBrush.id);\n    setActiveBrush(null);\n    setResizeDirection(null);\n    setMouseDownResize(false);\n  }, [activeBrush, brushes, onBrush]);\n\n  // ##################################################################### //\n  // ############################## Effects ############################## //\n  // ##################################################################### //\n\n  useEffect(() => {\n    if (!mouseDownCreation && !mouseDownMove && !mouseDownResize) return;\n\n    if (mouseDownCreation) {\n      window.addEventListener('mousemove', creationMouseMoveHandler);\n      window.addEventListener('mouseup', creationMouseUpHandler);\n    }\n\n    if (mouseDownMove) {\n      window.addEventListener('mousemove', moveMouseMoveHandler);\n      window.addEventListener('mouseup', moveMouseUpHandler);\n    }\n\n    if (mouseDownResize) {\n      window.addEventListener('mousemove', resizeMouseMoveHandler);\n      window.addEventListener('mouseup', resizeMouseUpHandler);\n    }\n\n    return () => {\n      if (mouseDownCreation) {\n        window.removeEventListener('mousemove', creationMouseMoveHandler);\n        window.removeEventListener('mouseup', creationMouseUpHandler);\n      }\n\n      if (mouseDownMove) {\n        window.removeEventListener('mousemove', moveMouseMoveHandler);\n        window.removeEventListener('mouseup', moveMouseUpHandler);\n      }\n\n      if (mouseDownResize) {\n        window.removeEventListener('mousemove', resizeMouseMoveHandler);\n        window.removeEventListener('mouseup', resizeMouseUpHandler);\n      }\n    };\n  }, [\n    mouseDownCreation,\n    creationMouseMoveHandler,\n    creationMouseUpHandler,\n    mouseDownMove,\n    moveMouseMoveHandler,\n    moveMouseUpHandler,\n    mouseDownResize,\n    resizeMouseUpHandler,\n    resizeMouseMoveHandler,\n  ]);\n\n  // ##################################################################### //\n  // ############################## Elements ############################# //\n  // ##################################################################### //\n\n  const renderActiveBrush = useCallback(() => {\n    if (!activeBrush) return <g />;\n\n    const { x1, x2, y1, y2 } = correctBrushExtents(extentToPixel(activeBrush.extents));\n\n    return (\n      <RectBrush\n        closeHandler={closeBrushHandler}\n        height={y2 - y1}\n        id={activeBrush.id}\n        width={x2 - x1}\n        x={x1}\n        y={y1}\n        onMouseDown={moveMouseDownHandler}\n        onResizeStart={resizeMouseDownHandler}\n      />\n    );\n  }, [activeBrush, moveMouseDownHandler, resizeMouseDownHandler, closeBrushHandler, extentToPixel]);\n\n  const overlay = (\n    <rect\n      ref={overlayRef}\n      cursor={disableBrush ? 'default' : 'crosshair'}\n      fill=\"none\"\n      height={height}\n      pointerEvents={disableBrush ? 'none' : 'all'}\n      width={width}\n      onMouseDown={creationMouseDownHandler}\n    />\n  );\n\n  let brushList = Object.values(brushes);\n\n  if (activeBrush) brushList = brushList.filter((b) => b.id !== activeBrush.id);\n\n  const renderedBrushes = (\n    <g>\n      {renderActiveBrush()}\n      {Object.values(brushList).map((brush) => {\n        const { x1, x2, y1, y2 } = extentToPixel(brush.extents);\n\n        return (\n          <RectBrush\n            key={brush.id}\n            closeHandler={closeBrushHandler}\n            height={y1 - y2}\n            id={brush.id}\n            width={x2 - x1}\n            x={x1}\n            y={y2}\n            onMouseDown={moveMouseDownHandler}\n            onResizeStart={resizeMouseDownHandler}\n          />\n        );\n      })}\n    </g>\n  );\n\n  const [bottomLayer, topLayer] = mouseDownCreation\n    ? [renderedBrushes, overlay]\n    : [overlay, renderedBrushes];\n\n  return (\n    <g id=\"brush-component\">\n      {bottomLayer}\n      {topLayer}\n    </g>\n  );\n};\n\nexport default BrushComponent;\n\nfunction correctBrushExtents(input: { x1: number; x2: number; y1: number; y2: number }) {\n  let { x1, x2, y1, y2 } = input;\n\n  if (x2 < x1) {\n    [x1, x2] = [x2, x1];\n  }\n\n  if (y2 < y1) {\n    [y1, y2] = [y2, y1];\n  }\n\n  return { x1, x2, y1, y2 };\n}\n","import { makeStyles } from '@material-ui/core';\n\nimport { IPNS, ISNP, MATCHES, NON_UNION, UNION } from '../ColorSpecs';\n\nconst useScatterplotStyle = makeStyles({\n  newColor: {\n    stroke: 'blue !important',\n    fill: 'blue !important'\n  },\n  removedColor: {\n    stroke: 'red !important',\n  },\n  newMark: {\n    strokeWidth: '1',\n    fill: 'black',\n  },\n  removedMark: {\n    stroke: 'black',\n    strokeWidth: '3',\n    strokeLinecap: 'round',\n    fill: 'black',\n  },\n  movedLine: {\n    opacity: '0.2 !important',\n    stroke: 'black',\n    fill: 'black',\n    strokeWidth: '1',\n    strokeLinecap: 'round',\n  },\n  movedPoint: {\n    fill: 'gray !important',\n  },\n  regularMark: {\n    fill: 'black',\n  },\n  nonUnionMark: {\n    fill: NON_UNION,\n  },\n  unionMark: {\n    fill: UNION,\n    stroke: UNION,\n  },\n  regularForceMark: {\n    fill: 'black !important',\n    opacity: 0.2,\n  },\n  intermittentHighlight: {\n    fill: 'red',\n  },\n  matches: {\n    fill: `${MATCHES} !important`,\n    opacity: 1,\n  },\n  isnp: {\n    fill: `${ISNP} !important`,\n    opacity: 1,\n  },\n  ipns: {\n    fill: `${IPNS} !important`,\n    opacity: 1,\n  },\n});\n\nexport default useScatterplotStyle;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Tooltip } from '@material-ui/core';\nimport { ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext } from 'react';\n\nimport Store from '../../Store/Store';\nimport useScatterplotStyle from '../Scatterplot/styles';\n\nimport { DataDisplay } from './ComparisonScatterplot';\n\ntype Props = {\n  points: { x: number; y: number; label: string; id: string }[];\n  compPoints: { x: number; y: number; label: string; id: string }[];\n  selectedPoints: string[];\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  dataDisplay: DataDisplay;\n};\n\nconst Marks: FC<Props> = ({\n  points,\n  selectedPoints,\n  xScale,\n  yScale,\n  compPoints,\n  dataDisplay,\n}: Props) => {\n  const classes = useScatterplotStyle();\n\n  const { updatedFilterPoints } = useContext(Store).compareStore;\n\n  console.log(dataDisplay)\n  console.log(compPoints)\n  console.log(points)\n\n  if (!compPoints || dataDisplay === 'Original') {\n    return (\n      <>\n        {points.map((point) => {\n          return (\n            <Tooltip key={point.id} title={<pre>{JSON.stringify(point, null, 2)}</pre>}>\n              <circle\n                key={point.label}\n                className={`marks ${\n                  selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                } `}\n                cx={xScale(point.x as number)}\n                cy={yScale(point.y as number)}\n                id={`mark${point.id}`}\n                opacity=\"0.5\"\n                r=\"5\"\n              />\n            </Tooltip>\n          );\n        })}\n      </>\n    );\n  } else if (dataDisplay === 'AddedOnly') {\n    return (\n      <>\n        {compPoints\n          .filter((d) => {\n            return (\n              points.filter((i) => i.label === d.label).length === 0 &&\n              !updatedFilterPoints.includes(d.id)\n            );\n          })\n          .map((point) => {\n            return (\n              <g\n                key={point.label}\n                className={`marks ${classes.newMark} ${\n                  selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                } ${selectedPoints.length === 0 ? classes.newColor : ''}`}\n                id={`mark${point.id}`}\n                opacity=\"0.5\"\n                transform={`translate(${xScale(point.x as number) - 5}, ${\n                  yScale(point.y as number) - 5\n                })`}\n              >\n                <polygon points=\"0 0, 5 10, 10 0\" />\n              </g>\n            );\n          })}\n      </>\n    );\n  } else if (dataDisplay === 'ChangedOnly') {\n    return (\n      <>\n        {points.map((point) => {\n          if (compPoints !== null) {\n            //if the compPoint removed the point\n            const editGroup = compPoints.filter(\n              (d) => d.label === point.label && (d.x !== point.x || d.y !== point.y),\n            );\n\n            if (editGroup.length > 0) {\n              return (\n                <g>\n                  <path\n                    className={`marks ${classes.movedLine} ${\n                      selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                    }`}\n                    d={createComet(\n                      xScale(point.x as number),\n                      xScale(editGroup[0].x as number),\n                      yScale(point.y as number),\n                      yScale(editGroup[0].y as number),\n                    )}\n                    style={{ opacity: '0.4' }}\n                  />\n                  <circle\n                    key={point.label}\n                    className={`marks ${classes.movedPoint} ${\n                      selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                    }`}\n                    cx={xScale(point.x as number)}\n                    cy={yScale(point.y as number)}\n                    id={`mark${point.id}`}\n                    opacity=\".2\"\n                    r=\"5\"\n                  />\n                  <circle\n                    key={editGroup[0].label + '2'}\n                    className={`marks ${classes.movedPoint} ${\n                      selectedPoints.includes(editGroup[0].id)\n                        ? classes.unionMark\n                        : classes.regularMark\n                    }`}\n                    cx={xScale(editGroup[0].x as number)}\n                    cy={yScale(editGroup[0].y as number)}\n                    id={`mark${point.id}`}\n                    opacity=\"1\"\n                    r=\"5\"\n                  />\n                </g>\n              );\n            }\n          }\n\n          return null;\n        })}\n      </>\n    );\n  } else if (dataDisplay === 'RemovedOnly') {\n    return (\n      <>\n        {points.map((point) => {\n          if (compPoints !== null) {\n            //if the compPoint removed the point\n            if (compPoints.filter((d) => d.label === point.label).length === 0) {\n              return (\n                <g\n                  key={point.id}\n                  className={`marks ${classes.removedMark} ${\n                    selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                  } ${selectedPoints.length === 0 ? classes.removedColor : ''}`}\n                  id={`mark${point.id}`}\n                  opacity=\"0.5\"\n                  transform={`translate(${xScale(point.x as number) - 3}, ${\n                    yScale(point.y as number) - 3\n                  })`}\n                >\n                  <line x2=\"6\" y2=\"6\" />\n                  <line x1=\"6\" y2=\"6\" />\n                </g>\n              );\n            }\n          }\n\n          return <g key={point.id} />;\n        })}\n      </>\n    );\n  } else if (dataDisplay === 'Comparison') {\n    return (\n      <>\n        {compPoints.map((point) => {\n          return (\n            <circle\n              key={point.label}\n              className={`marks ${\n                selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n              }`}\n              cx={xScale(point.x as number)}\n              cy={yScale(point.y as number)}\n              id={`mark${point.id}`}\n              opacity=\"0.5\"\n              r=\"5\"\n            />\n          );\n        })}\n      </>\n    );\n  } else if (dataDisplay === 'Diff') {\n    return (\n      <>\n        {points.map((point) => {\n          if (compPoints !== null) {\n            //if the compPoint removed the point\n            if (compPoints.filter((d) => d.label === point.label).length === 0) {\n              return (\n                <g\n                  key={point.label}\n                  className={`marks ${classes.removedMark} ${\n                    selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                  } ${selectedPoints.length === 0 ? classes.removedColor : ''}`}\n                  id={`mark${point.id}`}\n                  opacity=\"0.5\"\n                  transform={`translate(${xScale(point.x as number) - 3}, ${\n                    yScale(point.y as number) - 3\n                  })`}\n                >\n                  <line x2=\"6\" y2=\"6\" />\n                  <line x1=\"6\" y2=\"6\" />\n                </g>\n              );\n            }\n          }\n\n          if (compPoints !== null) {\n            //if the compPoint removed the point\n            const editGroup = compPoints.filter(\n              (d) => d.label === point.label && (d.x !== point.x || d.y !== point.y),\n            );\n\n            if (editGroup.length > 0) {\n              return (\n                <g>\n                  <path\n                    className={`marks ${classes.movedLine} ${\n                      selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                    }`}\n                    d={createComet(\n                      xScale(point.x),\n                      xScale(editGroup[0].x),\n                      yScale(point.y),\n                      yScale(editGroup[0].y),\n                    )}\n                    style={{ opacity: '0.4' }}\n                  />\n                  <g\n                    key={point.label}\n                    className={`marks ${classes.movedPoint} ${\n                      selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                    }`}\n                    id={`mark${point.id}`}\n                    opacity=\"0.5\"\n                    transform={`translate(${xScale(point.x as number) - 5}, ${\n                      yScale(point.y as number) - 5\n                    })`}\n                  >\n                    <polygon points=\"0 5, 5 10, 10 5, 5 0\" />\n                  </g>\n                  <g\n                    key={editGroup[0].label + '2'}\n                    className={`marks ${classes.movedPoint} ${\n                      selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                    }`}\n                    id={`mark${editGroup[0].id}`}\n                    opacity=\"0.5\"\n                    transform={`translate(${xScale(editGroup[0].x as number) - 5}, ${\n                      yScale(editGroup[0].y as number) - 5\n                    })`}\n                  >\n                    <polygon points=\"0 5, 5 10, 10 5, 5 0\" />\n                  </g>\n                </g>\n              );\n            }\n          }\n\n          return (\n            <circle\n              key={point.label}\n              className={`marks ${\n                selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n              }`}\n              cx={xScale(point.x as number)}\n              cy={yScale(point.y as number)}\n              id={`mark${point.id}`}\n              opacity=\"0.1\"\n              r=\"5\"\n            />\n          );\n        })}\n\n        {compPoints\n          .filter((d) => {\n            return (\n              points.filter((i) => i.label === d.label).length === 0 &&\n              !updatedFilterPoints.includes(d.id)\n            );\n          })\n          .map((point) => {\n            return (\n              <g\n                key={point.label}\n                className={`marks ${classes.newMark} ${\n                  selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                } ${selectedPoints.length === 0 ? classes.newColor : ''}`}\n                id={`mark${point.id}`}\n                opacity=\"0.5\"\n                transform={`translate(${xScale(point.x as number) - 5}, ${\n                  yScale(point.y as number) - 5\n                })`}\n              >\n                <polygon points=\"0 0, 5 10, 10 0\" />\n              </g>\n            );\n          })}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {points.map((point) => {\n        if (compPoints !== null) {\n          //if the compPoint removed the point\n          if (compPoints.filter((d) => d.label === point.label).length === 0) {\n            return (\n              <Tooltip key={point.label} title={<pre>{JSON.stringify(point, null, 2)}</pre>}>\n                <g\n                  key={point.label}\n                  className={`marks ${classes.removedMark} ${\n                    selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                  } ${selectedPoints.length === 0 ? classes.removedColor : ''}`}\n                  id={`mark${point.id}`}\n                  opacity=\"0.5\"\n                  transform={`translate(${xScale(point.x as number) - 3}, ${\n                    yScale(point.y as number) - 3\n                  })`}\n                >\n                  <line x2=\"6\" y2=\"6\" />\n                  <line x1=\"6\" y2=\"6\" />\n                </g>\n              </Tooltip>\n            );\n          }\n        }\n\n        if (compPoints !== null) {\n          //if the compPoint removed the point\n          const editGroup = compPoints.filter(\n            (d) => d.label === point.label && (d.x !== point.x || d.y !== point.y),\n          );\n\n          if (editGroup.length > 0) {\n            return (\n              <Tooltip key={point.label} title={<pre>{JSON.stringify(point, null, 2)}</pre>}>\n                <g>\n                  <path\n                    className={`marks ${classes.movedLine} ${\n                      selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                    }`}\n                    d={createComet(\n                      xScale(point.x as number),\n                      xScale(editGroup[0].x as number),\n                      yScale(point.y as number),\n                      yScale(editGroup[0].y as number),\n                    )}\n                    style={{ opacity: '0.4' }}\n                  />\n                  <circle\n                    key={point.label}\n                    className={`marks ${classes.movedPoint} ${\n                      selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                    }`}\n                    cx={xScale(point.x as number)}\n                    cy={yScale(point.y as number)}\n                    id={`mark${point.id}`}\n                    opacity=\".2\"\n                    r=\"5\"\n                  />\n                  <circle\n                    key={editGroup[0].label + '2'}\n                    className={`marks ${classes.movedPoint} ${\n                      selectedPoints.includes(editGroup[0].id)\n                        ? classes.unionMark\n                        : classes.regularMark\n                    }`}\n                    cx={xScale(editGroup[0].x as number)}\n                    cy={yScale(editGroup[0].y as number)}\n                    id={`mark${point.id}`}\n                    opacity=\"1\"\n                    r=\"5\"\n                  />\n                </g>\n              </Tooltip>\n            );\n          }\n        }\n\n        return (\n          <Tooltip key={point.label} title={<pre>{JSON.stringify(point, null, 2)}</pre>}>\n            <circle\n              key={point.label}\n              className={`marks ${\n                selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n              }`}\n              cx={xScale(point.x as number)}\n              cy={yScale(point.y as number)}\n              id={`mark${point.id}`}\n              opacity=\"0.5\"\n              r=\"5\"\n            />\n          </Tooltip>\n        );\n      })}\n\n      {compPoints\n        .filter((d) => {\n          return (\n            points.filter((i) => i.label === d.label).length === 0 &&\n            !updatedFilterPoints.includes(d.id)\n          );\n        })\n        .map((point) => {\n          return (\n            <Tooltip key={point.label} title={<pre>{JSON.stringify(point, null, 2)}</pre>}>\n              <g\n                key={point.label}\n                className={`marks ${classes.newMark} ${\n                  selectedPoints.includes(point.id) ? classes.unionMark : classes.regularMark\n                } ${selectedPoints.length === 0 ? classes.newColor : ''}`}\n                id={`mark${point.id}`}\n                opacity=\"0.5\"\n                transform={`translate(${xScale(point.x as number) - 5}, ${\n                  yScale(point.y as number) - 5\n                })`}\n              >\n                <polygon points=\"0 0, 5 10, 10 0\" />\n              </g>\n            </Tooltip>\n          );\n        })}\n    </>\n  );\n};\n\nexport function createComet(x1: number, x2: number, y1: number, y2: number): string {\n  const theta = Math.atan((x1 - x2) / (y1 - y2));\n\n  const xLength = 4.5 * Math.cos(theta);\n  const yLength = 4.5 * Math.sin(theta);\n\n  return `M ${x2 + xLength} ${y2 - yLength} \n  L ${x1} ${y1} \n  L ${x2 - xLength} ${y2 + yLength}\n  z`;\n}\n\nexport default observer(Marks);\n","import { makeStyles } from '@material-ui/core';\nimport { quadtree, ScaleLinear, select } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, useEffect, useMemo, useRef, useState } from 'react';\n\nimport translate from '../../Utils/Translate';\n\nexport type BrushSize = 20 | 35 | 50;\n\nconst useStyles = makeStyles(() => ({\n  brushStyle: {\n    cursor: 'grabbing',\n    stroke: 'gray',\n    opacity: 1,\n    transition: 'opacity 0.5s',\n  },\n  brushDown: {\n    stroke: 'rgb(244, 106, 15)',\n  },\n  brushHide: {\n    opacity: 0,\n    transition: 'opacity 0.5s',\n  },\n}));\n\nexport const union_color = '';\nexport type FreeformBrushEvent = 'Start' | 'Brushing' | 'End';\nexport type FreeformBrushAction = 'Selection' | 'Deselection';\n\ntype BrushHandler = (\n  points: string[],\n  event: FreeformBrushEvent,\n  action: FreeformBrushAction,\n) => void;\n\ntype BrushData = { x: number; y: number; id: string; [other: string]: unknown };\n\nfunction isInCircle(\n  center: { x: number; y: number },\n  radius: number,\n  point: { x: number; y: number },\n) {\n  const x_sq = Math.pow(point.x - center.x, 2);\n  const y_sq = Math.pow(point.y - center.y, 2);\n  const distance = Math.sqrt(x_sq + y_sq);\n\n  return distance <= radius;\n}\n\nfunction useQuadSearch(\n  searchArea: { left: number; top: number; width: number; height: number },\n  data: BrushData[],\n  xScale: ScaleLinear<number, number>,\n  yScale: ScaleLinear<number, number>,\n) {\n  const { left, top, width, height } = searchArea;\n  const quadTree = useMemo(() => {\n    const qt = quadtree<BrushData>()\n      .extent([\n        [left - 1, top - 1],\n        [width + 1, height + 1],\n      ])\n      .x((d) => xScale(d.x))\n      .y((d) => yScale(d.y))\n      .addAll(data);\n\n    return qt;\n  }, [left, top, width, height, data, xScale, yScale]);\n\n  const search = (x: number, y: number, radius: number) => {\n    const [x0, x3, y0, y3] = [x - radius, x + radius, y - radius, y + radius];\n    const selectedNodes: string[] = [];\n    // TODO: Figure out the types for this\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    quadTree.visit((node: any, x1, y1, x2, y2) => {\n      if (!node.length) {\n        let newNode = node;\n        do {\n          const {\n            data: d,\n            data: { x: cx, y: cy },\n          } = newNode;\n\n          const isSelected = isInCircle({ x, y }, radius, { x: xScale(cx), y: yScale(cy) });\n\n          if (isSelected) {\n            selectedNodes.push(d.id);\n          }\n        } while ((newNode = newNode.next));\n      }\n\n      return x1 >= x3 || y1 >= y3 || x2 < x0 || y2 < y0;\n    });\n\n    return selectedNodes;\n  };\n\n  return { search };\n}\n\ntype Props = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n  extentPadding?: number;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n  onBrush: BrushHandler;\n  data: BrushData[];\n  brushSize?: BrushSize;\n};\n\nconst FreeFormBrush: FC<Props> = ({\n  left = 0,\n  right = 0,\n  top = 0,\n  bottom = 0,\n  extentPadding = 0,\n  onBrush,\n  xScale,\n  yScale,\n  brushSize = 20,\n  data = [],\n}: Props) => {\n  const { brushStyle, brushDown, brushHide } = useStyles();\n  const brushRef = useRef<SVGCircleElement>(null);\n  const layerRef = useRef<SVGRectElement>(null);\n  const selectedPointsRef = useRef<string[]>([]);\n\n  const radius = brushSize || 20;\n\n  const [mouseIn, setMouseIn] = useState(false);\n  const [mouseDown, setMouseDown] = useState(false);\n\n  const [height, width] = [\n    Math.abs(bottom + extentPadding - (top - extentPadding)),\n    Math.abs(left - extentPadding - (right + extentPadding)),\n  ];\n\n  const { search } = useQuadSearch({ left, top, width, height }, data, xScale, yScale);\n\n  function handleMouseDown(event: React.MouseEvent<SVGElement, MouseEvent>) {\n    const targetNode = layerRef.current;\n\n    if (targetNode) {\n      const target = targetNode.getBoundingClientRect();\n      const [x, y] = [event.clientX - target.left, event.clientY - target.top];\n      const selectedPoints = search(x, y, radius);\n      selectedPointsRef.current = selectedPoints;\n      onBrush(selectedPoints, 'Start', 'Selection');\n    }\n    setMouseDown(true);\n  }\n\n  function handleMouseUp() {\n    const targetNode = layerRef.current;\n\n    if (targetNode) {\n      onBrush(Array.from(new Set(selectedPointsRef.current)), 'End', 'Selection');\n      selectedPointsRef.current = [];\n    }\n    setMouseDown(false);\n  }\n\n  function handleMove(event: MouseEvent) {\n    if (!mouseIn) return;\n    const node = brushRef.current;\n    const targetNode = layerRef.current;\n\n    if (node && targetNode) {\n      const target = targetNode.getBoundingClientRect();\n      const [x, y] = [event.clientX - target.left, event.clientY - target.top];\n\n      const nodeSelection = select(node);\n\n      const edgeX = x + radius >= width + 10 || x - radius <= -10;\n      const edgeY = y + radius >= height + 10 || y - radius <= -10;\n\n      if (!edgeX) nodeSelection.attr('cx', x);\n\n      if (!edgeY) nodeSelection.attr('cy', y);\n\n      if (mouseDown) {\n        const selectedPoints = search(x, y, radius);\n        selectedPointsRef.current.push(...selectedPoints);\n        onBrush(selectedPoints, 'Brushing', 'Selection');\n      }\n    }\n  }\n\n  function addEvent() {\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  }\n\n  function removeEvent() {\n    window.removeEventListener('mousemove', handleMove);\n    window.removeEventListener('mouseup', handleMouseUp);\n  }\n\n  useEffect(() => {\n    addEvent();\n\n    return removeEvent;\n  });\n\n  return (\n    <g\n      transform={translate(-extentPadding, -extentPadding)}\n      onMouseDown={handleMouseDown}\n      onMouseEnter={() => setMouseIn(true)}\n      onMouseLeave={() => {\n        if (!mouseDown) setMouseIn(false);\n      }}\n    >\n      <rect ref={layerRef} fill=\"none\" height={height} pointerEvents=\"all\" width={width} />\n      <circle\n        ref={brushRef}\n        className={`${brushStyle} ${mouseDown ? brushDown : ''} ${!mouseIn ? brushHide : ''}`}\n        fill=\"none\"\n        pointerEvents={mouseDown ? 'all' : 'initial'}\n        r={radius}\n        strokeWidth=\"2\"\n      />\n    </g>\n  );\n};\n\nexport default observer(FreeFormBrush);\n","import { scaleLinear, ScaleLinear } from 'd3';\nimport { useMemo } from 'react';\n\nexport function useScale(\n  domain: [number, number],\n  range: [number, number],\n  nice = true,\n): ScaleLinear<number, number> {\n  const [d0, d1] = domain;\n  const [r0, r1] = range;\n\n  const scale = useMemo(() => {\n    const scale = scaleLinear().domain([d0, d1]).range([r0, r1]).clamp(true);\n\n    if (nice) scale.nice();\n\n    return scale;\n  }, [d0, d1, r0, r1, nice]);\n\n  return scale;\n}\n","import { extent } from 'd3';\nimport { useContext, useMemo } from 'react';\n\nimport Store from '../../Store/Store';\nimport { DatasetColumn } from '../../Store/Types/Dataset';\n\nexport type ScatterplotPoints = { x: number; y: number; label: string; id: string }[];\n\nexport function useScatterplotData(\n  x: DatasetColumn,\n  y: DatasetColumn,\n  label: DatasetColumn,\n  comparisonData: boolean,\n): {\n  points: ScatterplotPoints;\n  x_extents: [number, number];\n  y_extents: [number, number];\n} {\n  const { compDataset: compDataFull, origCompDataset: origCompFull, loadedDataset: fullData, workingValues: data, isComparison } = useContext(\n    Store, \n  ).exploreStore;\n  const { compDatasetValues: compData, originaCompValues: origCompData, currentComparisonDatasets } = useContext(Store).projectStore;\n\n\n\n  const dt = useMemo(() => {\n    let points;\n    let allPoints;\n\n    if (comparisonData) {\n      points =\n        compData.map((d) => ({\n          id: d['id'] as string,\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[label] as string,\n        })) || [];\n      allPoints =\n        compDataFull?.values.map((d) => ({\n          id: d['id'] as string,\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[label] as string,\n        })) || [];\n    } else if (isComparison && currentComparisonDatasets.length > 1) {\n      points =\n        origCompData.map((d) => ({\n          id: d['id'] as string,\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[label] as string,\n        })) || [];\n\n      allPoints =\n        origCompFull.values.map((d) => ({\n          id: d['id'] as string,\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[label] as string,\n        })) || [];\n    }\n    else {\n      points =\n        data.map((d) => ({\n          id: d['id'] as string,\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[label] as string,\n        })) || [];\n\n      allPoints =\n        fullData.values.map((d) => ({\n          id: d['id'] as string,\n          x: d[x] as number,\n          y: d[y] as number,\n          label: d[label] as string,\n        })) || [];\n    }\n\n    const x_extents = extent(allPoints.map((d) => d.x) as number[]) as [number, number];\n    const y_extents = extent(allPoints.map((d) => d.y) as number[]) as [number, number];\n\n    return { points, x_extents, y_extents };\n  }, [compData, comparisonData, x, y, label, data, fullData, compDataFull, origCompFull, origCompData, isComparison, currentComparisonDatasets]);\n\n  return dt;\n}\n","import { axisBottom, axisLeft, axisRight, axisTop, ScaleLinear, select } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext, useEffect, useMemo, useRef } from 'react';\n\nimport Store from '../../Store/Store';\nimport translate from '../../Utils/Translate';\n\ntype Props = {\n  scale: ScaleLinear<number, number>;\n  transform?: string;\n  type: 'left' | 'right' | 'top' | 'bottom';\n  columnName: string;\n};\n\nconst Axis: FC<Props> = ({ scale, transform = '', type, columnName }: Props) => {\n  const gRef = useRef<SVGGElement>(null);\n  const {\n    loadedDataset: { columnInfo },\n  } = useContext(Store).exploreStore;\n\n  const axis = useMemo(() => {\n    let axis = null;\n\n    switch (type) {\n      case 'left':\n        axis = axisLeft(scale);\n        break;\n      case 'right':\n        axis = axisRight(scale);\n        break;\n      case 'bottom':\n        axis = axisBottom(scale);\n        break;\n      case 'top':\n        axis = axisTop(scale);\n        break;\n    }\n\n    axis.tickFormat((d) => {\n      if (d >= 1000000) return `${d.toString()[0]}e${d.toString().length - 1}`;\n\n      if (d >= 500000) return `${(d as number) / 100000}M`;\n\n      if (d >= 1000) return `${(d as number) / 1000}K`;\n\n      return d.toString();\n    });\n\n    return axis;\n  }, [scale, type]);\n\n  useEffect(() => {\n    const { current } = gRef;\n\n    if (!current) return;\n\n    select(current).call(axis);\n  }, [axis]);\n\n  const labelTransform = useMemo(() => {\n    switch (type) {\n      case 'bottom':\n        return translate(Math.max(...scale.range()) / 2, 35);\n      case 'top':\n        return translate(Math.max(...scale.range()) / 2, -35);\n      case 'left':\n        return `${translate(-40, Math.max(...scale.range()) / 2)}rotate(270)`;\n      case 'right':\n        return `${translate(40, Math.max(...scale.range()) / 2)}rotate(90)`;\n    }\n  }, [scale, type]);\n\n  const column = columnInfo[columnName];\n\n  return (\n    <g transform={transform}>\n      <g ref={gRef} />\n      <text dominantBaseline=\"middle\" textAnchor=\"middle\" transform={labelTransform}>\n        <tspan>{column.short}</tspan> <tspan>|</tspan> <tspan>{column.fullname}</tspan>{' '}\n        {column.unit && <tspan>({column.unit})</tspan>}\n      </text>\n    </g>\n  );\n};\n\nexport default observer(Axis);\n","import { observer } from 'mobx-react';\nimport React, { FC } from 'react';\n\nimport translate from '../../Utils/Translate';\nimport { IPNS, ISNP, MATCHES } from '../ColorSpecs';\n\ntype Props = {\n  offset?: number;\n};\n\nconst Legend: FC<Props> = ({ offset = 0 }: Props) => {\n  return (\n    <g transform={translate(offset, -10)}>\n      <g transform={translate(0, 20)}>\n        <circle fill={MATCHES} r=\"5\" />\n        <text dominantBaseline=\"middle\" dx=\"10\">\n          Matches\n        </text>\n      </g>\n      <g transform={translate(0, 40)}>\n        <circle fill={IPNS} r=\"5\" />\n        <text dominantBaseline=\"middle\" dx=\"10\">\n          Not Selected\n        </text>\n      </g>\n      <g transform={translate(0, 60)}>\n        <circle fill={ISNP} r=\"5\" />\n        <text dominantBaseline=\"middle\" dx=\"10\">\n          Not Predicted\n        </text>\n      </g>\n    </g>\n  );\n};\n\nexport default observer(Legend);\n","import { Tooltip } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext } from 'react';\n\nimport Store from '../../Store/Store';\n\nimport useScatterplotStyle from './styles';\n\ntype Props = {\n  points: { x: number; y: number; label: string; id: string }[];\n  selectedPoints: string[];\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\nconst Marks: FC<Props> = ({ points, selectedPoints, xScale, yScale }: Props) => {\n  const {\n    exploreStore: { hoveredPrediction },\n  } = useContext(Store);\n  const classes = useScatterplotStyle();\n  const { matches: matchIds = [], isnp: isnpIds = [], ipns: ipnsIds = [] } =\n    hoveredPrediction?.membership || {};\n\n  return (\n    <>\n      {points.map((point) => {\n        return (\n          <Tooltip key={point.id} title={<pre>{JSON.stringify(point, null, 2)}</pre>}>\n            <circle\n              key={point.label}\n              className={clsx('marks', {\n                [classes.unionMark]: selectedPoints.includes(point.id),\n                [classes.regularMark]: !selectedPoints.includes(point.id),\n                [classes.regularForceMark]: hoveredPrediction ? true : false,\n                [classes.matches]: matchIds.includes(point.id),\n                [classes.isnp]: isnpIds.includes(point.id),\n                [classes.ipns]: ipnsIds.includes(point.id),\n              })}\n              cx={xScale(point.x as number)}\n              cy={yScale(point.y as number)}\n              id={`mark${point.id}`}\n              opacity=\"0.5\"\n              r=\"5\"\n            />\n          </Tooltip>\n        );\n      })}\n    </>\n  );\n};\n\nexport default observer(Marks);\n","import { line, ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { useMemo } from 'react';\n\nimport { DBScanInfo } from '../../../Store/Types/Prediction';\n\ntype Props = {\n  info: DBScanInfo;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\nconst DBScan = ({ info, xScale, yScale }: Props) => {\n  const lineGen = useMemo(() => {\n    const l = line()\n      .x((d) => xScale(d[0]))\n      .y((d) => yScale(d[1]));\n\n    return l;\n  }, [xScale, yScale]);\n\n  return (\n    <g>\n      <path d={`${lineGen(info.hull)}Z` || ''} fill=\"gray\" opacity=\"0.3\" stroke=\"black\" />\n    </g>\n  );\n};\n\nexport default observer(DBScan);\n","import { line, ScaleLinear, symbol, symbolWye } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { useMemo } from 'react';\n\nimport { KMeansInfo } from '../../../Store/Types/Prediction';\nimport translate from '../../../Utils/Translate';\n\ntype Props = {\n  info: KMeansInfo;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\nconst KMeans = ({ info, xScale, yScale }: Props) => {\n  const { selected_center } = info;\n\n  const sym = symbol().type(symbolWye).size(64);\n\n  const lineGen = useMemo(() => {\n    const l = line()\n      .x((d) => xScale(d[0]))\n      .y((d) => yScale(d[1]));\n\n    return l;\n  }, [xScale, yScale]);\n\n  return (\n    <g>\n      <path\n        d={sym() || ''}\n        fill=\"blue\"\n        opacity=\"0.8\"\n        transform={translate(xScale(selected_center[0]), yScale(selected_center[1]))}\n      />\n      <path d={`${lineGen(info.hull)}Z` || ''} fill=\"gray\" opacity=\"0.3\" stroke=\"black\" />\n    </g>\n  );\n};\n\nexport default observer(KMeans);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { useMemo } from 'react';\n\nimport { LinearRegressionInfo } from '../../../Store/Types/Prediction';\n\ntype Props = {\n  info: LinearRegressionInfo;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\nconst LR = ({ info, xScale: x, yScale: y }: Props) => {\n  const { x1, x2, y1, y2, oy1, oy2, ooy1, ooy2 } = useMemo(() => {\n    const { coeff, intercept, threshold } = info;\n    const xScale = x.copy().clamp(false);\n    const yScale = y.copy().clamp(false);\n\n    const line = (x: number) => x * coeff[0] + intercept;\n    const line_offset = (x: number) => x * coeff[0] + intercept - 5 * threshold;\n    const line_offset2 = (x: number) => x * coeff[0] + intercept + 5 * threshold;\n\n    let [x1, x2] = x.domain();\n    let [y1, y2] = x.domain().map(line);\n    let [oy1, oy2] = x.domain().map(line_offset);\n    let [ooy1, ooy2] = x.domain().map(line_offset2);\n\n    [x1, x2, y1, y2, oy1, oy2, ooy1, ooy2] = [\n      xScale(x1),\n      xScale(x2),\n      yScale(y1),\n      yScale(y2),\n      yScale(oy1),\n      yScale(oy2),\n      yScale(ooy1),\n      yScale(ooy2),\n    ];\n\n    return { x1, x2, y1, y2, oy1, oy2, ooy1, ooy2 };\n  }, [x, y, info]);\n\n  return (\n    <g clipPath=\"url(#clip)\">\n      <line opacity=\"0.4\" stroke=\"black\" strokeWidth=\"5px\" x1={x1} x2={x2} y1={y1} y2={y2} />\n      <line opacity=\"0.2\" stroke=\"black\" strokeWidth=\"2px\" x1={x1} x2={x2} y1={oy1} y2={oy2} />\n      <line opacity=\"0.2\" stroke=\"black\" strokeWidth=\"2px\" x1={x1} x2={x2} y1={ooy1} y2={ooy2} />\n    </g>\n  );\n};\n\nexport default observer(LR);\n","import React from 'react';\n\nconst HatchPattern = () => {\n  return (\n    <defs>\n      <pattern\n        height=\"4\"\n        id=\"pattern\"\n        patternTransform=\"rotate(45)\"\n        patternUnits=\"userSpaceOnUse\"\n        width=\"4\"\n      >\n        <rect fill=\"black\" height=\"4\" opacity=\"0.5\" transform=\"translate(0,0)\" width=\"2\" />\n      </pattern>\n    </defs>\n  );\n};\n\nexport default HatchPattern;\n","import { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, Fragment, useMemo } from 'react';\n\nimport { SkylineInfo } from '../../../Store/Types/Prediction';\nimport translate from '../../../Utils/Translate';\n\nimport HatchPattern from './HatchPattern';\n\ntype Props = {\n  info: SkylineInfo;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\nconst useStyles = makeStyles(() => ({\n  lineBase: {\n    strokeWidth: 2,\n    strokeOpacity: 0.3,\n  },\n  line: {\n    stroke: 'black',\n  },\n  hatch: {\n    strokeWidth: 5,\n    stroke: 'url(#pattern)',\n  },\n}));\n\nconst Skyline: FC<Props> = ({ info, xScale, yScale }: Props) => {\n  const classes = useStyles();\n  const { frontier } = info;\n\n  const [x_sense, y_sense] = info.sense;\n\n  const { scaled_frontier } = useMemo(() => {\n    const scaled_frontier: { x: number; y: number }[] = frontier.map((val) => ({\n      x: xScale(val[0]),\n      y: yScale(val[1]),\n    }));\n\n    return { scaled_frontier };\n  }, [xScale, yScale, frontier]);\n\n  const { x_lines, y_lines } = useMemo(() => {\n    let x_lines = <g />;\n    let y_lines = <g />;\n\n    x_lines = (\n      <g className=\"frontier-x\">\n        {[...scaled_frontier]\n          .sort((a, b) => (x_sense === 'max' ? a.x - b.x : b.x - a.x))\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          .map((n, idx, arr) => {\n            const key = `${n.x}-${n.y}`;\n            let [x1, x2, y1, y2] = [0, 0, 0, 0];\n\n            if (idx === 0) {\n              x1 = x_sense === 'max' ? xScale.range()[0] : n.x;\n              x2 = x_sense === 'max' ? n.x : xScale.range()[1];\n              y1 = n.y;\n              y2 = n.y;\n            } else {\n              const p = arr[idx - 1];\n              x1 = p.x;\n              x2 = n.x;\n              y1 = n.y;\n              y2 = n.y;\n            }\n\n            return (\n              <Fragment key={key}>\n                <line\n                  className={clsx(classes.lineBase, classes.line)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n                <line\n                  className={clsx(classes.lineBase, classes.hatch)}\n                  transform={translate(0, 5)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n              </Fragment>\n            );\n          })}\n      </g>\n    );\n\n    y_lines = (\n      <g>\n        {[...scaled_frontier]\n          .sort((a, b) => (y_sense === 'max' ? a.y - b.y : b.y - a.y))\n          .map((n, idx, arr) => {\n            const key = `${n.x}-${n.y}`;\n\n            let [x1, x2, y1, y2] = [0, 0, 0, 0];\n\n            if (idx === arr.length - 1) {\n              x1 = n.x;\n              x2 = n.x;\n              y1 = y_sense === 'max' ? n.y : yScale.range()[1];\n              y2 = y_sense === 'max' ? yScale.range()[0] : n.y;\n            } else {\n              const p = arr[idx + 1];\n              x1 = n.x;\n              x2 = n.x;\n              y1 = n.y;\n              y2 = p.y;\n            }\n\n            return (\n              <Fragment key={key}>\n                <line\n                  className={clsx(classes.lineBase, classes.line)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n                <line\n                  className={clsx(classes.lineBase, classes.hatch)}\n                  transform={translate(-5, 0)}\n                  x1={x1}\n                  x2={x2}\n                  y1={y1}\n                  y2={y2}\n                />\n              </Fragment>\n            );\n          })}\n      </g>\n    );\n\n    return { x_lines, y_lines };\n  }, [scaled_frontier, x_sense, y_sense, xScale, yScale, classes]);\n\n  return (\n    <g>\n      <HatchPattern />\n      {x_lines}\n      {y_lines}\n    </g>\n  );\n};\n\nexport default observer(Skyline);\n","import { ScaleLinear } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC } from 'react';\n\nimport {\n  DBScanInfo,\n  KMeansInfo,\n  LinearRegressionInfo,\n  Prediction,\n  SkylineInfo,\n} from '../../../Store/Types/Prediction';\n\nimport DBScan from './DBScan';\nimport KMeans from './KMeans';\nimport LR from './LR';\nimport Skyline from './Skyline';\n\ntype Props = {\n  prediction: Prediction;\n  xScale: ScaleLinear<number, number>;\n  yScale: ScaleLinear<number, number>;\n};\n\nconst Overlay: FC<Props> = ({ prediction, xScale, yScale }: Props) => {\n  const { info } = prediction;\n\n  console.log(JSON.parse(JSON.stringify(prediction)));\n\n  switch (prediction.algorithm) {\n    case 'DBScan':\n      switch (prediction.intent) {\n        case 'Cluster':\n          return <DBScan info={info as DBScanInfo} xScale={xScale} yScale={yScale} />;\n        default:\n          break;\n      }\n      break;\n    case 'KMeans':\n      return <KMeans info={info as KMeansInfo} xScale={xScale} yScale={yScale} />;\n    case 'BNL':\n      return <Skyline info={info as SkylineInfo} xScale={xScale} yScale={yScale} />;\n    case 'LR':\n      return <LR info={info as LinearRegressionInfo} xScale={xScale} yScale={yScale} />;\n    default:\n      break;\n  }\n\n  return <></>;\n};\n\nexport default observer(Overlay);\n","import { makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react';\nimport React, { FC } from 'react';\n\nimport translate from '../../../Utils/Translate';\n\ntype Props = {\n  transform?: string;\n  height?: number;\n  width?: number;\n  lineHeight?: number;\n};\n\nconst useStyles = makeStyles(() => ({\n  lineBase: {\n    strokeWidth: 2,\n    strokeOpacity: 0.3,\n  },\n  line: {\n    stroke: 'black',\n  },\n  hatch: {\n    strokeWidth: 5,\n    stroke: 'url(#pattern)',\n  },\n}));\n\nconst SkylineLegend: FC<Props> = ({\n  height = 25,\n  lineHeight = height,\n  width = 150,\n  transform = translate(0),\n}: Props) => {\n  const classes = useStyles();\n\n  const [x1, x2, y1, y2] = [0, 0, 0, lineHeight];\n\n  return (\n    <g transform={transform}>\n      <g transform={translate(width / 2, 0)}>\n        <line className={clsx(classes.lineBase, classes.line)} x1={x1} x2={x2} y1={y1} y2={y2} />\n        <line\n          className={clsx(classes.lineBase, classes.hatch)}\n          transform={translate(5, 0)}\n          x1={x1}\n          x2={x2}\n          y1={y1}\n          y2={y2}\n        />\n        <Typography component=\"text\" transform={translate(10, height / 2)} variant=\"button\">\n          <tspan x=\"0\">Dominated</tspan>\n          <tspan dy=\"1em\" x=\"0\">\n            Region\n          </tspan>\n        </Typography>\n      </g>\n    </g>\n  );\n};\n\nexport default observer(SkylineLegend);\n","import { createStyles, makeStyles, useTheme } from '@material-ui/core';\nimport { select } from 'd3';\nimport { observer } from 'mobx-react';\nimport React, { FC, useCallback, useContext } from 'react';\n\nimport { ExtendedBrushCollection } from '../../Store/IntentState';\nimport Store from '../../Store/Store';\nimport { Plot } from '../../Store/Types/Plot';\nimport translate from '../../Utils/Translate';\nimport BrushComponent, { BrushSelections } from '../Brush/Components/BrushComponent';\nimport { BrushAffectType, BrushCollection } from '../Brush/Types/Brush';\nimport ComparisonMarks from '../Comparison/ComparisonMarks';\nimport { DataDisplay } from '../Comparison/ComparisonScatterplot';\nimport FreeFormBrush, {\n  BrushSize,\n  FreeformBrushAction,\n  FreeformBrushEvent,\n} from '../Freeform/FreeFormBrush';\nimport { useScale } from '../Hooks/useScale';\nimport { useScatterplotData } from '../Hooks/useScatterplot';\n\nimport Axis from './Axis';\nimport Legend from './Legend';\nimport Marks from './Marks';\nimport Overlay from './Overlay/Overlay';\nimport SkylineLegend from './Overlay/SkylineLegend';\nimport useScatterplotStyle from './styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: (props: { dimension: number }) => ({\n      width: props.dimension,\n      height: props.dimension,\n    }),\n  }),\n);\n\ntype Props = {\n  plot: Plot;\n  size: number;\n  originalMarks?: boolean;\n  dataDisplay?: DataDisplay;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setDataDisplay?: any;\n};\n\nconst Scatterplot: FC<Props> = ({\n  plot,\n  size,\n  originalMarks = true,\n  dataDisplay = 'Original',\n}: Props) => {\n  const theme = useTheme();\n  const dimension = size - 2 * theme.spacing(1);\n  const { root } = useStyles({ dimension });\n  const {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    loadedDataset: { labelColumn },\n    setFreeformSelection,\n    selectedPoints,\n    showMatchesLegend,\n    setBrushSelection,\n    brushType,\n    hoveredPrediction,\n    showSkylineLegend,\n    state,\n  } = useContext(Store).exploreStore;\n\n  const { selectedPointsComparison } = useContext(Store).compareStore;\n\n  const { x, y } = plot;\n\n  const classes = useScatterplotStyle();\n\n  const { points, x_extents, y_extents } = useScatterplotData(x, y, labelColumn, false);\n  const { points: compPoints } = useScatterplotData(x, y, labelColumn, true);\n\n  const margin = theme.spacing(10);\n  const sp_dimension = dimension - 2 * margin;\n\n  const xScale = useScale(x_extents, [0, sp_dimension]);\n  const yScale = useScale(y_extents, [sp_dimension, 0]);\n\n  const freeFormBrushHandler = useCallback(\n    (points: string[], event: FreeformBrushEvent, _: FreeformBrushAction) => {\n      if (points.length === 0) return;\n      const selectorString = points.map((p) => `#mark${p}`).join(',');\n\n      switch (event) {\n        case 'Start':\n        case 'Brushing':\n          select(`#${plot.id}`)\n            .selectAll(selectorString)\n            .filter(function () {\n              return select(this).classed(classes.regularMark);\n            })\n            .classed(classes.intermittentHighlight, true);\n          break;\n        case 'End':\n          select(`#${plot.id}`).selectAll('.marks').classed(classes.intermittentHighlight, false);\n          setFreeformSelection(plot, points);\n          break;\n      }\n    },\n    [plot, setFreeformSelection, classes],\n  );\n\n  const rectBrushHandler = useCallback(\n    (\n      selection: BrushSelections,\n      brushes: BrushCollection,\n      type: BrushAffectType,\n      affectedId: string,\n    ) => {\n      const brs: ExtendedBrushCollection = {};\n\n      Object.entries(brushes).forEach((entry) => {\n        const [id, val] = entry;\n\n        brs[id] = { ...val, points: selection[id] };\n      });\n\n      setBrushSelection(plot, brs, type, affectedId);\n    },\n    [plot, setBrushSelection],\n  );\n\n  let brushSize: BrushSize | null = null;\n\n  switch (brushType) {\n    case 'Freeform Small':\n      brushSize = 20;\n      break;\n    case 'Freeform Medium':\n      brushSize = 35;\n      break;\n    case 'Freeform Large':\n      brushSize = 50;\n      break;\n    default:\n      brushSize = null;\n  }\n\n  return (\n    <svg className={root} id={plot.id}>\n      <defs>\n        <clipPath id=\"clip\" width={sp_dimension}>\n          <rect fill=\"none\" height={sp_dimension} width={sp_dimension} />\n        </clipPath>\n      </defs>\n      <g transform={translate(margin)}>\n        <Axis columnName={x} scale={xScale} transform={translate(0, sp_dimension)} type=\"bottom\" />\n        <Axis columnName={y} scale={yScale} type=\"left\" />\n        {showMatchesLegend && <Legend offset={sp_dimension - 110} />}\n        {showSkylineLegend && <SkylineLegend transform={translate(sp_dimension - 150, 100)} />}\n        <BrushComponent\n          bottom={sp_dimension}\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          brushes={state.brushes[plot.id] || {}}\n          data={points}\n          disableBrush={brushType !== 'Rectangular' || !originalMarks}\n          left={0}\n          right={sp_dimension}\n          top={0}\n          xScale={xScale}\n          yScale={yScale}\n          onBrushHandler={rectBrushHandler}\n        />\n        {brushSize && originalMarks && (\n          <FreeFormBrush\n            bottom={sp_dimension}\n            brushSize={brushSize}\n            data={points}\n            left={0}\n            right={sp_dimension}\n            top={0}\n            xScale={xScale}\n            yScale={yScale}\n            onBrush={freeFormBrushHandler}\n          />\n        )}\n\n        {originalMarks ? (\n          <Marks points={points} selectedPoints={selectedPoints} xScale={xScale} yScale={yScale} />\n        ) : (\n          <ComparisonMarks\n            compPoints={compPoints}\n            dataDisplay={dataDisplay}\n            points={points}\n            selectedPoints={selectedPointsComparison}\n            xScale={xScale}\n            yScale={yScale}\n          />\n        )}\n        {hoveredPrediction && (\n          <Overlay prediction={hoveredPrediction} xScale={xScale} yScale={yScale} />\n        )}\n        {state.prediction && (\n          <Overlay prediction={state.prediction} xScale={xScale} yScale={yScale} />\n        )}\n      </g>\n    </svg>\n  );\n};\n\nexport default observer(Scatterplot);\n","import { observer } from 'mobx-react';\nimport React, { FC } from 'react';\n\nimport translate from '../../Utils/Translate';\nimport useScatterplotStyle from '../Scatterplot/styles';\n\nimport { createComet } from './ComparisonMarks';\n\ntype Props = {\n  offset?: number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setDataDisplay: any;\n  dataDisplay: string;\n  selectedPoints: boolean;\n};\n\nconst Legend: FC<Props> = ({ setDataDisplay, dataDisplay, selectedPoints = false }: Props) => {\n  const classes = useScatterplotStyle();\n\n  return (\n    <svg height={30} width={700}>\n      <g>\n        <g\n          transform={translate(0, 10)}\n          onMouseDown={() => {\n            if (dataDisplay === 'Original') {\n              setDataDisplay('All');\n            } else {\n              setDataDisplay('Original');\n            }\n          }}\n        >\n          <circle className={`marks ${classes.regularMark}`} cx={12.5} cy={5} opacity=\".5\" r=\"5\" />\n          {dataDisplay === 'Original' ? (\n            <rect height={25} opacity=\".2\" rx={20} transform={translate(0, -8)} width={100} />\n          ) : null}\n\n          <text\n            dominantBaseline=\"middle\"\n            dx=\"25\"\n            dy=\"5\"\n            fontWeight={dataDisplay === 'Original' ? 'bold' : 'normal'}\n          >\n            Base\n          </text>\n        </g>\n        <g\n          transform={translate(100, 10)}\n          onMouseDown={() => {\n            if (dataDisplay === 'Comparison') {\n              setDataDisplay('All');\n            } else {\n              setDataDisplay('Comparison');\n            }\n          }}\n        >\n          <circle className={`marks ${classes.regularMark}`} cx={12.5} cy={5} opacity=\".5\" r=\"5\" />\n          {dataDisplay === 'Comparison' ? (\n            <rect height={25} opacity=\".2\" rx={20} transform={translate(0, -8)} width={100} />\n          ) : null}\n          <text dominantBaseline=\"middle\" dx=\"25\" dy=\"5\">\n            Updated\n          </text>\n        </g>\n\n        <g\n          transform={translate(200, 10)}\n          onMouseDown={() => {\n            if (dataDisplay === 'RemovedOnly') {\n              setDataDisplay('All');\n            } else {\n              setDataDisplay('RemovedOnly');\n            }\n          }}\n        >\n          <g\n            className={`marks ${classes.removedMark} ${\n              !selectedPoints ? classes.removedColor : ''\n            }`}\n            opacity=\"0.5\"\n            transform={translate(10, 0)}\n          >\n            <line x2=\"6\" y2=\"6\" />\n            <line x1=\"6\" y2=\"6\" />\n          </g>\n          {dataDisplay === 'RemovedOnly' ? (\n            <rect height={25} opacity=\".2\" rx={20} transform={translate(0, -8)} width={100} />\n          ) : null}\n          <text dominantBaseline=\"middle\" dx=\"25\" dy=\"5\">\n            Removed\n          </text>\n        </g>\n        <g\n          transform={translate(300, 10)}\n          onMouseDown={() => {\n            if (dataDisplay === 'AddedOnly') {\n              setDataDisplay('All');\n            } else {\n              setDataDisplay('AddedOnly');\n            }\n          }}\n        >\n          <g\n            className={`marks ${classes.newMark} ${!selectedPoints ? classes.newColor : ''}`}\n            opacity=\"0.5\"\n            transform={translate(10, 0)}\n          >\n            {dataDisplay === 'AddedOnly' ? (\n              <rect height={25} opacity=\".2\" rx={20} transform={translate(-10, -8)} width={100} />\n            ) : null}\n            <polygon points=\"0 0, 5 10, 10 0\" />\n          </g>\n          <text dominantBaseline=\"middle\" dx=\"32\" dy=\"5\">\n            Added\n          </text>\n        </g>\n        <g\n          transform={translate(400, 10)}\n          onMouseDown={() => {\n            if (dataDisplay === 'ChangedOnly') {\n              setDataDisplay('All');\n            } else {\n              setDataDisplay('ChangedOnly');\n            }\n          }}\n        >\n          <path\n            className={`marks ${classes.movedLine}`}\n            d={createComet(5, 25, 5, 5)}\n            style={{ opacity: '0.4' }}\n          />\n          {dataDisplay === 'ChangedOnly' ? (\n            <rect height={25} opacity=\".2\" rx={20} transform={translate(-10, -8)} width={130} />\n          ) : null}\n          <circle className={`marks ${classes.movedPoint}`} cx={5} cy={5} opacity=\".2\" r=\"5\" />\n          <circle className={`marks ${classes.movedPoint}`} cx={25} cy={5} opacity=\"1\" r=\"5\" />\n          <text dominantBaseline=\"middle\" dx=\"32\" dy=\"5\">\n            Point Moved\n          </text>\n        </g>\n        <g\n          transform={translate(510, 10)}\n          onMouseDown={() => {\n            if (dataDisplay === 'Diff') {\n              setDataDisplay('All');\n            } else {\n              setDataDisplay('Diff');\n            }\n          }}\n        >\n          {dataDisplay === 'Diff' ? (\n            <rect height={25} opacity=\".2\" rx={20} transform={translate(14, -8)} width={130} />\n          ) : null}\n          <text dominantBaseline=\"middle\" dx=\"32\" dy=\"5\">\n            All Changed Data\n          </text>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default observer(Legend);\n","import {\n  Chip,\n  CircularProgress,\n  createStyles,\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  Theme,\n  useTheme,\n  Switch,\n  FormControlLabel,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext, useState } from 'react';\nimport { toJS } from 'mobx';\n\nimport Store from '../Store/Store';\n\nimport Scatterplot from './Scatterplot/Scatterplot';\nimport { DataDisplay } from './Comparison/ComparisonScatterplot';\nimport ComparisonLegend from './Comparison/ComparisonLegend';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n      overflow: 'auto',\n    },\n    chips: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5),\n      },\n    },\n    grid: {\n      height: '100%',\n    },\n    closeIcon: {\n      position: 'absolute',\n    },\n  }),\n);\n\nconst Visualization: FC = () => {\n  const {\n    exploreStore: { plots, removePlot, isLoadingData, n_plots, isComparison, setComparison, selectedPoints},\n    projectStore: { currentProject, currentDatasetKey, loadDatasetWithReapply, loadComparisonDataset, isReapplying, currentComparisonDatasets, comparisonKeys },\n  } = useContext(Store);\n\n  // const spContainerDimension = height > width ? width : height;\n  const spContainerDimension = n_plots === 1 ? 800 : 500;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [dataDisplay, setDataDisplay] = useState<DataDisplay>('All');\n\n  const xs = n_plots === 1 ? 'auto' : 6;\n\n  const loader = <CircularProgress />;\n\n  console.log(isComparison, toJS(currentComparisonDatasets), toJS(comparisonKeys))\n\n  const scatterPlots = plots.map((plot) => (\n    <Grid key={plot.id} xs={xs} item>\n      {isComparison && currentComparisonDatasets.length > 1? (<ComparisonLegend\n        dataDisplay={dataDisplay}\n        offset={spContainerDimension - 2 * theme.spacing(1) - 110}\n        selectedPoints={selectedPoints.length > 0}\n        setDataDisplay={setDataDisplay}\n      />) : null}\n\n      <Paper elevation={3}>\n        {n_plots > 1 && (\n          <IconButton\n            className={classes.closeIcon}\n            onClick={() => {\n              removePlot(plot);\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        )}\n        <Scatterplot\n          dataDisplay={dataDisplay}\n          originalMarks={!isComparison || currentComparisonDatasets.length < 2}\n          plot={plot}\n          size={spContainerDimension - 2 * theme.spacing(1)}\n        />\n      </Paper>\n    </Grid>\n  ));\n\n  if (!currentProject || !currentDatasetKey) return <div />;\n\n  console.log(toJS(comparisonKeys))\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.chips}>\n        {currentProject.datasets.map((d) => (\n          <Chip\n            key={d.key}\n            color={\n              currentDatasetKey === d.key || (isComparison && comparisonKeys.includes(d.key))\n                ? 'primary'\n                : 'default'\n            }\n            disabled={\n              currentDatasetKey === d.key || (isComparison && comparisonKeys.includes(d.key))\n            }\n            label={d.version}\n            onClick={() => {\n              if (isComparison) {\n                loadComparisonDataset(d.key);\n              } else {\n                loadDatasetWithReapply(d.key);\n              }\n            }}\n          />\n        ))}\n\n        <FormControlLabel control={\n            <Switch\n              checked={isComparison}\n              color=\"primary\"\n              name=\"Compare Datasets\"\n              onChange={() => setComparison(!isComparison)}\n            />\n          }\n          label=\"Compare Datasets\"\n          labelPlacement=\"end\"\n          value=\"end\"\n        />\n      </div>\n      <Grid alignItems=\"center\" className={classes.grid} justify=\"center\" spacing={2} container>\n        {isLoadingData || isReapplying ? loader : scatterPlots}\n      </Grid>\n    </div>\n  );\n};\n\nexport default observer(Visualization);\n","import { Input, Tooltip, Typography } from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport React, { useState } from 'react';\n\ntype Props = {\n  text: string;\n  handleType: (text: string) => void;\n  color: string;\n};\n\nconst Editable = ({ text, handleType, color }: Props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  return isEditing ? (\n    <Input\n      value={text}\n      onBlur={() => setIsEditing(false)}\n      onChange={(event) => {\n        event.stopPropagation();\n        handleType(event.target.value);\n      }}\n    />\n  ) : (\n    <Tooltip title={text}>\n      <Typography\n        align=\"center\"\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        color={color as any}\n        style={{ width: '100px' }}\n        variant=\"button\"\n        noWrap\n        onClick={() => setIsEditing(true)}\n      >\n        {text}\n      </Typography>\n    </Tooltip>\n  );\n};\n\nexport default observer(Editable);\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  IconButton,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\nimport { isChildNode } from '@visdesignlab/trrack';\n\nimport Store from '../../Store/Store';\n\ntype Props = {\n  id: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  close: {\n    marginLeft: 'auto',\n  },\n}));\n\nconst Action = ({ id }: Props) => {\n  const classes = useStyles();\n  const {\n    provenance,\n    provenance: {\n      graph: { nodes },\n    },\n    exploreStore: { removeFromWorkflow, currentDatasetKey },\n  } = useContext(Store);\n\n  const node = nodes[id];\n\n  let isRejected = false;\n\n  const artifact = provenance.getLatestArtifact(id);\n\n  if (artifact) {\n    if (!currentDatasetKey) {\n      isRejected = false;\n    } else {\n      isRejected = artifact.artifact.status_record[currentDatasetKey] === 'Rejected';\n    }\n  }\n  \n  //also show annotation, \n  return (\n    <Card className={classes.card} variant=\"outlined\">\n      <CardContent>\n        <CardActions disableSpacing>\n          <div>\n            <Typography\n              color={isRejected ? 'textSecondary' : 'textPrimary'}\n              display=\"block\"\n              variant=\"button\"\n            >\n              {node.label}\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              display=\"block\"\n              variant=\"subtitle2\"\n            >\n              {/* <div>{node.label}</div> */}\n              {isChildNode(node) && node.artifacts && node.artifacts.annotations && provenance.getLatestAnnotation(node.id)\n                ? provenance.getLatestAnnotation(node.id)?.annotation\n                : ''}\n            </Typography>\n          </div>\n          <IconButton\n            className={classes.close}\n            color=\"secondary\"\n            disabled={isRejected}\n            size=\"small\"\n            onClick={() => removeFromWorkflow(id)}\n          >\n            <CloseIcon />\n          </IconButton>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default observer(Action);\n","/* eslint-disable no-constant-condition */\nimport {\n  Badge,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  IconButton,\n  makeStyles,\n  Snackbar,\n  Theme,\n} from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { Alert } from '@material-ui/lab';\nimport { observer } from 'mobx-react';\nimport React, { useCallback, useContext, useState } from 'react';\n\nimport { WorkflowType } from '../../Store/ExploreStore';\nimport Store from '../../Store/Store';\nimport Editable from '../Editable';\n\nimport Action from './Action';\nimport { storeToFirebase } from './Firebase';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  close: {\n    marginLeft: 'auto',\n  },\n  badge_sync: {\n    backgroundColor: green[500],\n  },\n  badge_unsync: {\n    backgroundColor: red[500],\n  },\n}));\n\ntype Props = {\n  workflow: WorkflowType;\n};\n\nconst Workflow = ({ workflow }: Props) => {\n  const classes = useStyles();\n  const {\n    exploreStore: {\n      workflows,\n      renameWorkflow,\n      currentWorkflow,\n      setCurrentWorkflow,\n      removeWorkflow,\n      workflowSyncStatus,\n      setSyncStatus,\n    },\n    provenance,\n    db,\n  } = useContext(Store);\n\n  const [openCopyMessage, setOpenCopyMessage] = useState(true);\n\n  const { id } = workflow;\n\n  const isSync = workflowSyncStatus[id]\n    ? workflowSyncStatus[id] === JSON.stringify(workflow)\n    : false;\n\n  const isCurrent = id === currentWorkflow;\n\n  const handleType = useCallback((text) => renameWorkflow(id, text), [id, renameWorkflow]);\n\n  const copyId = useCallback(() => {\n    const el = document.createElement('textarea');\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-99999px';\n    el.value = id;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    setOpenCopyMessage(true);\n  }, [id]);\n\n  return (\n    <>\n      <Card className={classes.card} variant=\"outlined\" onClick={() => setCurrentWorkflow(id)}>\n        <CardContent>\n          <CardActions disableSpacing>\n            <Badge\n              classes={{ badge: isSync ? classes.badge_sync : classes.badge_unsync }}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <Editable\n                color={isCurrent ? 'textPrimary' : 'textSecondary'}\n                handleType={handleType}\n                text={workflow.name}\n              />\n            </Badge>\n            {!isSync ? (\n              <IconButton\n                className={classes.close}\n                disabled={workflow.graph.length === 0}\n                size=\"small\"\n                onClick={() =>\n                  storeToFirebase(id, provenance.graph, workflows[id], db, setSyncStatus)\n                }\n              >\n                <ShareIcon />\n              </IconButton>\n            ) : (\n              <IconButton\n                className={classes.close}\n                disabled={workflow.graph.length === 0}\n                size=\"small\"\n                onClick={copyId}\n              >\n                <FileCopyIcon />\n              </IconButton>\n            )}\n            <IconButton size=\"small\" onClick={() => removeWorkflow(id)}>\n              <CloseIcon />\n            </IconButton>\n          </CardActions>\n          <Divider />\n          {Object.values(workflow.graph).map((id) => (\n            <Action key={id} id={id} />\n          ))}\n        </CardContent>\n      </Card>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        autoHideDuration={1000}\n        open={openCopyMessage}\n        onClose={() => setOpenCopyMessage(false)}\n      >\n        <Alert>{`Copied workflow id: ${id}`}</Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default observer(Workflow);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  makeStyles,\n  Paper,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\n\nimport Store from '../../Store/Store';\n\nimport Workflow from './Workflow';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  card: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\n// type Props = {\n//   test?: string;\n// };\n\nconst Workflows = () => {\n  const classes = useStyles();\n  const {\n    exploreStore: { workflows, addWorkflow },\n  } = useContext(Store);\n\n  return (\n    <Paper className={classes.root}>\n      <Typography\n        align=\"center\"\n        style={{\n          fontWeight: 'bold',\n          fill: '#F2',\n          fontSize: '18px',\n          fontFamily: 'Lato, Helvetica Neue,Arial,Helvetica,sans-serif',\n        }}\n        variant=\"h4\"\n      >\n        Workflows\n      </Typography>\n      <Divider />\n      <Card style={{ border: 'none', boxShadow: 'none' }} variant=\"outlined\">\n        <CardActions>\n          <Button color=\"primary\" onClick={() => addWorkflow()}>\n            Add Workflow\n          </Button>\n        </CardActions>\n        <CardContent>\n          {Object.values(workflows).map((d) => {\n            return <Workflow key={d.id} workflow={d} />;\n          })}\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n};\n\nexport default observer(Workflows);\n","import { CssBaseline, makeStyles } from '@material-ui/core';\nimport { isChildNode } from '@visdesignlab/trrack';\nimport { observer } from 'mobx-react';\nimport React, { useContext, useEffect } from 'react';\n\nimport Store from '../../Store/Store';\nimport { IntentEvents } from '../../Store/Types/IntentEvents';\nimport { Plot } from '../../Store/Types/Plot';\nimport { ProvVis } from '../../trrack-vis/index';\nimport { EventConfig } from '../../trrack-vis/Utils/EventConfig';\nimport { getPlotId } from '../../Utils/IDGens';\nimport {\n  AddBrush,\n  AddPlot,\n  ChangeBrush,\n  ChangeBrushSize,\n  ChangeBrushType,\n  ChangeCategory,\n  Filter,\n  Invert,\n  LoadDataset,\n  LockPrediction,\n  MultiBrush,\n  PointDeselection,\n  PointSelection,\n  RemoveBrush,\n  SwitchCategoryVisibility,\n  TurnPrediction,\n} from '../Icons';\nimport Navbar from '../Navbar';\nimport PredictionTable from '../Predictions/PredictionTable';\nimport Visualization from '../Visualization';\nimport Workflows from '../Workflow/Workflows';\n\nexport type Bundle = {\n  metadata: unknown;\n  bundleLabel: string;\n  bunchedNodes: string[];\n};\n\nexport type BundleMap = { [key: string]: Bundle };\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '.red': {\n      backgroundColor: '#ff8080',\n    },\n    '.green': {\n      backgroundColor: '#90EE90',\n    },\n    '.yellow': {\n      backgroundColor: '#ffff8b',\n    },\n    display: 'grid',\n    height: '100vh',\n    width: '100vw',\n    gridTemplateRows: 'min-content 1fr',\n    overflow: 'hidden',\n  },\n  layout: {\n    display: 'grid',\n    gridTemplateColumns: '5fr 1.5fr 1.3fr 1.5fr',\n    overflow: 'hidden',\n  },\n}));\n\nexport const eventConfig: EventConfig<IntentEvents> = {\n  'Load Dataset': {\n    backboneGlyph: <LoadDataset size={22} />,\n    currentGlyph: <LoadDataset fill=\"#2185d0\" size={22} />,\n    regularGlyph: <LoadDataset size={16} />,\n    bundleGlyph: <LoadDataset fill=\"#2185d0\" size={22} />,\n  },\n  MultiBrush: {\n    backboneGlyph: <MultiBrush size={22} />,\n    currentGlyph: <MultiBrush fill=\"#2185d0\" size={22} />,\n    regularGlyph: <MultiBrush size={16} />,\n    bundleGlyph: <MultiBrush fill=\"#2185d0\" size={22} />,\n  },\n  'Switch Category Visibility': {\n    backboneGlyph: <SwitchCategoryVisibility size={22} />,\n    currentGlyph: <SwitchCategoryVisibility fill=\"#2185d0\" size={22} />,\n    regularGlyph: <SwitchCategoryVisibility size={16} />,\n    bundleGlyph: <SwitchCategoryVisibility fill=\"#2185d0\" size={22} />,\n  },\n  'Change Category': {\n    backboneGlyph: <ChangeCategory size={22} />,\n    currentGlyph: <ChangeCategory fill=\"#2185d0\" size={22} />,\n    regularGlyph: <ChangeCategory size={16} />,\n    bundleGlyph: <ChangeCategory fill=\"#2185d0\" size={22} />,\n  },\n  'Add Plot': {\n    backboneGlyph: <AddPlot size={22} />,\n    currentGlyph: <AddPlot fill=\"#2185d0\" size={22} />,\n    regularGlyph: <AddPlot size={16} />,\n    bundleGlyph: <AddPlot fill=\"#2185d0\" size={22} />,\n  },\n  'Point Selection': {\n    backboneGlyph: <PointSelection size={22} />,\n    currentGlyph: <PointSelection fill=\"#2185d0\" size={22} />,\n    regularGlyph: <PointSelection size={16} />,\n    bundleGlyph: <PointSelection fill=\"#2185d0\" size={22} />,\n  },\n  'Point Deselection': {\n    backboneGlyph: <PointDeselection size={22} />,\n    currentGlyph: <PointDeselection fill=\"#2185d0\" size={22} />,\n    regularGlyph: <PointDeselection size={16} />,\n    bundleGlyph: <PointDeselection fill=\"#2185d0\" size={22} />,\n  },\n  'Add Brush': {\n    backboneGlyph: <AddBrush size={22} />,\n    currentGlyph: <AddBrush fill=\"#2185d0\" size={22} />,\n    regularGlyph: <AddBrush size={16} />,\n    bundleGlyph: <AddBrush fill=\"#2185d0\" size={22} />,\n  },\n  'Lock Prediction': {\n    backboneGlyph: <LockPrediction size={22} />,\n    currentGlyph: <LockPrediction fill=\"#2185d0\" size={22} />,\n    regularGlyph: <LockPrediction size={16} />,\n    bundleGlyph: <LockPrediction fill=\"rgb(248, 191, 132)\" size={22} />,\n  },\n  'Prediction Selection': {\n    backboneGlyph: <TurnPrediction size={22} />,\n    currentGlyph: <TurnPrediction fill=\"#2185d0\" size={22} />,\n    regularGlyph: <TurnPrediction size={16} />,\n    bundleGlyph: <TurnPrediction fill=\"#2185d0\" size={22} />,\n  },\n  Invert: {\n    backboneGlyph: <Invert size={22} />,\n    currentGlyph: <Invert fill=\"#2185d0\" size={22} />,\n    regularGlyph: <Invert size={16} />,\n    bundleGlyph: <Invert fill=\"#2185d0\" size={22} />,\n  },\n  'Update Brush': {\n    backboneGlyph: <ChangeBrush size={22} />,\n    currentGlyph: <ChangeBrush fill=\"#2185d0\" size={22} />,\n    regularGlyph: <ChangeBrush size={16} />,\n    bundleGlyph: <ChangeBrush fill=\"#2185d0\" size={22} />,\n  },\n  'Remove Brush': {\n    backboneGlyph: <RemoveBrush size={22} />,\n    currentGlyph: <RemoveBrush fill=\"#2185d0\" size={22} />,\n    regularGlyph: <RemoveBrush size={16} />,\n    bundleGlyph: <RemoveBrush fill=\"#2185d0\" size={22} />,\n  },\n  Filter: {\n    backboneGlyph: <Filter size={22} />,\n    currentGlyph: <Filter fill=\"#2185d0\" size={22} />,\n    regularGlyph: <Filter size={16} />,\n    bundleGlyph: <Filter fill=\"#ccc\" size={22} />,\n  },\n  'Change Brush Type': {\n    backboneGlyph: <ChangeBrushType size={22} />,\n    currentGlyph: <ChangeBrushType fill=\"#2185d0\" size={22} />,\n    regularGlyph: <ChangeBrushType size={16} />,\n    bundleGlyph: <ChangeBrushType fill=\"#2185d0\" size={22} />,\n  },\n  'Change Brush Size': {\n    backboneGlyph: <ChangeBrushSize size={22} />,\n    currentGlyph: <ChangeBrushSize fill=\"#2185d0\" size={22} />,\n    regularGlyph: <ChangeBrushSize size={16} />,\n    bundleGlyph: <ChangeBrushSize fill=\"#2185d0\" size={22} />,\n  },\n};\n\nconst ExploreHome = () => {\n  const classes = useStyles();\n\n  const {\n    exploreStore,\n    projectStore: { loadedDataset, nodeCreationMap, approveNode, rejectNode },\n    provenance,\n    bundledNodes,\n    loadedWorkflowId,\n    loadSavedProject,\n    dims,\n  } = useContext(Store);\n\n  const { addToWorkflow } = exploreStore;\n\n  useEffect(() => {\n    const current = provenance.current;\n\n    if (isChildNode(current)) {\n      if (current.children.length > 0) return;\n    }\n\n    if (!loadedDataset || exploreStore.n_plots > 0 || loadedWorkflowId || loadSavedProject) return;\n\n    const { numericColumns } = loadedDataset;\n\n    let x_index = 0;\n    let y_index = 1;\n\n    if (dims.length > 0) {\n      const [x, y] = dims;\n\n      x_index =\n        numericColumns.findIndex((d) => d === x) !== -1\n          ? numericColumns.findIndex((d) => d === x)\n          : x_index;\n      y_index =\n        numericColumns.findIndex((d) => d === y) !== -1\n          ? numericColumns.findIndex((d) => d === y)\n          : y_index;\n    }\n\n    const plot: Plot = {\n      id: getPlotId(),\n      x: numericColumns[x_index],\n      y: numericColumns[y_index],\n    };\n    exploreStore.addPlot(plot);\n  });\n\n  const bundle: BundleMap = {};\n\n  for (const j of bundledNodes) {\n    if (j.length === 0) {\n      continue;\n    }\n    bundle[j[0]] = {\n      metadata: '',\n      bundleLabel: '',\n      bunchedNodes: j,\n    };\n  }\n\n  // function brushedNodes(selected: string[])\n  // {\n  //   //TODO:: do this in smarter, value based way\n  //   // updateBrushed(selected)\n  // }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Navbar />\n      <div className={classes.layout}>\n        <Visualization />\n        <PredictionTable />\n        <ProvVis\n          key={provenance.graph.root}\n          addToWorkflow={addToWorkflow}\n          approvedFunction={(node: string) => approveNode(node)}\n          backboneGutter={40}\n          changeCurrent={(nodeID: string) => provenance.goToNode(nodeID)}\n          current={provenance.graph.current}\n          currentDataset={loadedDataset?.version || ''}\n          ephemeralUndo={false}\n          eventConfig={eventConfig}\n          nodeCreationMap={nodeCreationMap}\n          nodeMap={provenance.graph.nodes}\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          prov={provenance as any}\n          rejectedFunction={(node) => rejectNode(node)}\n          root={provenance.graph.root}\n          undoRedoButtons\n        />\n        <Workflows />\n      </div>\n    </div>\n  );\n};\n\nexport default observer(ExploreHome);\n","import { observer } from 'mobx-react';\nimport React, { FC, useContext, useEffect } from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport Store from '../../Store/Store';\n\nimport ExploreHome from './ExploreHome';\n\nconst Explore: FC<RouteComponentProps> = ({ location }: RouteComponentProps) => {\n  const {\n    setQueryParams,\n    projectStore: { loadedDataset },\n  } = useContext(Store);\n\n  useEffect(() => {\n    setQueryParams(location.search);\n  }, [location.search, setQueryParams]);\n\n  if (!loadedDataset) return <Redirect to={{ pathname: '/project', search: location.search }} />;\n\n  return <ExploreHome />;\n};\n\nexport default observer(Explore);\n","import { observer } from 'mobx-react';\nimport React, { FC } from 'react';\n\nimport { CategoricalDistribution, Column } from '../../Store/Types/Dataset';\n\ntype CategoricalHeaderProps = {\n  info: CategoricalDistribution;\n  width: number;\n  height: number;\n};\n\nconst CategoricalHeader: FC<CategoricalHeaderProps> = ({\n  info,\n  width,\n  height,\n}: CategoricalHeaderProps) => {\n  return (\n    <div>\n      {Object.keys(info).length} {width} {height}\n    </div>\n  );\n};\n\ntype Props = {\n  width: number;\n  height: number;\n  column: Column;\n};\n\nconst HeaderDistribution: FC<Props> = ({ column, width, height }: Props) => {\n  const { dataType, fullname } = column;\n\n  if (dataType === 'id' || dataType === 'label') return <>{fullname}</>;\n\n  if (column.dataType === 'categorical')\n    return <CategoricalHeader height={height} info={column.info} width={width} />;\n\n  return <div>Custom</div>;\n};\n\nexport default observer(HeaderDistribution);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { ValueFormatterParams } from '@material-ui/x-grid';\nimport { observer } from 'mobx-react';\nimport React, { useCallback, useContext, useMemo, useRef } from 'react';\n\nimport Store from '../../Store/Store';\nimport { Dataset } from '../../Store/Types/Dataset';\n\nimport HeaderDistribution from './HeaderDistribution';\n\nfunction useDataGridFormat(\n  data: Dataset | null,\n  comparisonDataset: Dataset | null,\n  headerHeight = 56,\n  firstTable: boolean,\n) {\n  const st = useCallback((background) => {\n    return {\n      padding: 0,\n      width: '100%',\n      background,\n    };\n  }, []);\n\n  const { rows = [], columns = [] } = useMemo(() => {\n    if (!data) return { rows: [], columns: [] };\n    // console.log(toJS(data));\n    const { columnInfo, columns, values } = data;\n\n    const cols: any[] = columns\n      .filter((col) => col !== 'id' && col !== 'iid')\n      .map((col) => ({\n        field: col,\n        headerName: columnInfo[col].fullname,\n        description: columnInfo[col].unit || '',\n        flex: 1,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        renderHeader: (params: any) => {\n          const { width } = params.colDef;\n\n          if (headerHeight) return <div>{params.field}</div>;\n\n          return (\n            <div>\n              <HeaderDistribution column={columnInfo[col]} height={headerHeight} width={width} />\n            </div>\n          );\n        },\n\n        renderCell: (params: ValueFormatterParams) => {\n          if (comparisonDataset === null) {\n            return <div>{params.value}</div>;\n          }\n\n          const label = params.row.Label;\n\n          const row = comparisonDataset.values.filter((d) => d.Label === label);\n\n          let color = 'none';\n\n          if (row.length === 0) {\n            color = firstTable ? '#ff8080' : '#90EE90';\n          } else if (!firstTable) {\n            const valueChange = params.getValue(params.field) !== row[0][params.field];\n\n            // console.log(params.getValue(params.field));\n            // console.log(row[0][params.field]);\n\n            if (valueChange) color = '#ffff8b';\n          }\n\n          return <div style={st(color)}>{params.value}</div>;\n        },\n        cellClassName: (params: any) => {\n          if (comparisonDataset === null) return 'none';\n          const label = params.row.Label;\n\n          const row = comparisonDataset.values.filter((d) => d.Label === label);\n\n          let color = 'none';\n\n          if (row.length === 0) {\n            color = firstTable ? 'red' : 'green';\n          } else if (!firstTable) {\n            const valueChange = params.getValue(params.field) !== row[0][params.field];\n\n            // console.log(params.getValue(params.field));\n            // console.log(row[0][params.field]);\n\n            if (valueChange) color = 'yellow';\n          }\n\n          return color;\n        },\n      }));\n\n    return { rows: values, columns: cols };\n  }, [data, comparisonDataset, headerHeight, firstTable, st]);\n\n  return { rows, columns };\n}\n\ntype paramType = {\n  columnNum: number;\n};\n\nconst useStyles = makeStyles(() => ({\n  centerText: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nexport const DatasetTable = observer((p: paramType) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const classes = useStyles();\n  const headerHeight = 56;\n  const { loadedDataset } = useContext(Store).projectStore;\n  const { rows, columns } = useDataGridFormat(loadedDataset, null, headerHeight, true);\n\n  return (\n    <div\n      className={classes.centerText}\n      style={{ gridColumnStart: 1, gridColumnEnd: 1 + p.columnNum }}\n    >\n      {rows.length > 0 ? (\n        <DataGrid\n          ref={ref}\n          columns={columns}\n          headerHeight={headerHeight}\n          rows={rows}\n          autoPageSize\n          pagination\n        />\n      ) : (\n        <Typography variant=\"button\">Please select a dataset</Typography>\n      )}\n    </div>\n  );\n});\n\nexport const ComparisonTable = observer(() => {\n  const ref = useRef<HTMLDivElement>(null);\n  const headerHeight = 56;\n  const { currentComparisonDatasets } = useContext(Store).projectStore;\n  const { rows, columns } = useDataGridFormat(\n    currentComparisonDatasets[0],\n    currentComparisonDatasets[1],\n    headerHeight,\n    false,\n  );\n\n  return (\n    <div style={{ gridColumnStart: 2, gridColumnEnd: 3 }}>\n      <DataGrid\n        ref={ref}\n        columns={columns}\n        headerHeight={headerHeight}\n        rows={rows}\n        autoPageSize\n        pagination\n      />\n    </div>\n  );\n});\n","import { LinearProgress, List, ListItem, ListItemText } from '@material-ui/core';\nimport Axios from 'axios';\nimport { observer } from 'mobx-react';\nimport React, { FC, useEffect, useState } from 'react';\n\nimport { SERVER } from '../../consts';\n\nimport { ID } from './UploadDatasetDialog';\n\ntype Props = {\n  trackers: ID[];\n  updateWhenDone: () => void;\n};\n\ntype Status = {\n  type: string;\n  status: string;\n  info: {\n    processed: number;\n    to_process: number;\n  };\n};\n\nconst StatusBars: FC<Props> = ({ trackers, updateWhenDone }: Props) => {\n  const [statuses, setStatuses] = useState<Status[]>([]);\n  const [complete, setComplete] = useState(false);\n\n  useEffect(() => {\n    if (trackers.length === 0) return;\n\n    if (complete) {\n      setStatuses([]);\n      updateWhenDone();\n    }\n\n    const intervalId = setInterval(() => {\n      Axios.post(`${SERVER}/dataset/status`, { trackers }).then((response) => {\n        const stats: Status[] = response.data;\n        const isAllDone = stats.map((s) => s.status).filter((s) => s !== 'SUCCESS').length === 0;\n\n        if (isAllDone) setComplete(true);\n        setStatuses(stats);\n      });\n    }, 500);\n\n    return () => clearInterval(intervalId);\n  }, [trackers, statuses, complete, updateWhenDone]);\n\n  return (\n    <List>\n      {statuses.map(({ type, info: { processed, to_process } }) => (\n        <ListItem key={type}>\n          <ListItemText>\n            {type} ({processed}/{to_process})\n          </ListItemText>\n          <ListItemText>\n            <LinearProgress value={(processed / to_process) * 100} variant=\"determinate\" />\n          </ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default observer(StatusBars);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Input,\n  InputLabel,\n  TextField,\n} from '@material-ui/core';\nimport Axios, { AxiosResponse } from 'axios';\nimport { useFormik } from 'formik';\nimport { observer } from 'mobx-react';\nimport React, { ChangeEvent, FC, useCallback, useContext, useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport { SERVER } from '../../consts';\nimport Store from '../../Store/Store';\nimport { Project } from '../../Store/Types/Project';\n\nimport StatusBars from './StatusBars';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n};\n\ntype DatasetFormFields = {\n  version: string;\n  description: string;\n  dataset: File;\n  metadata: File;\n};\n\nexport type ID = {\n  type: string;\n  id: string;\n};\n\ntype DatasetResponse = {\n  datasetKey: string;\n  message: string;\n  trackers: ID[];\n};\n\nconst queryClient = new QueryClient();\n\nfunction useDatasetFormManagement(project: Project | null) {\n  const [showStatus, setShowStatus] = useState(false);\n  const [processingComplete, setProcessingComplete] = useState(false);\n  const [trackers, setTrackers] = useState<ID[]>([]);\n\n  const updateWhenDone = useCallback(() => {\n    setShowStatus(false);\n    setProcessingComplete(true);\n  }, []);\n\n  const handleSubmit = useCallback(\n    (fields: DatasetFormFields) => {\n      if (!project) return;\n\n      const formData = new FormData();\n\n      Object.entries(fields).forEach((entry) => {\n        formData.append(entry[0], entry[1]);\n      });\n      formData.append('reset', 'True');\n\n      Axios.post(`${SERVER}/${project.key}/dataset/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }).then((response: AxiosResponse<DatasetResponse>) => {\n        setTrackers(response.data.trackers);\n        setShowStatus(true);\n      });\n    },\n    [project],\n  );\n  const initialValues: DatasetFormFields = {\n    version: '',\n    description: '',\n    dataset: null as never,\n    metadata: null as never,\n  };\n\n  return { handleSubmit, initialValues, showStatus, trackers, updateWhenDone, processingComplete };\n}\n\nconst UploadDatasetDialog: FC<Props> = ({ open, handleClose }: Props) => {\n  const { currentProject } = useContext(Store).projectStore;\n  const {\n    initialValues,\n    handleSubmit,\n    showStatus,\n    trackers,\n    updateWhenDone,\n    processingComplete,\n  } = useDatasetFormManagement(currentProject);\n  const formik = useFormik({\n    initialValues,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Upload a new dataset</DialogTitle>\n        <DialogContent>\n          <form id=\"dataset-form\" onSubmit={formik.handleSubmit}>\n            <TextField\n              id=\"version\"\n              label=\"Version\"\n              margin=\"dense\"\n              type=\"text\"\n              value={formik.values.version}\n              fullWidth\n              required\n              onChange={formik.handleChange}\n            />\n            <TextField\n              id=\"description\"\n              label=\"Description\"\n              margin=\"dense\"\n              type=\"text\"\n              value={formik.values.description}\n              fullWidth\n              multiline\n              onChange={formik.handleChange}\n            />\n            <InputLabel>\n              <Input\n                id=\"csv\"\n                type=\"file\"\n                hidden\n                required\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                  const { files } = event.target;\n\n                  if (files && files.length > 0) formik.setFieldValue('dataset', files[0]);\n                }}\n              />\n              Dataset*\n            </InputLabel>\n            <InputLabel>\n              <Input\n                id=\"yaml\"\n                type=\"file\"\n                hidden\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                  const { files } = event.target;\n\n                  if (files && files.length > 0) formik.setFieldValue('metadata', files[0]);\n                }}\n              />\n              Metadata\n            </InputLabel>\n          </form>\n          {showStatus && (\n            <QueryClientProvider client={queryClient}>\n              <StatusBars trackers={trackers} updateWhenDone={updateWhenDone} />\n            </QueryClientProvider>\n          )}\n        </DialogContent>\n        <DialogActions>\n          {processingComplete ? (\n            <Button onClick={() => handleClose()}>Close</Button>\n          ) : (\n            <>\n              <Button onClick={() => handleClose()}>Cancel</Button>\n              <Button disabled={formik.isSubmitting} form=\"dataset-form\" type=\"submit\">\n                Add\n              </Button>\n            </>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default observer(UploadDatasetDialog);\n","import {\n  AppBar,\n  Button,\n  createStyles,\n  makeStyles,\n  Switch,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { observer } from 'mobx-react';\nimport React, { useContext, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Store from '../../Store/Store';\nimport useDropdown from '../Dropdown';\n\nimport { ComparisonTable, DatasetTable } from './DatasetTable';\nimport UploadDatasetDialog from './UploadDatasetDialog';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    colorClass: {},\n    root: {\n      '& .red': {\n        background: '#ff8080',\n      },\n      '& .green': {\n        backgroundColor: '#90EE90',\n      },\n      '& .yellow': {\n        backgroundColor: '#ffff8b',\n      },\n      flexGrow: 1,\n      display: 'grid',\n      height: '100vh',\n      gridTemplateRows: 'min-content 1fr',\n      gridTemplateColumns: '2fr 2fr',\n    },\n  }),\n);\n\nconst ProjectView = () => {\n  const classes = useStyles();\n  const {\n    projectStore: {\n      currentProject,\n      loadedDatasetKey: datasetKey,\n      loadDataset,\n    },\n    search,\n  } = useContext(Store);\n\n  const [openUploadDatasetDialog, setOpenUploadDatasetDialog] = useState(false);\n  const [comparisonView, setComparisonView] = useState(false);\n\n  const datasetOptions = useMemo(() => {\n    const opts =\n      currentProject?.datasets.map((dataset) => ({\n        key: dataset.key,\n        desc: dataset.version,\n      })) || [];\n\n    return opts;\n  }, [currentProject]);\n\n  const { Dropdown: DatasetDropdown } = useDropdown(\n    'dataset-dropdown',\n    'Dataset',\n    '',\n    datasetOptions,\n    datasetOptions.map((d) => d.key).includes(datasetKey) ? datasetKey : '',\n    loadDataset,\n  );\n\n  // const { Dropdown: ComparisonDropdown } = useDropdown(\n  //   'dataset-dropdown',\n  //   'Comparison Dataset',\n  //   '',\n  //   datasetOptions,\n  //   comparisonDatasetKey && datasetOptions.map((d) => d.key).includes(comparisonDatasetKey)\n  //     ? comparisonDatasetKey\n  //     : '',\n  //   loadComparisonDataset,\n  // );\n\n  if (!currentProject) return <div>Unloaded</div>;\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        color=\"transparent\"\n        position=\"static\"\n        style={{ gridColumnStart: 1, gridColumnEnd: 3 }}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            {currentProject.name}\n          </Typography>\n          <DatasetDropdown />\n          <Button\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            variant=\"outlined\"\n            onClick={() => setOpenUploadDatasetDialog(true)}\n          >\n            Upload Dataset\n          </Button>\n          <Button\n            color=\"primary\"\n            component={Link}\n            startIcon={<LaunchIcon />}\n            to={\n              {\n                pathname: '/explore',\n                search,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              } as any\n            }\n            variant=\"outlined\"\n          >\n            Load Dataset\n          </Button>\n          <Switch\n            checked={comparisonView}\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n            name=\"checkedA\"\n            onChange={() => {\n              setComparisonView(!comparisonView);\n            }}\n          />\n          {comparisonView ? (\n            <Button\n              color=\"primary\"\n              component={Link}\n              startIcon={<LaunchIcon />}\n              to=\"/compare\"\n              variant=\"outlined\"\n            >\n              Comparison View\n            </Button>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n      <DatasetTable columnNum={comparisonView ? 1 : 2} />\n      {comparisonView && <ComparisonTable />}\n      <UploadDatasetDialog\n        handleClose={() => setOpenUploadDatasetDialog(false)}\n        open={openUploadDatasetDialog}\n      />\n    </div>\n  );\n};\n\nexport default observer(ProjectView);\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Snackbar,\n  TextField,\n} from '@material-ui/core';\nimport Axios from 'axios';\nimport { observer } from 'mobx-react';\nimport React, { FC, useCallback, useContext, useState } from 'react';\n\nimport { SERVER } from '../../consts';\nimport Store from '../../Store/Store';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n};\n\nconst AddProjectDialog: FC<Props> = ({ open, handleClose }: Props) => {\n  const { loadProjects } = useContext(Store).projectStore;\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState('');\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const createProject = useCallback(() => {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('reset', 'True');\n    Axios.post(`${SERVER}/project/${id}`, formData)\n      .then((response) => {\n        const { message } = response.data;\n        setMessage(message);\n      })\n      .catch(() => {\n        setMessage('Something went wrong!');\n      })\n      .finally(() => {\n        setId('');\n        setName('');\n        setOpenSnackbar(true);\n        loadProjects(id);\n      });\n  }, [id, name, loadProjects]);\n\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Create new project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Please enter name and an unique id for the project.</DialogContentText>\n          <TextField\n            id=\"project-id\"\n            label=\"Project ID\"\n            margin=\"dense\"\n            type=\"text\"\n            value={id}\n            required\n            onChange={(event) => setId(event.target.value)}\n          />\n          <br />\n          <TextField\n            id=\"project-name\"\n            label=\"Project Name\"\n            margin=\"dense\"\n            type=\"text\"\n            value={name}\n            required\n            onChange={(event) => setName(event.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose()}>Cancel</Button>\n          <Button\n            disabled={id === '' || name === ''}\n            onClick={() => {\n              createProject();\n              handleClose();\n            }}\n          >\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        autoHideDuration={2000}\n        message={message}\n        open={openSnackbar}\n        onClose={() => setOpenSnackbar(false)}\n      />\n    </>\n  );\n};\n\nexport default observer(AddProjectDialog);\n","import {\n  createStyles,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { observer } from 'mobx-react';\nimport React, { useContext, useState } from 'react';\n\nimport Store from '../../Store/Store';\n\nimport AddProjectDialog from './AddProjectDialog';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      ...theme.mixins.toolbar,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  }),\n);\n\nconst Sidebar = () => {\n  const classes = useStyles();\n  const { projects, currentProject, loadProjectByKey: selectProject } = useContext(\n    Store,\n  ).projectStore;\n\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      variant=\"permanent\"\n    >\n      <div className={classes.toolbar}>\n        <Typography variant=\"h6\">Projects</Typography>\n      </div>\n      <Divider />\n      <List>\n        <ListItem button onClick={() => setOpen(true)}>\n          <ListItemIcon>\n            <AddBoxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Add Project\"> </ListItemText>\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        {projects.map((proj) => (\n          <ListItem\n            key={proj.key}\n            selected={proj.key === currentProject?.key}\n            button\n            onClick={() => selectProject(proj.key)}\n          >\n            <ListItemIcon>\n              <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={proj.name} />\n          </ListItem>\n        ))}\n      </List>\n      <AddProjectDialog handleClose={() => setOpen(false)} open={open} />\n    </Drawer>\n  );\n};\n\nexport default observer(Sidebar);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createStyles, CssBaseline, makeStyles } from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport React, { FC, useContext, useEffect } from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport Store from '../../Store/Store';\n\nimport ProjectView from './ProjectView';\nimport Sidebar from './Sidebar';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n  }),\n);\n\nconst ProjectHome: FC<RouteComponentProps> = ({ location }: RouteComponentProps) => {\n  const classes = useStyles();\n  const {\n    projectStore: { currentProject, loadedDataset },\n    setQueryParams,\n    debug,\n    redirectPath,\n    search,\n    loadedWorkflowId,\n  } = useContext(Store);\n\n  useEffect(() => {\n    setQueryParams(location.search);\n  }, [location.search, setQueryParams]);\n\n  const instructions = 'Please select a project';\n\n  if (debug && redirectPath === 'explore' && loadedDataset)\n    return <Redirect to={{ pathname: '/explore', search }} />;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Sidebar />\n      {currentProject ? <ProjectView /> : instructions}\n    </div>\n  );\n};\n\nexport default observer(ProjectHome);\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '400px',\n  },\n  media: {\n    height: '300px',\n    margin: '0px',\n    padding: '0px',\n  },\n  grid: {\n    display: 'grid',\n    gridGap: '1px',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridTemplateRows: 'repeat(2, 1fr)',\n  },\n  gridContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nconst Landing = () => {\n  const classes = useStyles();\n\n  const demoList = [\n    'Cluster Complex Demo',\n    'Cluster Simple Demo',\n    'Gapminder World Demo',\n    'Linear Regression Complex Demo',\n    'Linear Regression Simple Demo',\n    'Outliers',\n  ];\n\n  const imageList = [\n    `${process.env.PUBLIC_URL}/landingPictures/clusterComplex.png`,\n    `${process.env.PUBLIC_URL}/landingPictures/clusterSimple.png`,\n    `${process.env.PUBLIC_URL}/landingPictures/gapminder.png`,\n    `${process.env.PUBLIC_URL}/landingPictures/linearComplex.png`,\n    `${process.env.PUBLIC_URL}/landingPictures/linearSimple.png`,\n    `${process.env.PUBLIC_URL}/landingPictures/Outliers.png`,\n  ];\n\n  const linkList = [\n    `/explore?demo=cluster_complex`,\n    `/explore?demo=cluster_simple`,\n    `/explore?demo=gapminder_world`,\n    `/explore?demo=linear_regression_complex`,\n    `/explore?demo=linear_regression_simple`,\n    `/explore?demo=outliers`,\n  ];\n\n  const colabLinkList = [\n    `https://colab.research.google.com/drive/18GdpjL9LD5tQBFoWgAjBScWtjvX9WNA8?usp=sharing`,\n    `https://colab.research.google.com/drive/1WdzfTqhSgCML1iq9inw03Z64Lj8qHc1a?usp=sharing`,\n    `https://colab.research.google.com/drive/1E_5Pw0905aGOnYUo7-RwI2pq2WvTI-j4?usp=sharing`,\n    `https://colab.research.google.com/drive/16DJRqPHgoAw1EFwiKm4PmihG3BRHdOxj?usp=sharing`,\n    `https://colab.research.google.com/drive/1zsupVPrE0rxCZfKR3MlS0DIagvBeP55O?usp=sharing`,\n    `https://colab.research.google.com/drive/1uds9y6vKaZDRjfRCVLbbyBjij6T6i3Vb?usp=sharing`,\n  ];\n\n  return (\n    <>\n      <Typography\n        align=\"center\"\n        style={{\n          margin: '20px',\n          fontWeight: 'bold',\n          fill: '#F2',\n          fontSize: '36px',\n          fontFamily: 'Lato, Helvetica Neue,Arial,Helvetica,sans-serif',\n        }}\n        variant=\"h1\"\n      >\n        Reusing Interactive Analysis Workflows\n      </Typography>\n\n      <div className={classes.gridContainer}>\n        <div className={classes.grid}>\n          {demoList.map((curr) => {\n            return (\n              <Card key={curr} className={classes.root} variant=\"outlined\">\n                <CardContent>\n                  <CardMedia\n                    className={classes.media}\n                    image={imageList[demoList.indexOf(curr)]}\n                    title=\"Cluster Complex Version 1\"\n                  />\n                </CardContent>\n                <CardContent>\n                  <Typography component=\"h2\" variant=\"h5\" gutterBottom>\n                    {curr}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    color=\"primary\"\n                    component={Link}\n                    size=\"small\"\n                    to={linkList[demoList.indexOf(curr)]}\n                  >\n                    View Dataset\n                  </Button>\n                  <Button color=\"primary\" size=\"small\">\n                    <a href={colabLinkList[demoList.indexOf(curr)]}>View Notebook</a>\n                  </Button>\n                </CardActions>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Button\n          color=\"primary\"\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          component={Link}\n          to=\"/project\"\n          variant=\"outlined\"\n        >\n          Project Explorer\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default observer(Landing);\n","import whyDidYouRender from '@welldone-software/why-did-you-render';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport ComparisonHome from './components/Comparison/ComparisonHome';\nimport Explore from './components/Explore/Explore';\nimport ProjectHome from './components/Project/ProjectHome';\nimport './index.css';\nimport Landing from './components/Landing/Landing';\n\nwhyDidYouRender(React, {\n  trackAllPureComponents: true,\n  exclude: [/XGrid|RowCells|GridCell/],\n});\n\n\nconst app = (\n  <HashRouter>\n    <Switch>\n      <Route component={Explore} path=\"/explore\" exact />\n      <Route component={ProjectHome} path=\"/project\" exact />\n      <Route component={Landing} path=\"/\" exact />\n      <Route component={ComparisonHome} path=\"/compare\" exact />\n    </Switch>\n  </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// TODO: Uncomment\n// reportWebVitals();\n"],"sourceRoot":""}